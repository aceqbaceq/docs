получается маунт неймспейс это набор точек монтирования.

==
==
важно что если вот это закоментировть

  mnt1 = mount("none", "/", NULL, MS_REC|MS_PRIVATE, NULL);
    if (mnt1 == -1)
    errExit("mount");



  то вот это не отрабатвыает. вызывает ошиьку

      mnt1 = umount("/proc");
    if (mnt1 == -1)
    errExit("umount");



а целиком кусок вот такой


    int mnt1;


    mnt1 = mount("none", "/", NULL, MS_REC|MS_PRIVATE, NULL);
    if (mnt1 == -1)
    errExit("mount");



    mnt1 = mount("none", "/proc", NULL, MS_REC|MS_PRIVATE, NULL);
    if (mnt1 == -1)
    errExit("mount");



    mnt1 = umount("/proc");
    if (mnt1 == -1)
    errExit("umount");


    mnt1 =  mount("proc", "/proc", "proc", MS_NOSUID|MS_NODEV|MS_NOEXEC, NULL);
    if (mnt1 == -1)
    errExit("mount");


==
кстати важный момент. вот  у нас есть процесс.
и он работает  фс через точки монтрования котоыре указаны для этого 
проецсса вот тутт

cat /proc/$$/mountinfo

положим что мы для какойто точки монторвангия "/mnt/A" создали новую точку
монтирования. скажем до этого было


# cat /proc/$$/mountinfo | grep "/sys "
24 21 0:20 / /sys rw,nosuid,nodev,noexec,relatime shared:6 - sysfs sysfs rw

создаем еще одну точку монтирования
# mount --bind /sys /sys

смотрим что стало
# cat /proc/$$/mountinfo | grep "/sys "
24 21 0:20 / /sys rw,nosuid,nodev,noexec,relatime shared:6 - sysfs sysfs rw
330 24 0:20 / /sys rw,nosuid,nodev,noexec,relatime shared:6 - sysfs sysfs rw

а теперь смотрим что покажет эта же команда для другого процесса который
лежит в этом же маунт неймспейсе
# cat /proc/$$/mountinfo | grep "/sys "
24 21 0:20 / /sys rw,nosuid,nodev,noexec,relatime shared:6 - sysfs sysfs rw
330 24 0:20 / /sys rw,nosuid,nodev,noexec,relatime shared:6 - sysfs sysfs rw

тоесть такой же список точек монтирования увидит другой процесс вэтом же  маунт 
неймспейсе.

также ннасколко я понимаю что все новые обращения на /sys будут идти уже через
точку монтирования 330. и всегда если есть несколько точек монтирования для одной папки
то обращение процессов идет к точке которая имеет самый максимальный номер

к сожалению как то добраться до точки монтирования через ее ID никак нельзя. 
например чтобы ее отмонтировать. umount работает всегда либо с путем "/path1"
либо с устройством которое на бекенде. вот справка из man umount

 umount -a [-dflnrv] [-t fstype] [-O option...]
 umount [-dflnrv] {directory|device}...

тоесть тут никак не засунуть ID точки монтирования. также походу замечу что umount 
не умеет работать с  UUID (в отличие от mount) плюс ко всему UUID присваивается не точке
монтирования а ФС на разделе диска, причем еще что более важно UUID создается на фс
только если сам драйвер ФС поддерживает эту опцию. и он меняется или создается для
каждой фс через свои утилиты. посмотреть список всех UUID для всех фс можно командой

	$ blkid -o list

это значит что в целом для точек монтирования нет никаких UUID. когда мы делаем mount и 
там указываем uuid то насколлько я понимаю это заставляет ядро через драйверы фс искать
на всех разделах этот uuid то это способ найти бекенд тоесть ядро вместо /dev/sda1 
ищет uuid но уже найдя к процессу маунта и созданию точки монтирования этот uuid не имеет
отношения. тоесть у точки монтирования есть какойто бекенд. и насколько я понимаю
он выражается в minor:major числах (обозначая устройство на бекенде ) для каждой точки 
монтирования. на каких устройствах на их фс есть uuid на каких то нет. прямого отношения
к точке монтирования uuid неимеет

$ cat  /proc/$$/mountinfo
25 32 0:23 / /sys rw,nosuid,nodev,noexec,relatime shared:7 - sysfs sysfs rw
26 32 0:5 / /proc rw,nosuid,nodev,noexec,relatime shared:12 - proc proc rw
27 32 0:6 / /dev rw,nosuid,relatime shared:2 - devtmpfs udev rw,size=8032864k,nr_inodes=2008216,mode=755
28 27 0:24 / /dev/pts rw,nosuid,noexec,relatime shared:3 - devpts devpts rw,gid=5,mode=620,ptmxmo


итого при отмонтировании для какойто папки "/path1" как я понимаю umount уничтожает 
точку монтирования которая имеет максимальный номер если таких точек монтирования 
несколько 
  11 "/path1"  shared:90
  19 "/path1"  shared:90

==
ксатти можно вот еще так посмотреть для  каждй точки монтивоарния 
какой UUID если он есть то какой он он на фс которая на бекенде

 findmnt -o PARENT,ID,TARGET,PROPAGATION,UUID
 
==
короткие хорошие примеры на счет точек монтования
https://www.kernel.org/doc/Documentation/filesystems/sharedsubtree.txt
==

сделаи новый нейсмейс. значит создали группу новых точек монтирования.
в тоже время это копии с исходных монтирования. поэтому то что вино в исхоной
точке монрования видно и в копии. также новые точки и старые входят в одни пир
группы. это знчит если создать субточку монтиования то она видна во всех пир групах.
тоесть если / это точка мониования. то если я создам новю субточку монтирования для
корня /23  в одном неймсейсе она будет видна в другом неймспейсе. 

длаее в новомо нейсеепефсе я делаюьт / приватным. 




