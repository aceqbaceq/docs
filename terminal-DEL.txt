| terminal
| console
| gnome-terminal
| xterm


вот у нас есть черное окно от gnome-terminal
я тыкаю кнопку как потом оно куда летит?


keyboard - Xorg - gnome-terminal -/dev/ptmx -- 
-- tty driver -- /dev/pts/10 --- bash



я тыкаю кнопку в черном графичеаком окне. оно 
летит в драйвер клавы а от туда граф подсистему услонво говоря в Xorg 
процесс. оно через локальный юникс сокет посылает
этот байт в  gnome-terminal он это обрабаывает
и (тут важно)

gnome-terminal связан с прцоессом bash 
через связку


gnome-terminal                     bash
         /dev/ptmx -----  /dev/pts/10

причем между ними еще в ядре сидит tty driver



gnome-terminal                                 bash
         /dev/ptmx --(tty-driver)---  /dev/pts/10


так вот настройках гном-терминал 

  edit-preferences-profiles-comptibility


там есть такие настроки как 

 backspace key generates:
 delete key generates:

и у них ест вот такие пункты
ctrl-h
ascii del
esq sequence

как это работает? и хер ли оно тут делает?
а раобтает это так что когда
мы тыкнули кнопку backspace или del
то она из граф подсистемы как я описал выше
влетает внутрь процесса гном-терминал
и он этот байт может сопоконйнько заменить на лету.
а уже потом этот байт шлется в tty driver через
/dev/ptmx
а уже только потом через него  в баш. 
так вот получается что прежде чем байт с клавы
попадет в tty driver он вначале попадает в gnom-termi
nal. поэтому он может менять этот байт на лету
поэтому мы в гном терминал настроках можем управлять
какой байт попадет в ttydriver если мы нажали
на клаве кнопки backspace или del

также в этом же меню есть натсройка 
  Encoding:

она нужна уже в обратном направлении. когда 
из tty driver в /dev/ptmx летит каойто байт
влтает в gnom-terminal то он его должен проинтерпре
тирвать в какойни будь глиф который он уже потом
пошлет на граф подсистему (в Xorg) поэтому тут
и играет роль закладка encoding. мы получается можем
из баша или другой юзер пргарммы слать на gnom-ter
minal байты в дикованиной кодриовке типа koi8-r
и чтоы гном0-терминал мог прроинтерпетировать эти
байты в нужные нам глифы можно поменять кодировку
в его этом меню.

так вот  с помощью напрмиер 

  $ strace -xx cat

можно выяснить какой байт код гном-терминал шлет
в /dev/ptmx а значит и в tty driver а значит и в
дальнейший /dev/pts/10 и в юзер приложение в конечно
м итоге при нажатии на кнопку DEL
и пнуктах в меню

Contrl-H
ASCII DEL
Esc sequence
TTY ERASE


давай выяснять.

   $ strace -xx cat

ключ -xx даеет то что в выводе strace в сисколах
read() write() он будет риосвать hex вид байтов а
не трансировать их в граф символы.

нажимаем del и Enter (потому что  у нас на термина
ле канон режим. поэтому байты из tty driver попдают
в юзер приложение только после нажатия enter)

у меня выставлено в gnome-terminal

  DELelete key generates: ESCape sequence

вижу на экране

read(0,"\x1b\x5b\x33\x7e\x0a", 262144) = 5
write(1, "\x1b\x5b\x33\x7e\x0a", 5
)  = 5

на самом деле меню названо делиьно. нало его
было бы назвать "во какой байт gnome-terminal
преобразует байт прилетевший с клавы при нажатии
DEL и направляет его в tty drvier"

тоесть я хочу скзаать что по факту DEL генеиррует
другой байт кодд а в этом меню мы его МОДИЙИЦИРУЕМ.

итак получается что если в гном-териминал выставлено

  DELelete key generates: ESCape sequence

то он преобразует байт нажатия DEL в 

     \x1b\x5b\x33\x7e

и это байт код прилетит в tty driver а затем в юзер
процесс который сидит за терминалом. скажем в баш

а что это за  секвенс

\x1b\x5b\x33\x7e = ESC  [  3  ~

в умной литература по термиалам ESC [  называют CSI
в итоге 

      CSI 3 ~

именно так и нужно искать в инете инфо по этой
секвенс.


ИТУТ ОТКРЫЛСЯ ОЧЕРЕДНОЙ АД связанный с DEL
welcome to hell

итак начну расписывать АД.

для начала малек в сторону вот тут
 
  https://en.wikipedia.org/wiki/Newline

расписан тот ад о том что какие символы LF или CR+LF
дожны исплзоваться чтобы на приентере или дсиплее
у нас курсорк\каретка отехала в начало строки
и прокрутило курсор на одну строку вниз. мудота
та еще. могу еще раз скаазать что что касается 
линукса то тут это дело регулируется в двух местах.
в настройках самого терминала можно отрегулировать
что если в него прилетает LF или CR то терминал 
автоматом реагирует так как бутто в него приелетел
LF+CR . а можно настроить что прилет LF дает 
толко LF а прилет CR дает только CR. дело в том
что в линуксе вот каконо есть LF это только опускание
каретки на одну строку вниз без вовзарта в начало
строки. а CR это пеерход в начало строки без 
опускниея курсора вниз.
есь и второе место это tty driver так вот в нем
есть настройки о том что если поток летит на дисплей
то если летит LF то заменить его на LF+CR
и за счет этого трюка когда мы шлем текст из файла
на экране терминала и в тексте у нас идет LF(0x0A)
то в терминал приелетает LF+CR и мы видим на экране
перенос строки.

возвращаемся к кнопке DEL
начинаем читать про телеприентеры
  https://en.wikipedia.org/wiki/Teleprinter
я если четсно непонял в чем раница между
телпринтером и телетайпом. ну вроде как теелетайп
это частный случай телеприентров в том плане что
телппринтеры работали через разные типы каналов
а телетайп работаел через общие телефонные линии.
но это неточно. хер поймешь.
так вот там написано что были телепринтеры. это
как печатная машинка но ты тыкаешь на кнопки
и она во первых генерирует печатный знак на бумаге.
а еще она печатает на перфоленте 5-ти битовый 
значок либо 7-ми битовый значок.тоесть перфолента
была как жесткий диск на компе только из бумаги.
на котором печатлся байт. в одном случае пятибитовый
(код бодо) в другом сулчае семибитовый (ASCII).
и далее это сигнал улетао по каналу связи на такой
же удаленный телепринтер. 
далее переходим к известной модели  

  teletype model 33  ASR




ASR значит что у него была клава. был перфопринтер.
написано что клава была такова что машина в итоге
гегнерировала только заглавные буквы от ASCII.
генерация байт кодов мелкийх букв не была предусмо
трена.


https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/Mappa_Teletype_ASR-33.jpg/440px-Mappa_Teletype_ASR-33.jpg


это была одна изпервых которая использовала семи
битный способ кодировки. тоесть ascii. мы жали на 
кнопку и она хеачила в канал связи 7 бит плюс
один бит контроля четности. 
