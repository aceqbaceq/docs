| youtube 
| youtube-dl
| ffpa 
| vlc

значит заебало открывать ютуб в броузере только для того чтобы послушать
чтото в режиме аудио без видео. слишком жирная сука этот хром и ютуб.

итак заача - нужно чтобы даешь ссылку на ютубе и слушаешь только аудио.

как обычно это все оказалась кокнтеная ЕБАЛА

есть куча программ убенаских ( на питоне как все колхозно пионреско уебанское) которые
уже нерабоатают.

итак есть питон инвалид 
	youtube-dl

он в основном предназначен чтобы скачивать видео а не перенаправлять их другой программе.
 
общая история вот какая - сссылка из ютуба это всего навсего ссылка на HTML страницу
а нам нужна прямая ссылка на видео.  вот этот youtube-dl позволит нам ее выцыганить

значит первое что надо сделать это эту прогу потавить . стаивится она вот как 
надо скачаьт файл и засунуть его в папку в которой бы линукс у нас ее потом нашел.
тут мы ловим наебалово. прогу можно скачать с сайта и можно с гитхаба. сайт заблокирован
каким то там гамбурским судом. поэтому нужно скачивать с гитхаба

скачивать надо отсюда
	https://github.com/ytdl-org/ytdl-nightly/releases
захоим выбираем релиз и скачиваем 

	$ wget https://github.com/ytdl-org/ytdl-nightly/releases/download/2024.05.16.1/youtube-dl
	$ sudo cp ./youtube-dl /usr/local/bin
  $ sudo chmod +x /usr/local/bin/youtube-dl
проверяем что у нее нормальные пермишны
	$ stat  $(which youtube-dl)
  	File: /usr/local/bin/youtube-dl
	Access: (0755/-rwxr-xr-x)  Uid: (    0/    root)   Gid: (    0/    root)

по факту внутри питон executable. тоесть это скрипт поитона высрранный в бинарник
	$ file $(which youtube-dl)
	/usr/local/bin/youtube-dl: a /usr/bin/env python script executable (binary data)

  теперь надо питон3 поставить
  # apt-get install python3
  # sudo ln -s /usr/bin/python3 /usr/bin/python
  

далее следущий шаг нам нужно для ссылки ютубовской понять какие форматы доступны

 $ youtube-dl  -F   'https://www.youtube.com/watch?v=NOpS4qGILyY'
...
249-drc      webm       audio only audio_quality_low   47k , ....
249          webm       audio only audio_quality_low   48k , ....
...
...

вобщем стримов много. в основном это либо контейнер тлоько с аудио либо 
только с видео. и есть два контйенера когда сразу  в нем и видео и аудио.
я покажу три контейнера самых интернсных

249      webm       audio only audio_quality_low   51k , (48000Hz), 19.29MiB
18        mp4        640x360    360p  25fps, mp4a.40.2 (44100Hz), 129.67MiB
22        mp4        1280x720   720p  25fps, mp4a.40.2 (44100Hz) (best)

тоесть один это аудио.
второй и третий это аудио+видео



слева мы видим "номер формата" справа что из себя мы получим. есть форматы только 
с аудио (что нам и надо ) есть фораты тлко с видео итакдалее.

далее следущий шаг и наебалаово. это туопрылая питон поделка не умеет делать 
перенаправление в stdout если указать какой конкртено поток (качество) мы хотим 
качать. она выбросить ошииббку

 $ # youtube-dl -f 251 https://www.youtube.com/watch?v=vdRJMuOFO88 -o - | ffplay -nodisp -autoexit -i -
ERROR: unable to open for writing: [Errno 13] Permission denied: '--Frag0.part'
это именно ошиибка youtube-dl я проверил


эта хуйня срабоатет только если не указывать какой поток мы хотим скачать тогда 
она качает какйото там поток  даже незнаю какое там качество и оно конечно
будет содержаь видео а мне это нахуй ненужно. поэтому мы делаем вот как мы с поомщью данной проги
получаем от нее только прямую ссылку на поток 

	$ youtube-dl -g -f 249  'https://www.youtube.com/watch?v=NOpS4qGILyY'

далее эту прямую ссылку на поток нам теперь надо подставит в прогу которая умеет
читать потоки и воспроизвоидить это ffpa
и мы подставим эту ссылку в один присест 

	$  ffplay -v verbose -nodisp  -autoexit  $(youtube-dl -g -f 249  'https://www.youtube.com/watch?v=NOpS4qGILyY')


берем ссылку с ютуьа и всталяем в эту команду
и в терминале через ffplay мы будем качать маленткий аудиоптом не засранный видео
инфомрацией.

там на экране будут гробы текста. но важное будет вот что

Input #0, matroska,webm  - это тип контенера
 Stream #0:0(eng): Audio:  - это поток . это в контенеере тлько аудио то поток будет один
                             и показан тип потока это аудио поток. так что все окей.


вот как обычно такая ебала с одной стоорны ебаный ютуб выкрчивающй руки. с другой стороны
ебанй хром размром с планету. с третьей стороны колхозники питон рукожопы.

велком ту зе рил воролд как говорил товарищ морфеус


я вставил в ~/.bashrc  такую функцию


function ffc() {

  if [ -z "$1" ]; then
    {
      echo "error: usage \$ ffc  url ";
      return 1
    }
  fi

  local  u=$( sed 's/\(&.*\)//' <<< "$1" )

  ffplay -v verbose -nodisp  -autoexit  $(youtube-dl -g -f 249  "$u")

}






открываем новый терминал проверяем что функция создалась
	$ type ffc
    ffc is a function
порядок


шарманка запускается вот так

	$ ffc 'https://www.youtube.com/watch?v=NOpS4qGILyY&pp=ygUHcGFycm90cw%3D%3D'

замечу что очень важно заключить сссылку в '' кавычки иначе баш когда
анализирет строку то он видит & и думает что мы просим команду зауптить  с беккграунд
режиме. а нам это ненадо.

значит через 	
	$ youtube-dl -g -f 249  "https://"
можно полуить конеснчую ссылку на стрим. 
так вот эту ссылку можно подставит в vlc "open network stream"
так вот я проверил что работает и жрет меньше ресурса ffplay или vlc.
проверяел я вот на этом формате

249      webm       audio only audio_quality_low   51k , (48000Hz), 19.29MiB

ffpa жрет 4% cpu а vlc жрет 10%

далее выяснлилась залупа. ffpa неимеет нормальной промотки. тоесть если его заустиь 
с -nodisp у него вообще нет промотки . а если без этой опции то он рисует экранчик
в котором рисует гистгрраммы и там можно через кнопки максимум мотать на 1 минуту туда 
сюда. это полная хуйня. а у vlc есть оличаня промтка. поэтмоу я обратился к vlc 
я померил его скокрость 

на всех трех форматах

249      webm       audio only audio_quality_low   51k , (48000Hz), 19.29MiB
18        mp4        640x360    360p  25fps, mp4a.40.2 (44100Hz), 129.67MiB
22        mp4        1280x720   720p  25fps, mp4a.40.2 (44100Hz) (best)

он жрет одинаково 10-12% cpu без разниа какой открвать.


в  итоге  я остановился вот на таом варианте


function vlc2() {

  if [ -z "$1" ]; then
    {
      echo "error: usage \$ vlc2  \'url\' [249/22] ";
      return 1
    }
  fi

local format;
case "$2" in
  249  ) format="249";;
  22   ) format="22";;
  *             ) format="22" ;;
esac   

  local  u=$( sed 's/\(&.*\)//' <<< "$1" )

   vlc  $(youtube-dl -g -f "$format"  "$u")   0>/dev/null 1>/dev/null 2>/dev/null &
 
}


исползьзование
  $ vlc2 'https://yout....'


суперважно заклюать ссылку на ютую в одинарные кавыычки. так как в ссылке есть "&"
и кодга баш видит этот символ и нет '' то он думает что мы просим команду засунтуть 
в беккграуден режим. а это же часть ссылки потому чтобы баш глоббинг не делал нужны 
одинарные кавыячки



вроде все с этой ебалой


