     1                                  section .data
     2 00000000 56616C75653A2000            msg db 'Value: ', 0x00   ; Сообщение для вывода (строка с нулевым символом в конце)
     3                                    ; Время сна: 60 секунд и 0 наносекунд
     4 00000008 3C00000000000000            timespec dd 60, 0  ; 60 секунд, 0 наносекунд
     5                                  
     6                                  section .bss
     7 00000000 ????????                    num resb 4               ; Резервируем 4 байта для числа (не инициализировано)
     8                                  
     9                                  section .text
    10                                      global _start            ; Точка входа в программу
    11                                  
    12                                  _start:
    13                                      ; Сохраняем текущие значения регистров и настраиваем стек
    14 00000000 55                          push    ebp              ; Сохраняем указатель базы стека
    15 00000001 89E5                        mov     ebp, esp         ; Настроим указатель стека на новый фрейм
    16                                  
    17                                      ; Выделяем память для локальной переменной (4 байта)
    18 00000003 83EC02                      sub     esp, 2           ; Выделяем 4 байта для локальной переменной
    19                                  
    20                                      ; Присваиваем значение локальной переменной
    21 00000006 66C745FE4E0A                mov     word [ebp-2], 0x0A4E  ; Присваиваем значение 123 локальной переменной
    22                                  
    23                                      ; Загружаем значение локальной переменной в eax для использования
    24                                      ;mov     eax, [ebp-4]     ; Загружаем значение локальной переменной в eax
    25                                  
    26                                      ; Печатаем сообщение "Value: "
    27 0000000C B804000000                  mov     eax, 4           ; Системный вызов sys_write (4)
    28 00000011 BB01000000                  mov     ebx, 1           ; Дескриптор файла stdout (1)
    29 00000016 B9[00000000]                mov     ecx, msg         ; Адрес строки
    30 0000001B BA07000000                  mov     edx, 7           ; Длина строки "Value: "
    31 00000020 CD80                        int     0x80             ; Вызов системного вызова
    32                                  
    33                                      ; Печатаем число из стека
    34 00000022 B804000000                  mov     eax, 4           ; Системный вызов sys_write (4)
    35 00000027 BB01000000                  mov     ebx, 1           ; Дескриптор файла stdout (1)
    36 0000002C 8D4DFE                      lea     ecx, [ebp-2]       ; Адрес памяти для вывода числа
    37                                  ;    mov  word   [ecx], 0x0A4E   ; Сохраняем число в памяти для вывода
    38 0000002F BA02000000                  mov     edx, 2           ; Длина данных (4 байта)
    39 00000034 CD80                        int     0x80             ; Вызов системного вызова
    40                                  
    41                                      ; 
    42 00000036 8D0D[00000000]              lea ecx, num ;
    43 0000003C C705[00000000]7361-         mov     dword [num],   0x68736173 ;
    43 00000044 7368               
    44 00000046 66C705[04000000]61-         mov     word  [num+4], 0x0a61;
    44 0000004E 0A                 
    45                                  ;    mov dword [num+8], 0x68730a00;
    46 0000004F B804000000                  mov     eax, 4           ; Системный вызов sys_write (4)
    47 00000054 BB01000000                  mov     ebx, 1           ; Дескриптор файла stdout (1)
    48 00000059 BA06000000                  mov     edx, 6          ; Длина данных (4 байта)
    49 0000005E CD80                        int     0x80             ; Вызов системного вызова
    50                                  
    51                                     ;   
    52 00000060 83EC15                     sub     esp, 21               ;
    53 00000063 C6042473                   mov     byte [esp],    0x73   ;
    54 00000067 C644240168                 mov     byte [esp+1],  0x68   ; 
    55 0000006C C64424026C                 mov     byte [esp+2],  0x6c   ;
    56 00000071 C644240361                 mov     byte [esp+3],  0x61   ;
    57 00000076 C644240420                 mov     byte [esp+4],  0x20   ;
    58 0000007B C644240573                 mov     byte [esp+5],  0x73   ;
    59 00000080 C644240661                 mov     byte [esp+6],  0x61   ;
    60 00000085 C644240773                 mov     byte [esp+7],  0x73   ;
    61 0000008A C644240868                 mov     byte [esp+8],  0x68   ;
    62 0000008F C644240961                 mov     byte [esp+9],  0x61   ;
    63 00000094 C644240A20                 mov     byte [esp+10], 0x20   ;
    64 00000099 C644240B70                 mov     byte [esp+11], 0x70   ;
    65 0000009E C644240C6F                 mov     byte [esp+12], 0x6f   ;
    66 000000A3 C644240D20                 mov     byte [esp+13], 0x20   ;
    67 000000A8 C644240E73                 mov     byte [esp+14], 0x73   ;
    68 000000AD C644240F68                 mov     byte [esp+15], 0x68   ;
    69 000000B2 C64424106F                 mov     byte [esp+16], 0x6f   ;
    70 000000B7 C644241173                 mov     byte [esp+17], 0x73    ;
    71 000000BC C644241273                 mov     byte [esp+18], 0x73    ;
    72 000000C1 C644241365                 mov     byte [esp+19], 0x65    ;
    73 000000C6 C64424140A                 mov     byte [esp+20], 0x0a    ;
    74                                     
    75 000000CB B804000000                 mov     eax, 4           ; Системный вызов sys_write (4)
    76 000000D0 BB01000000                 mov     ebx, 1           ; Дескриптор файла stdout (1)
    77 000000D5 8D0C24                     lea     ecx, [esp]       ;
    78 000000D8 BA15000000                 mov     edx, 21          ; Длина данных (4 байта)
    79 000000DD CD80                       int     0x80             ; Вызов системного вызова
    80                                  
    81                                  
    82                                   ; Указание на аргументы для nanosleep
    83 000000DF BB[08000000]                mov ebx, timespec   ; Адрес структуры timespec (первый аргумент)
    84 000000E4 31C9                        xor ecx, ecx        ; Второй аргумент — NULL (пустой указатель)
    85                                  
    86                                      ; Системный вызов nanosleep
    87 000000E6 B8A2000000                  mov eax, 162         ; Номер системного вызова nanosleep (для 32-битных систем)
    88 000000EB CD80                        int 0x80             ; Вызов системного вызова через прерывание
    89                                  
    90                                  
    91                                    
    92                                      ; Восстанавливаем указатель стека
    93 000000ED 83C417                      add     esp, 23          ; Восстанавливаем значение esp
    94                                  
    95                                      ; Восстанавливаем старое значение ebp
    96 000000F0 5D                          pop     ebp              ; Восстанавливаем значение ebp из стека
    97                                  
    98                                  
    99                                      ; Завершаем программу
   100 000000F1 B801000000                  mov     eax, 1           ; Системный вызов sys_exit (1)
   101 000000F6 31DB                        xor     ebx, ebx         ; Код возврата 0
   102 000000F8 CD80                        int     0x80             ; Вызов системного вызова
   103                                  
   104                                  
