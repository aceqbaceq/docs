helm

в чем приятный прикол хельма. что можно дать команду 
и сгенерировать конечный yaml который можно установить
руками 
так вот в этом yaml будет видно что конкретно хотел установить
хельм в куб 

в этом плане интересно что там придумал хельм для эластика
дело втом что мы же число реплик каждый раз меняем а в конфиге
эластика надо указать все изнаальных мастеров. инетерерсно как 
хельм выкрутился из этого

значит я взял хельм чарт эластика. и в файле
	values-master.yaml
поставил число реплик 10

далее я сформировал конечный yaml чтобы посмотреть какой 
yaml хотел хельм накатывать на куб

$  helm template . -f ./values-master.yaml  --namespace el-1 > ./el-1-data.yaml

так вот читаем этот файл. самое интересное место это как 
выглядит StatefullSet


в нем есть две переменные которые нас особо интересуют
	cluster.initial_master_nodes
	discovery.seed_hosts

первая переменная 
	cluster.initial_master_nodes
задает какие эластик имена имеют мастер ноды
для начальной стадии разворота эластика с нуля. на начальной стадии
все доожны понимать какие ноды яввляются по дефолту заданными мастерами.
важно здесь то что имена эти неимеют отношения к DNS именам это чисто 
эластиковские имена которые задаются руками на каждой ноде в конфиге 
elasticsearch.yml в строке 
	node.name vasya
я это к чему я это к тому что для этой переменной cluster.initial_master_nodes не получится подставить какую то переменную
тут надо тупо перечислить все названия мастер нод. а если у нас их 100.
што прям сто штук перечислять через запятую?
так вот в хельме да. они просто перечисляют через запятую.

$ cat  el-1-data.yaml
...
 - name: cluster.initial_master_nodes
            value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2,elasticsearch-master-3,elasticsearch-master-4,elasticsearch-master-5,elasticsearch-master-6,elasticsearch-master-7,elasticsearch-master-8,elasticsearch-master-9,"
   
		  - name: discovery.seed_hosts
            value: "elasticsearch-master-headless"
          

это очень круто что  в хельм можно увидеть конечный yaml
и поэтому можно понять что же конкретно хельм будет пихать на куб

============

