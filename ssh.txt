ssh

есть такой файл ~/.ssh/config

в него можно много чего вставлять

HOST  vasya

параметр HOST это алиас для  хоста при доступе по ssh.

если честно неочень понятно зачем это были им городить 
если есть доменная система DNS, однако они нагородили (создатчики ssh проги)

HOST означает ту хрень которую мы будем писать после ssh в командной строке
например


$ ssh vasya
$ ssh petya

если мы хотим для этих хреней особые параметры подключения то мы в 
~/.ssh/config пишем

HOST vasya
HOST petya

также в строке HOST может быть несколько алиасов. они перечисляются через пробел.

HOST vasya petya klava


но это только начало секции. ниже HOST мы уже прописываем так какие 
кастомные параметры мы хотим для них сделать.


параметр HOSTNAME. он неиспользуется сам по себе. его должен предварять
параметр HOST

HOST vasya
   HOSTNAME 8.8.8.8 
   
 
тогда когда мы в строке напишем

$ ssh vasya

то ssh заглянет в конфиг и в реальности постучится на сервер вот так

ssh 8.8.8.8

таким образом HOST как бы выполняет роль доменного имени 
а HOSTNAME как бы выполняет роль IP адреса в который он как бэ резолвится 
ssh прогой и уже именно под ним он стучится на сервер

или 

HOST vasya petya klava
	 HOSTNAME 8.8.8.8

или более диковынные приемчики HOST

Host 192.168.0.?

Host *.co.in

Host *

	 

в HOSTNAME может быть нетолько IP но и доменное имя 
например

HOST vasya
	HOSTNAME mail.ru
	
	
следущий параметр это user

HOST vasya
	HOSTNAME 8.8.8.8
	user pupkin
	
таким образом когда мы 

$ ssh vasya 

то по факту будет 
$ ssh 8.8.8.8 -u pupkin


аналогично параметр port

также можно заходить под логином паролем. 
скажем при таком конфиге 
	
HOST vasya
	HOSTNAME 8.8.8.8
	user pupkin


вход будет под юзер pupkin и будет под логином паролем.

а можно входить вместо пароля под юзер\RSA ключ

тоесть RSA ключ вместо пароля.

тогда конфиг будет 


HOST vasya
	HOSTNAME 8.8.8.8
	user pupkin
	IdentityFile ~/.ssh/mykey
	
причем тут тоже мудота. как пишут в инете. опция IdentityFile даже 
если мы указали какой кастомный ключ мы хотим юзать все равно вначале
шлет на удаленный хост ключ дефолотовый ~/.ssh/id_rsa или ~/.ssh/id_dsa 
а если удаленный хост это отвергает то тогда уже наш кастомный.
поэтому чтобы этой мудоты небыло также надо добавить опцию

  IdentitiesOnly yes
  
  

HOST vasya
	HOSTNAME 8.8.8.8
	user pupkin
	IdentityFile ~/.ssh/mykey
    IdentitiesOnly yes
	
	
с IdentitiesOnly yes будет слаться только тот ключ который мы указали. ура товарищи.


далее есть такая хрень. опция LocalForward

вот мы зашли на сервер по ssh
получается между нашим компом и удаленным поднялось TCP содинение вида

наш_IP:некий порт <-------> удаленный_IP:22

так вот если мы заюзаем опцию LocalForward 



HOST vasya
	HOSTNAME 8.8.8.8
	user pupkin
	IdentityFile ~/.ssh/mykey
    IdentitiesOnly yes
    LocalForward 3308    localhost:9200


то когда мы зайдем на удаленный комп по ssh
то и на нашем компе и на удаленном сервис ssh начнет слушать дополнительно порты.
а именно

	на нашем компе он начнет слушать порт 3308 причем для IP=127.0.0.1
   причем именно прям бинарник ssh ( потому что если сокет какойто 
   поднят на компе его поднял какойто конкретный бинарник)

	$ netstat -tnlp
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 127.0.0.1:3308          0.0.0.0:*               LISTEN      31349/ssh

а на удаленном компе ssh неподнимает никакой доп сокет для себя нет.
там уже должен быть поднят сокет каким то сервисом. 

причем между компами никакого дополнительной tcp конекшнена несоздается.
далее схема такая

если мы на нашем компе обратимся по сокету  127.0.0.1:3308
то ssh перенеправить через наше текущее ssh соедниение реквест (проксирует)
на удаленный комп на его сокет localhost:9200 
таким образом мы имеем проброс порта. обращаясь на сокет нашего компа
мы попадаем на сокет удаленного компа. 
едиснвтенное что непонятно это как на удаленном компе система различает 
пернаправлять реквест  который пришел на localhost:9200 на удаленный мой комп 
или нет. может там в iptables прписываются доп правила?

в любом случае вот такое назначение опции localforward. пробросить локаьный порт
на удаленный комп через ssh соединение.

при этом опять же важно понимать что порты localforward никоим образом невлияют
на порты по которым устанавливается самое ssh содеиненеи.

опция ProxyCommand - позволяет указать первый ssh сервер через который мы хотим попасть на 
другой ssh сервер

например ProxyCommand ssh -q -A vasya@kuku nc %h %p

-q = quiet mode
-A = enable forward как я поимаю именно эта опция позволяет аутентифицроваться
на одном хосте и на втором уже этого повторно делать ненадо

vasya это логин
kuku это alias первого ssh сервера. раз алиас значит
надо его распиывать в ~/.ssh/config  

nc это утилита netcat. и эта хрень тоже участвует в проброске TCP
содененеия с одного компа на другой. 
с этим надо еще разбираться.

   
------
для того чтобы при входе в ssh ненужно было вводить пароль
от RSA приватного ключа то нужно запустить ssh agent

как япроверил от имени непривлигорванного пользлователя. тоесть под тем же
юзером что и тот юзер под которым ты входишь в ssh


$ ssh-agent

провереяем что он запутился как процесм

$ ps aux | grep ssh-agent

далее надо добавить в него налету приватный ключ

$ ssh-add ~/.ssh/название_приватного_ключа

готово.

после перзагурзки компа опять все заново.

----------------


-----