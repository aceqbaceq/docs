traefix

у него есть штуки из арехитектуры

entry points:
 - это порты сетевые. через которые траефки принимает входящий трафик


routers :
 - эта хрень которая управляет на какой сервис нарпавить влетевший поток


 - middleware:
 сидят между роутерами и сервисами. позволяют модицифировать 
 поток летяший туда или обратно


 - services:
 конечная точка сброса потока который влетел в траефик


 ===
 траефик имеет в композер кофниге строку


 command: --api.insecure=true --providers.docker

 эта опция она меняет параметр CMD но не при создании имадже
 как это ест у CMD для Dockerfile а она менет CMD  при запуске контейнера.

 вот что мы увидим в сойствах уже запущенного контейнера

           "Cmd": [
                "--api.insecure=true",
                "--providers.docker"]



еще если глуюбже подуть то  command:  походу пьесы это полны аналог того что кода мы запускаем
докер руками то мы руками чтот вбили вот так

$ docker  .....   image  "--api.insecure=true" "--providers.docker"

вот в чем глубокий смысл опции comamnd: в докер комопзер конфиге.
и это логчно. так как композер это просто некая обертка чтобы docker run незапускать руками. 
вот и все. тоесьт кеще раз command^ он неменяет свойства  имаджа который собиратеся или скачивыается!
он имадж нетрогает. он по друную стадию - когда запускается контейенр то он туда вбивает разные
параметры. этот параметр это все те кастомные опции которые вбиваются после имени имаджа!

посмторим что стоитв ентрипоинт в имадже трафика

 docker inspect traefik:v2.10 | grep -iE "entry"  -A 4
            "Entrypoint": [
                "/entrypoint.sh"
            ],


  таким макаром при старте траефика внутри контейнера будет запущено:

(внутири контейнера)$ /entrypoint.sh  "--api.insecure=true" "--providers.docker"

теперь понятно!


написано что command: можно вбтивать в двух формах

command: bundle exec thin -p 3000
или
command: ["bundle", "exec", "thin", "-p", "3000"]

и в отичие от CMD как я понял в случае command: вобще похеру в какой форме. результат 
будет один и тот же




посморим на докер композ конфиг для траефка



vversion: '3.5'

networks:
   vasya:

services:
  reverse-proxy1:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    command: >
               --api.insecure=true 
               --providers.docker
    ports:
      # The HTTP port
      - "90:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8090:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - vasya






это композер в итоге запустит вот такую команду

$ docker run   -p 90:80      \ 
               -p 8090:8080   \
               -v /var/run/docker.sock:/var/run/docker.sock:ro  \  # (рид онли доступ мы даем только)
               traefik:v2.10   \
               --api.insecure=true  \
               --providers.docker

ну и там еще с сетью будет какой то ключ. ладно. вигаем дальеш


чтоважно сказать про комозпер конфиг трафека:
одна часть настроек предназначена чтобы траефик изунтри контейнера запустил 
некотоыре свои фичи. чтобы он их актививроал.
а вторая часть настроек композера это мы снаружи к траефкику прикрепляем неоходимые 
ресурсы хоста. потому что чтобы траефик заработал надо чтобы он со свой стороны актививроавл 
те или иные свои опции а с друной стороны чтобы мы пробросили с хоста часть ресурсов внутрь контейнера
иначе тоже ничего незаработает. 
расмморим подробно.

вот есть опции командной строки

 --api.insecure=true 
 --providers.docker


 эти опции это укзаание траефику чтобы он изснутри контейнера атктививовал часть своих фич.
 первая фича
  --api.insecure=true

  командует о том чтобы трафеки изутри контейнера начал слушать порт 8080 (изутри!)
  на этом порту ему надо посадить свой веб сервер на котором у него его UI веб морда управления.
  сотвсвтенно если мы эту фичу неукажет то у трафека веб морда управления небудет активиована
  и мы в нее войти не сможем.

  теперь чтобы мы смогли с хоста на эту веб морду попасть нам надо из контейнепа наружу
  проороосмть этот порт 8080
  мы это делаем через

  ports:
      # The Web UI (enabled by --api.insecure=true)
      - "8090:8080"


  таким макаром мы актвировали веб морду изунтри и ообемпечил к ней одступ снаружи!
  важно отемтить что еси нам веб морде ненужна то тода обе эти опции нам нахер ненужны!
  также хочу заметить что порт 8090:8080 он небует участовать в принятии боевого трафика . он будет 
  участовать только в том что через него мы получаем доступ к вем морде. это тоже важно понять.


  далее.
  фича

  --providers.docker

  она собщает тарфекику чтобы он изнутри искал файл /var/run/docker.sock через который он должен 
  поклчться к докеру чтобы узнать обо всех контейнерах  в системе.
  это мы атививровали фичу инутри кнтейнера. теперь надо снаружи прорборсить сокет нашего докер демона
  чтобы этот фаункционал сороссяя

  делаем через

      volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro

  итак эту фичу мы изнутри и сранужи активировали!

 у нас осталась последяяя оация

 ports:
      # The HTTP port
      - "90:80"

 зачем она. делом в том что  траейфик при старте без свяких настрок начинает слущать изунтри
 когнтейнера порт 80. на него он ждет уже боевой трафик который он будет проксировать.
 тоесть изнутри это активироват ненадо. нам надо лишь теперь сранужи с хоста прорстьи порт
 через который мы будет вливать трафик в траефки для этого мы и юзаем 90:80 опцию.


 также важнопонять что еслимы посе стрта контейнера зайдем на http://localhost:90 
 то мы там получим отлуп в втде 

 404: not found

 и это логично!!! потому что зачем мы поперлись на этот сокет? мы хотели попасть в веб морду ? так? 
 но я еще раз опдчеркну такую ошибку котору я вначале доппускал --- на порт 90:80 ВЕБ МООДЫ НЕТ! 
 веб морда сидит на 8090:8080 там она! туда надо идти!
 а на порту 90:80 трафик ждет БОЕВОЙ ПРОКСИ ТРАФИК! а у нас как только мы запстил траекфик
 еще ничего ненастроено в плане боевого трафика. итак на 90:80 ниаких веб морд рнет! веб модра на ругом портуу!
 через порт 90:80 мы будем попадать в нутрь контйенеров! но только после того как мы это дополниетлно настроим!!!
 тыпонял!?!?!?!!?!


 итак  с портам и опиями  и веб мордой разборалсит.

 вопрос - к какой сети целяется траефик при старте? ответ он создает +1 новую докер сеть тип бридж
 и там он сидит!


 теперь вопрос - а как нам на компе несолкько траефиков запутсить? ответочень просто!


берем наш конфиг и копируеис его в другую папку



version: '3.5'

networks:
   vasya:

services:
  reverse-proxy1:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    command: >
               --api.insecure=true 
               --providers.docker
    ports:
      # The HTTP port
      - "90:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8090:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - vasya



в нем надо всего навсего поменять
"90:80"  ==>  "91:80"
"8090:8080"  ==> "8091:8080"

все !  тоесть мы поменял просто напросто порты которые пробрастыаем на хост от веб модры
и для боевго трафика. это понятно.
а больне менять ничего ненало.
воникает вопрос а какое имя будет у новго контейнера ? ответ : по деолту комопзер беерет имя сервиса 
"reverse-proxy1" и прибавляет к нему имя папки в которой лежит комозер конфиг. таким маккмро обеспеичивается 
уникальность имени новго контейнера.  возникает вопрос - но мы же можем положить конфиг в ппку с таким же названеим(имеется
ввиду имя папки ближней к нам в которвй мы лежит а не полуный путь) и тогда имя контейнера будет неукикальным.= скажу честно
задоблался все прояерять. незнаю. проверь и узнай сам.
есть и другой вариант. если мы в файле .env котоырй по деолфту является файлом откуда комозер читет перемнные
мы вствавии переменную 

cat .env
COMPOSE_PROJECT_NAME=kuku1

то тогда комозер будет при созднаии контейнера прибавлять к имени сервиса не имя папки а COMPOSE_PROJECT_NAME
я считаю что так более удобнее потому что тогда комозер когфиг можно сопококно переносит из папки
в папку и это не приведет к озданию контенера с новым имененм.


в итоге я вот как сделал

$ cat .env
COMPOSE_PROJECT_NAME=v0-1
HTTP_HOST_PORT=93
UI_HOST_PORT=8093



$ cat docker-compose.yml
version: '3.5'

networks:
   vasya:

services:
  reverse-proxy1:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    command: >
               --api.insecure=true 
               --providers.docker
    ports:
      # The HTTP port
      - "${HTTP_HOST_PORT}:80"
      # The Web UI (enabled by --api.insecure=true)
      - "${UI_HOST_PORT}:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - vasya
    restart: always



теерь нам еси=ли мы хотим поднять +1 трафеки то нам ненужно трогать композер файл
а только менять .env файл

фуууууххх!!!!!



| кстати полезно еще добавить оаацию чтобы траефик запускался атовмтом при преезашруке компа
restart: always



