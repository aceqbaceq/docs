| absible setup

для начала нужно пойти в python.txt и прочитать в самом верху первую тему как устроен питон.
после этого:

создаем автономный инстанс питона

	$ python -m venv ~/.venv/ansible2

активируем его 

	$ source ~/.venv/ansible2/bin/activate

далее если наш питон должен ходит в инет через прокси
то 

  $ export https_proxy="http://172.16.10.11:2080"

далее обновляем (как этап подгтовки) сам pip

  $  python pip install --upgrade pip


далее наступают  варианты.
если нам нужен ансибль не для установки куба
через kubespray то делаем вот так - так как ансибль это всего навсего модуль-пакет питона то ставим его через менеджер
модулей pip но перед установкой можно посмотреть 
доступные версии

	$  python -m pip index versions ansible
	ansible (11.2.0)
	Available versions: 11.2.0, 11.1.0, 11.0.0...

тут прикол те номера версии что мы видим это сука
совершенно не номер версии с точки зрения самого
ансибля это номер версии с точки зрения менеджера
пакетов питона. как найти сооветсвтие я не знаю.
условно говоря версия 11.2.0 это на самом деле
2.17.0 с точки зрения ансибля.
приедтся поставить какую то версию которая указана выше потом набрать ansible --version и узнать что это 
за версия а потом подобрать.
когда версия выбрана то ставим ее вот так

    $ python -m pip install ansible==11.2.0

но еще раз скажу этот метод не подходит если мне
нужен ансибль для установки куба через kubesray.

а вот теперь метод установки ансибля если он мне
нужен чтобы через kubespray поставить куб.
идем в папку kubespray  и там есть файл 

  requirements.txt 

это спец файл для pip  который указвыает какие
модули питона нужно установить чтобы кубспрей
мог успешно отработать. например вот так он 
выглдит

			$ cat requirements.txt 
	ansible==9.13.0
	# Needed for community.crypto module
	cryptography==44.0.1
	# Needed for jinja2 json_query templating
	jmespath==1.0.1
	# Needed for ansible.utils.ipaddr
	netaddr==1.3.0


и вот здесь видно что нам нужен нетолко ансибль
причем жескто такой то версии но нам нужны и другие
пакеты питона. и реально я проверял если установить
голый ансибль то на тактом то шаге установки
напишет ошибку. так вот нам нужно поставить все 
что здесь указано вот так

	$ python -m pip install -r requirements.txt

	$ ansible --version
	ansible [core 2.16.14]

вот теперь все готово. устанолвен ансибль нужной
версии и другие модули питона нужной версии. 
теперь можно приступать к запуску кубсперей.
готоово.


ДАЛЕЕ БЛАБЛАБЛА. хочешь читай хочешь нет.
что интересно. врезультате установки пакета мы получим нетолько устанолвенный 
ансибль питон модуль-пакет. но мы получим и некий фронтенд запускающий файл ансибля тоже
на питоне.
я щас покажу. 
вот где у нас лежит ансибль питоне модуль-пакет

	$ python
	>>> import ansible
	>>> ansible.__file__
		'~/.venv/ansible2/lib/python3.12/site-packages/ansible/__init__.py'

здесь "~/.venv/ansible2/" это папка где через venv создана автономная копия питон
интерпретатора с некоторым количеством предустановленных модулей. 

ксатти модуль-пакетов у нас на самом деле два!

	$ pip list | grep ansible
	ansible      10.5.0
	ansible-core 2.17.5


тот что я показал выше это модуль ansible

теперь посмотрим на тот который ansible-core
ну вот тут опять непонятная залупа

(ansible2)  $ python
>>> import ansible-core
  File "<stdin>", line 1
    import ansible-core
                  ^
SyntaxError: invalid syntax


типа нет такого модуля. хотят pip показывает что есть.
если я зайду в папку site-packages где наверно записываются модули питона то
я там увижу вот такие папки

./ansible
./ansible_test
./ansible_core-2.17.5.dist-info
./ansible_collections
./ansible-10.5.0.dist-info

так вот если это модуль-папка то внутри должен лежать файл __init__.py
он есть только в папках 

./ansible
./ansible_test

получается все остальное хуйня какаято непонятная.
полуичим инфо через pip

python -m pip inspect  ansible-core  | grep "metadata_location" | grep ansible
	...
	...
      "metadata_location": "/home/noroot/.venv/ansible2/lib/python3.12/site-packages/ansible_core-2.17.5.dist-info",
      "metadata_location": "/home/noroot/.venv/ansible2/lib/python3.12/site-packages/ansible-10.5.0.dist-info",

опять же повторю в папке ansible_core-2.17.5.dist-info нет __init__.py 
так что это не модуль-пакет а хуйня какаято.
внутри этой папки вобще нихрена почти нет

	COPYING
	entry_points.txt
	INSTALLER
	METADATA
	RECORD
	top_level.txt
	WHEEL

архитектура питона - это пиздец какой колхоз
итак pip нам поставил две сущности "ansible" и "ansible-core" 
но с точки зрения питона у нас нет модуля-пакета ansible-core, есть такая папка с не
понятным содержимым. но эта папка это точно не модуль-пакет.
и есть модуль-пакет ansible
а еще появился модуль-пакет ansible_test 


далее ансибль в привычном смысле запускается не путем вызова модуля. нет. нихуя.
ансибль запускается через фронтенд файл тоже на питоне написанный. 
он лежит вот тут 

	$ which ansible
		~/.venv/ansible2/bin/ansible
	(ansible2) $ file  $(which ansible)
		~/.venv/ansible2/bin/ansible: Python script, ASCII text executable


как я уже говорил что в для питон интепретатора любой тектовый файл внутри которого питон
портянка является модуль-файлом. но однако у питона есть переенная в которой указаны папки 
в которых он модули ищет. поэтому питон скрипт файл который лежит вне этих папок это наверное
формально не модуль. а просто питон скрипт файл. 

если мы закрыли терминал. то нам нужно опять активировать автономный питон. и только
потом рабооать с модулями или питон сриптами если мы хотим чтобы их исполнял именно
атономный модуль а не системный питон
активируем это как указано выше вот так

		$ source ~/.venv/ansible2/bin/activate

что еще раз подчеркну интересно это то что установка ансибля через pip приводит к тому
что у нас нетоллько модуль или модули питона устанавливаются. у нас еще создается фронтенд
файл запуска ансибля (тоже на питоне). так вот далее для работы с ансиблем мы неюзаем
модуль питона тоесть вот так делать ненадо
 
  $ python -m ansible ....

а нужно юзать фронтенд ансибль файл

  $ ~/.venv/ansible2/bin/ansible .....

тоесть полный набор команд

		$ source ~/.venv/ansible2/bin/activate
    (ansible 2 )  $   ~/.venv/ansible2/bin/ansible ....
так как команда source у нас меняет $PATh то можно ансибль запускать без укаания полного пути
    (ansible 2 )  $   ansible ....

вот такая ебала с питоном и ансиблем. 

итак наконец мы установили ансибль 


