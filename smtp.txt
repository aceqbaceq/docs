есть такая тема 
как отправка\прием почты

тема мудацкая. но будем разговаривать.


===
вначале быстрая вставка
говорим про SPF

какойто сервер принимает к себе письмо якобы с нашего домена kuku.ru
что он делает. он пытается проверить а действительно ли письмо было отослано с домена kuku.ru 
как он это делает

он делает DNS запрос тип TXT с именем kuku.ru

nslookup
set type=txt
kuku.ru

в ответ он получает все TXT записи с именем kuku.ru

одна из них имеет особый вид

v=spf1 бла бла бла

эта TXT запись считается SPF записью для домена kuku.ru  сточки зрения принимающего почтового сервера.

в ней прописано при каких условиях пришедшее письмо можно считат отправленным с домена kuku.ru


вот вид для примера записи SPF для домена kuku.ru


v=spf1 include:vasya.kuku.ru include:server.google.com -all

раньше на DNS серверах использовали тип записи SPF. то есть на самих DNS серверах был тип записи SPF. потом от него отказались и теперь используют тип TXT. просто эта TXT запись имеет особый вид тела. по которому почтовый сервер из всех TXT записей может распознать SPF , SPF с точки зрения именно почтового сервера. так как сточки зрения DNS сервере никаких больше SPF записей у него нет. только одни TXT

 
видим два include. если хотя бы одно include выполнено то в целом проверка считается выполненной. то есть include это как OR либо то либо то.

-all означает что если письмо непрошло проверку успешно то его почтовый принимающий сервер должен отфутболить. непринять. проверка spf происходит на стадии как я понял helo\ehlo поэтому как я понял тело письма принимается только после того как пройдена spf часть проверки.
-all предписывает принимающему почтовому серверу непринимать письмо категорически если spf провека непройдена. 
есть более мягкая настройка ~all она говорит что если spf проверка непройдена то письмо можно принять но его надо поместит в папку спам.

вернемся к include. 
ибо внутри него заключено конкретное условие которое
определяет письмо с домена kuku.ru или нет.
include говорит о том что надо пойти на другой домен считать spf запись того домена и если условие той spf выполнено то считать что и наша spf выполена


include:vasya.kuku.ru это условие говорит что надо считать еще один SPF с домена  vasya.kuku.ru

nslookup
set type=TXT
vasya.kuku.ru

привожу чему равен spf для vasya.kuku.ru

v=spf1 ip4:99.99.99.124/32

значит ip4 это еще одна опция проверки условия истинности.
и оно говорит что если отсылающий smtp серер имеет ip = 99.99.99.124/32
( а это видно на стадии приема письма) то считать условие выполенным.

можно указать несколько ip в строке и они будут работать как OR

v=spf1 ip4:99.99.99.124/32  ip4:8.8.8.0/24 ip4:3.3.0.0/16

если отправляющий smtp сервер имеет ip из любого ip4 блока то условие 
считвается выполненным

таким образом возващшаемся к нашему исходному письму.
если отправлящий smtp сервер имеет ip = 99.99.99.124 то include считается выполненным и письмо считается отправлено уполномоченным от kuku.ru сервером. 

если конкретно include:vasya.kuku.ru 
невыполнено то берется следующее условие include 
include:server.google.com
и проверяется может там будет совпадение.

таким образом несколько include это эквивалент OR.

если ни один include невыполнен то письмо счтается проверку не прошло.


из нашего конкретного примера видно что в конечном итоге отправляющий smtp сервер проверяется на основе ip адреса. и это отличная проверка потому что ip адрес это достверная информация. потому что ip адрес мы видим в ip пакетах от отправляющего smtp сервера. ее неподделать.


что будет если в spf запист указать ip4 и include вместе.
ответ будет жопа


v=spf1 ip4:4.4.4.4/32 include:vasya.kuku.ru  -all

как я понял неважно какое условие прописано в include по любому
от отправляющего сервера smtp требуется чтобы его ip был = ip4:4.4.4.4

почему это плохо. если мы отправляем почту с двух независимых серверов.
один сервер это наш родной smtp сервер который обслуживаем мы а другой
сервер с которого мы отправляем почту это скажем через веб морду gmail.com  тогда если в нашей записи если мы будем использовать опцию ip4 мы должны указать ip адреса отправляющих smtp серверов с площадки гугла а мы понятия не имеем какие они ,
поэтому если у нас есть несколько незавиисимых плошадрк серверов с которых
отправлябтся письма от имени нашего домена то в spf записи нет смысла нельзя использовать условие ip4  потому что надо указать тогда ip адреса 
всех серверов на всех площадках а мы их можем и незнать.
(апдейт. сейчас я неуверен что правильно написал. вроде бы запись вида v=spf1 ip4:...  include:...  -all 
означает v=spf1 ip4:... OR   include:...  OR   -all  таким образом либо либо либо. что к жопе никакой неведет)


возвращаемся к исходной записи
kuku.ru TXT v=spf1 include:vasya.kuku.ru include:server.google.com -all


в этой записи сказано что наща spf запись считывается выполненной
если выполенна spf запись либо для vasya.kuku.ru домена
либо для server.google.com домена

таким образом если наша почта отсылается с гугловских серверов томы просто отправляем принимающий почтовый сервер к spf записи гугла server.google.com и это уже забота гугла как они там прописали какие их серверы являются валидными. все это не наша проблема.

а наш отправляющий сервер мы зашифровали через include:vasya.kuku.ru
подчекрну что vasya.kuku.ru это не DNS имя нашего непосредственного smtp отправляльщика. нет! ссылка идет непрямая а опосредованная.

мы говорим что чтобы spf запись для домена @kuku.ru считалась выполенной
надо прочитать spf запись ОТ ДРУГОГО ДОМЕНА @vasya.kuku.ru  и если она выполнена то и наша spf считается выполненной.

ну и получается уже втой spf записи указано конкретное условие признака 
валидного сервера

vasya.kuku.ru TXT v=spf1 ip4:99.99.99.124/32

вот таким макаром прописывают валидные ip адреса уполномоченных smtp серверов для домена.

уж совсем конкретно из жизни обычно делают так.

заводят две записи.

первая запись

kuku.ru TXT v=spf1 include:_spf.kuku.ru -all

и вторую запись

_spf.kuku.ru TXT v=spf1 ip4:99.99.99.124/32  ip4:8.8.8.0/24 ip4:3.3.0.0/16

замечу что это две spf записи НО!  формально для разных доменов.
с точки зрения kuku.ru у него одна spf запись ( и это правильно)
просто она ссылается на spf запись в другого домена.
домен должен иметь только одну spf запись.

и в итоге мы для нашего домена прописали опосредованно с каких IP могут 
посылать уполномоченные нами smtp сервера.

зачем такая двойная запись почему несделать сразу одну.
потому что это дает гибкость.

если у нас появляетс вторая площадка с которой мы будет остылать письма
и той площадкой мы незаведуем то мы в первую запись просто добавим +1 include

kuku.ru TXT v=spf1 include:_spf.kuku.ru  include:_spf.google.com
-all

таким образом появляется удобство гибкость при изменении структуры 
отправляющих серверов. если бы мы сразу пихали конечные ip адреса 
в нашу запись то нужно было бы тогда пихать и все гугловские ip адреса
а мы их просто и незнаем. а так это и ненаша забота.
удобно.

замечу что при такой схеме DNS имена отправляющих smtp серверв вообще никак здесь не участвуют их нет. мы их вообще неиспользуем.

в spf записи помимо опций  ip4, include есть и другие опции .
о них надо читать отдельно.

например есть опция mx.
она говорит что отправлящий сервер должен попадать в mx запись этого домена. по мне это ненужная опция. потому что mx сервера это сервера принимающе почту. а spf запись она касается серверов отправляющих почту.
и они необязаны быть связаны. принимать могут одни а отправлят могут
соврещенно другие. поэтому если конечно так случилось что у вас и принимающие и отправляющие одни и теже то можно в spf просто тогда указать опцию spf.

про другие опции spf читай отдельно. 


===

PTR

как выглядит

255.2.0.192.in-addr.arpa

как удобно проверять наличие PTR записей = через dig


$ dig -x IP

пример

$ dig mail.ru a
mail.ru.		12	IN	A	217.69.139.202
mail.ru.		12	IN	A	94.100.180.201
mail.ru.		12	IN	A	94.100.180.200
mail.ru.		12	IN	A	217.69.139.200


$ dig -x 217.69.139.202
202.139.69.217.in-addr.arpa. 379 IN	PTR	mail.ru.

$ dig -x 94.100.180.201
201.180.100.94.in-addr.arpa. 3576 IN	PTR	mail.ru.


====

про SPF. 
по факту с точки зрения DNS сервер это заппись типа TXT но с особым значением.

механизм проверки :
когда один почтовый сервер А связывается с другим почтовыс сервером Б по  SMTP то сервер Б видит его IP интернетовский.(от IP пакеты которые прилетают).
Таким образом сервер Б достоверно знает внешний IP сервера А. 
телнет сесия к примеру выглядит так:

$ telnet mx.yandex.ru 25
EHLO localhost
MAIL FROM:<petrov@glav-square.ru>
RCPT TO:<petrov@pepsi.ru>
DATA
From: Tek Bahadur Limbu <m@glavhome.ru>
To: someone else <m@example.com>
Subject: testing 21:18

Test test test
.


так вот здесь важно увидеть что обратный адрес появляется два раза. так вот по факту письмо будет отослано по тому
адресу который указан в MAIL FROM:<petrov@glav-square.ru>
все что указано до команы DATA это как конвертик на бумажном письме. поэтму именно поля 

MAIL FROM:
RCPT TO:

также как на бумажном коневерте указывабт от кого и куда идет письмо. именно эти поля оплределяют куда будет направлено письмо.

все что после комады DATA это уже листик с самим письмом. листик письма на процесс транапортиовки никак не влияет. его  упрошенно говоря 
почтовые серверы через которые идет пиьсмо читать не будут учитыать в процессе пеерерсылки. его будет читать уже человек которому это 
письмо прилетит уже на комп.
 
так вот вот это поле MAIL FROM: 
оно еще имеет клички другие имена, синонимы в литературе:
return-path  
SMTP MAIL FROM, 
Return-Path,
Bounce Address. 
reverse path, 
envelope sender, 
envelope from


если на почт клиенте нажать кнопу посмотреть исходное тело письмо там где будут притсовать пооля служебгные то там это поле имеет 
название return-path. 
показвыаю:


Received: from localhost (11-11-11-11.dell.com [11.11.11.11])
	...
	...
	...
Return-Path: petrov@glav-square.ru


таким образом в живом письме на компе  телнетовская хрень MAIL FROM: выглядит как Return-Path:

так вот к чему это все. к тому что  принимающий почтоыый сервер он проверяет SPF именно для домена который указан в
MAIL FROM: !!!! вот что важно. вот что надо понять.  а поле From: Tek Bahadur Limbu <m@glavhome.ru> указанные в теле письма уже 
абсолютно для SPF проверки насрать. вот что важно понять.

поэтому SPF проверка выглядит так:
мы звоним на яндекс и доходим до этой стадии
$ telnet mx.yandex.ru 25
EHLO localhost
MAIL FROM:<petrov@glav-square.ru>


тут же яндекс лезет в DNS и ищетя для домена glav-square.ru его SPF запись. и смотрит что там написано.
также яндекс имеет IP нашего сервера отправителя. если яндекс ненайдет наш IP в той SPF записи то он нас на данном шаге пошлет нахер.
вот это все важно понять. как работает SPF проверка. кто куда лазии и с чем сравнивает.!!






----
=============================
=============================
БОЛЬШАЯ ТЕМА SMTP - начало блока
=============================
=============================

SMTP


$ telnet mx.yandex.ru 25

EHLO localhost
MAIL FROM:<petrov@glav-square.ru>
RCPT TO:<petrov@pepsi.ru>
DATA
From: Tek Bahadur Limbu <m@glavhome.ru>
To: someone else <m@example.com>
Subject: testing 21:18

Test test test
.


в итоге на яднексе будет такое тело письма:

Received: from postback28b.mail.yandex.net (postback28b.mail.yandex.net [2a02:6b8:c02:900:1:45:d181:da28])
	by cqxive3eyocweozr.sas.yp-c.yandex.net with LMTP id ZHx2BdfZlD-0hyDZ2MS
	for <petrov@pepsi.ru>; Sun, 27 Nov 2022 18:20:07 +0300


Received: from myt6-dcd87beca1ab.qloud-c.yandex.net (myt6-dcd87beca1ab.qloud-c.yandex.net [IPv6:2a02:6b8:c12:2c9a:0:640:dcd8:7bec])
	by postback28b.mail.yandex.net (Yandex) with ESMTP id 0CA345E54A
	for <petrov@pepsi.ru>; Sun, 27 Nov 2022 18:20:07 +0300 (MSK)


Received: from localhost (11-11-11-11.dell.com [11.11.11.11])
	by myt6-dcd87beca1ab.qloud-c.yandex.net (mxfront/Yandex) with ESMTP id iIQQ4x9PHuQ1-S5YiWZv4;
	Sun, 27 Nov 2022 18:19:24 +0300
X-Yandex-Internal: 1
Message-Id: <20221127182006.S5YiWZv4@myt6-dcd87beca1ab.qloud-c.yandex.net>
Date: Sun, 27 Nov 2022 18:20:06 +0300
X-Yandex-Fwd: 1
X-Yandex-Spam: 4
X-Yandex-Uid-Status: 4 1130000062089509
From: Tek Bahadur Limbu <m@glavhome.ru>
To: someone else <m@example.com>
Subject: testing 21:18
Return-Path: petrov@glav-square.ru
X-Yandex-Forward: 7acf1669f283e398ceb854741db9c1eb

Test test test



каждый новый мейлер через котрого проходило письмо 
опредеяетяся по строке

Received:



далее. в письме все мусор ( можно можно наврать и это непроверятеся ) кроме вот этого куска:

```11-11-11-11.dell.com [11.11.11.11]````


IP адрес настощий 11.11.11.11. под ним увидел потовый сервер яндекса наше сервер

dns имя 11-11-11-11.dell.com тоже настоящее. яндекс его определяет через PTR запись для IP через запрос к DNS.



вот этот кусок тоже настоящий:
````Return-Path: petrov@glav-square.ru````

это в точности вот от сюда
MAIL FROM:<petrov@glav-square.ru>


тоест это в точности под каким ящиком представился сервер отправитель при общении с яндеком до команды DATA.
и это в точности именно то поле которое проверяет яндекс обращаясь к spf записи домена glav-square.ru
если там есть запись spf и наш отправщяющий сервер неимеет в ней своего IP 11.11.11.11 то яндкс пошлет наш сервер нахер при отправке.
поэтому это поле имеет такое значение. и оно настоящее в том плане что именно на этот ящик принимающий сервер и будет по факту слать 
письмо.

 в цедом остальные поля в письме это все может быть наебка которую отправляющий сервер сообщит приимающему.


====
SMTP
helo\ehlo  это не просто привестивя. это протоколы такие почтовые.
==
SMTP
вот эти поля

From: Tek Bahadur Limbu <m@glavhome.ru>
To: someone else <m@example.com>


если в них небудет имен помимо адресов почт то в почтовом клиенте 
в графе кто отослаk и тема письма будут тупорыле пропуски

===
SMTP

если в письме скжаем стоит несколько  рисивд полей.


Received: 
..


Received: 
..

Received: 
..

Received: 
..



то самыый первый мейлер на которое попало письмо это нижний. а самый посдений это верхний


=============================
=============================
БОЛЬШАЯ ТЕМА SMTP - конец блока
=============================
=============================

на счет spf.
какэ то раотает.

spf пропсиывает какие IP сервера могут отсылать письма  с адресами нашего домена в поле envelope-from (return-path).
далее. в чем прикол.

вот мы шлем наше письмо  с почтового клиента. 
почтоый клиент может пойти двумя путиями:
1. зарезолвить mx сервер доена назначения и конектится к нему. если мы шлем на yandex пиьсмо то конектится к mx.yandex.ru
2. а может конекттится не к mx серверру домена назначения а к промеужточному транзитному серверу (smart host). почему?
потому что например нашему компу запрещено по  25 порту вобще выходит в инет. значит нам нужен транзитный почтоый сервер.

теперь - сервер который принимает от нас пиьсмо он может использовать проверку spf а может и неисползовать. это его право.
если мы стучится сразу на конечный mx сервер то он проверяет IP нашего сервера с тем чтобы он входил в spf запись для нашего
домена отправителя . ( на основе поля envelop-rom в письме). нрпимер мы щлем от имени @kuku.ru значит принимающий сервер
будет лезит в днс kuku,ru искать там spf запись и проверять наш IP нашего сервере нахится ли в этой записи. можно ли нашему IP свререру
отправлять письмо от имени kuku.ru
таким образом когда нет транзитных серверов то spf запиь должна осдержатьь только IP адрес нашего сервера отправиетлеля.
вопрос а если мы сидим за NAT - какой IP дожен быть в SPF. ответ - тот IP под которым наш сервер виден в интернете.

поинтереснее ситуация когда наше письмо идет через тразитный почтоый сервер. например мы отправляем на gmail через почту яндекса.
хотя у нас домен не яндекс а vasya.ru .
сервер яндекса при приеме почты от нас  - он оприается только на логин\пароль для опредения что мы валидный отправтель.
далее яндекс пуляет письмо уже на gmail  и (самое интересное) gmail видит что некий яндекс сервер ему пытается впихнуть письмо 
от домена kuku.ru  и видит IP адрес сервера яндекса. и gmail лезет на kuku.ru SPF запись и проверяет а можно ли IP этого яндекс сервера
отправлят почту от имени нашего домена!!!! тоесть принимающая сторона уже ничего незнает о нашем сревер отправителе. о его IP итд.
принимающая сторона всегда работает именно с тем сервером  с тем IP который есть у сервера который непосредственно передает пистьмо. 
в нашем случае это янедкс сверер. и это озанчает что kuku.ru spf запись должна в себе содержать IP сервер янндекса. 
там еще чуть посложнее там кога яндекс всосал наше писмо то он внутри себя его шывыряет еще по несоклькиим(Видимо ментовским) транзтным почтовым
серверам но я считаю что они ничего непроверяют они просто перербатывают пистмо  на сосдение яндекс почтоые сверера.  и никакие spf они не проверя.тю
поэому наша SPF запиьс должна содержат только IP адреса тех серверов которые непосредвтенно уже контачат с конечными mx сверерами адресов назначения почты.



через картрнку покажу.


наш сервер А (ip A)  ---> отправил письмо на ----> янедекс сервер Б (ip Б) 
этот сервер нас проверяо толко по логину\паролю. никакие spf ему неважны. далее


янедекс сервер Б (ip Б) ---> швыреят наше пиьсом через кучу транзитных янедкс свреров ----- .. куча транзитных серверов которые ничего не проверяют
----> пограничный яндекс сервер (IP c)  наконец отправляет письмо уже на гугл прямиков ------> gmail север (ip D)


и этот gmgail сврер видит у себя IP c и проверяет этот IP c с kuku.ru spf записью.
при этом ему абсолтно плевать на IP A нашего исходного срервера.


а если бы цепочка была вот такой короткой:

наш сервер А (ip A)  ---> ------> gmail север (ip D)

то gmail свервр проверял бы в kuku.ru spf записи  наличие (ip A)


поэтому spf запись должна содержать все IP всех серверв почтовых которые непосрдественно доставляют на конченые почтовые хостинги 
наши письма.
--

про SPF
(очередная часть)


что такое spf защита почты.

дело вот в чем мы хотим с какогто компа отправить письмо от имени домена vasya.example
мы хотим отправить это письмо на адрес to@to.com 
мы находим в dns mx  record для to.com
получем IP и начинаем стучать на тот IP и пытаться по протколу SMTP 
отправить письмо.

и тут очень важный момент мы буде указывать адрес почтой от имени которого мы отсылаем письмо.
этот адрес он фигурирует в двух абсолютно разных местах.

первое место это в течение сеанса обещения нащего сервере а с удаленным сервером.
второе место это тело передаваемого письма. 

фишка в том что это две разные вещи сееанс обещения серверов и тело передавамеого письма.

это похоже на то что на конверте у нас указаны одни адреса а  внутри  на бумажке мы напишем совершенно
другие адреса. и вобще то они друг с другом не обязаны совпадать. 

тут еще жопа в том что эти адреса они называются многочисленными именами. так вот SPF это такая dns запись
тип у нее TXT. в ней прописывается IP адреса сервреров которым разрешается отправтья письма от имени домена.
и вот как это работает:
наш сервер стучится на тот сервер и начинает с ним общаться. и нащ сервер том говорит от имеи какого ящика
он щас будет отсылать письмо. в адресе ящика у нас есть доменная часть. тот сервер принимает от нас имя ящика, вычленяет 
доменное имя, лезет в DNS данного домена и ищет запись TXT которая имеет вот такой скажем вид

$ dig   magenable.com.au    txt  +short
"v=spf1 mx a ip4:127.0.0.1 a:redmine.magenable.com.au include:_spf.yandex.net include:sendgrid.net include:servers.mcsv.net ~all"


и тот сервер он считывает эту запись и в итоге он из нее все резолвит в IP адреса а потом он сравнивает есть ли IP
адрес сервера который пытается отослать почту от имени домена в списке этих IP адресов.  таким образом если 
сервер отправитель в сеансе общения сообщает что он будет отсылать письмо от имени @magenable.com.au 
тот принимающий сервер зайдет на DNS magenable.com.au скачет SPF запись и провреить а есть ли IP адрес нашего
сервера в списке SPF записи. и есть есть тогда примет письмо. а если нет то пошлет нахер.

причем нужно омтеить что проверять и использовать SPF запись это сугубо выбор принимаюзего сервера. если он нехочет 
он не будет делать эту проверку.


также важно еще раз сказать что вообще похеру как при этом выглядит само письмо тоесть его тело.
в теле может быть укзаан любой обрайы адрес. это вообще неволнует сервера котоорые общаются друг с другом по SMTP.
для них письмо это просто некая болванка и все. безусловно тут игарет роль магия почтового клиента на компе
который отсылает письмо с компа на почтовый сервер. а точнее на само деле это потом игает роль насройки почтового сервера
который берет письмо и сам опрееляет под каким обратным адресом представляться при общении по SMTP с удаленным серверром ппочтоым.
почтовый адрес отправителя который собщается по SMTP на стадии общение нашего сервер с удаленым сервером называется RFC5321.MailFrom  а почтоый адрес отправителя который указан уже в теле письма назыается RFC5322.From
а вот таблица чтобы это подытожить:

Postal Letter			Email Part				Precise Term
Sender on envelope		Message Envelope		RFC5321.MailFrom
Addressee on envelope	Message Envelope		RFC5321.RcptTo
Author on letter		Message Header			RFC5322.From


таким макаром если я владеле домена то создают SPF запись в совем домене и таким макаром  чужие сервера не могут
отправлят письма от имени моего домена на стадии SMTP конекта с другими серверами ( на стадии envelope)

Совершенно важно сказать что envelope адрес он не отображается в почтоовм клиенте юзера который в итоге
скачает это письмо. у юзера в почтовом клиенте отображатеся адрес указанный уже в теле письма.

именно поэтому можно человеку прислать письмо от имени любого домена тоесть у него буде в почтомо клиенте
написано что он от домена microsoft.com еще раз скажу потому что если сервера договоирились друг с другом
на стадии envelope то после этого в качестве тела письма можно отсылать аболютно любую хрень  и в этом теле
письма может быть любой аболютно любой адрес. SPF защищает  SMTP сеанс от того чтобы левый сервер 
не мог подставитm envelope адрес с нашим доменом. итак envelope адрес защищен а  адрес в теле письма
по прежнему не защищен. 

для этого другие методы используются.


теперь опишу формат SPF  записи  , но вначале будет опять же некоторый повтор того
что я уже обьяснил (потому что явзял это из другого своего докуметаа)

прежде всего что такое SPF
(https://easydmarc.com/blog/whats-the-difference-between-spf-dkim-and-dmarc/)
The Sender Policy Framework, or SPF, is an email authentication protocol designed to help detect and prevent email spoofing. The authentication protocol allows you to create a DNS TXT record that lists the sender addresses you’ve authorized to send messages on your domain’s behalf. With this protocol, ISPs or email servers can validate that messages from a particular domain are legitimate. 

получаетс вот что если на какйото потчтоый сервер А стучит другой почтовый сервер Б и хочет прислать письмо 
якобы от имени домена vasya.com то поточтвый сервер Б может зайти на DNS от vasya.com там найти SPF record
в нем будет написано с каких IP размрешено отправлят письма от имени vasya.com и почтовый сервер Б проведяе 
проверну на основе spf record может понять валидный ли сервер А чтобы отпрвлять письма отимени vasya.com 
или нет. приэтом это право сервера Б заниматься такой проверкой. он может просто принять пистмо и посрать 
на проверку SPF

SPF record создает админ домена vasya.com 
в его интерсах чтобы ни одна козлина не слала письма якоыю от имени его домена



 dig txt magenable.com.au


;; ANSWER SECTION:
magenable.com.au.	300	IN	TXT	"google-site-verification=-y1kbuABsKoSCvxlxLDBg8FaqXNGer-M2cpQwl0IAHI"
magenable.com.au.	300	IN	TXT	"MS=1D1E82C1561BD923E7C503D86399BFFCF28933AB"
magenable.com.au.	300	IN	TXT	"v=spf1 mx a ip4:127.0.0.1 a:redmine.magenable.com.au include:_spf.yandex.net include:sendgrid.net include:servers.mcsv.net ~all"



TXT	"v=spf1 mx a ip4:127.0.0.1 a:redmine.magenable.com.au include:_spf.yandex.net include:sendgrid.net include:servers.mcsv.net ~all"



так я хочу обьяснитьэту загадочную строку
во первых ее можно переиписа  вот так 

TXT	"v=spf1 (mx)  OR (a) OR  (ip4:127.0.0.1) OR  (a:redmine.magenable.com.au) OR  (include:_spf.yandex.net) OR  (include:sendgrid.net) OR  (include:servers.mcsv.net)  OR  (~all)"


итак меджу условиями как бы стоит OR

каждоу условие состоит из двух частей. из qualifier и mechanism
напрмиер возьмем условие

(~all)

в нем 
~ это quaifier
all это mechanism


проблема в том что qualifier редко указывается у условия. дефолтовый qualifer это "+"
так вот очень часто у условия отсутствуем явно указаннный qualfier поэтому нужно мысленно подставлять дефотлтовый qualifuer "+"
тогда наша строка вот как может быть преставлена


TXT	"v=spf1 (+mx)  OR (+a) OR  (+ip4:127.0.0.1) OR  (+a:redmine.magenable.com.au) OR  (+include:_spf.yandex.net) OR  (+include:sendgrid.net) OR  (+include:servers.mcsv.net)  OR  (~all)"


итак еще раз у нас строка разбивается на ряд условий. между ними стоит как бы OR
кажоу условие сосотоит  из двух частей из qualifuer и mechanism. причем очень часто люди не указывают qualifier в условии
и тога надо мысленно обязательно подставить дефолтовый qualifier "+"

итак возьмем условие каоке нибудь

+include:sendgrid.net

здесь 
+ это qualifier 
include:sendgrid.net это mechanism


виды условий какие будвыают

"+"	Pass
"-"	Fail
"~"	SoftFail
"?"	Neutral

так вот суть условия в том что проверяется mechanism если он выполенен то qualifer говорит что тогда делать.
если + то значит письмо можро пропутсить. если квалифайер равен "-" то пиьсо пропускать нельщя. 
если квалифайел рвен softfail "~" то условие считвается невыполненным и дальше на усмотрение принмающего потчтового сервера
пропускает такое письмо или нет.  





прмиер

"v=spf1 mx -all"


mx -all   = это серия проверок

провекра идет слева нарпаво. как я пока понял между ними как бы стоит OR тоесть

mx OR -all


mx без указания домена озгачает что берется текущий домен. тоесть в  даном случае mx magenable.com.au
тоесть оно эквивалентно 
mx magenable.com.au



тоесть a эквивалентно a
витоге Allow domain's MXes to send mail for the domain, prohibit all others.

тоесть данная spf вначале находит какой ip у mx mx magenable.com.au 
если ip клиента совпдааьет с  mx magenable.com.au   то окей письмо проупусукается.
если ip клиенита друой то перходтм к следущему уловию проверки тоесть -all 

-all условие такоо что ему неудовлотвеоряет ничего. тоесть наэтом условии будут зарубены любые ip клиента.



следущий пример
"v=spf1 a -all"

The current-domain is used.

тоесть a экватвлентно a  magenable.com.au

посмтим что оно выдаст 
$ dig A magenable.com.au

magenable.com.au.	300	IN	A	188.114.97.1
magenable.com.au.	300	IN	A	188.114.96.1


вот тут  у меня вопрос лююбой из двух ip подойдет или как. 

вот еще более интеренсый пример
"v=spf1 a/24 a:offsite.example.com/24 -all"

If example.com resolves to 192.0.2.1, the entire class C of 192.0.2.0/24 would be searched for the client IP. Similarly for offsite.example.com. If more than one A record were returned, each one would be expanded to a CIDR subnet.


здесь a/24 = a текущий_домен/24

в моем случае это 

a/24=a magenable.com.au/24 

он у нас зарезолвился в 

188.114.97.1
188.114.96.1

насколкьо я понимюв  в итоге ip которые проходят проверкбку должны удовлелтвооять условию

188.114.97.0/24
188.114.96.0/24


слудещий пример

"v=spf1 mx mx:deferrals.domain.com -all"

Perhaps a domain sends mail through its MX servers plus another set of servers whose job is to retry mail for deferring domains.
"v=spf1 mx/24 mx:offsite.domain.com/24 -all"

Perhaps a domain's MX servers receive mail on one IP address, but send mail on a different but nearby IP address.


поещзная ссылка http://www.open-spf.org/SPF_Record_Syntax/




https://dmarcly.com/tools/spf-record-checker

 magenable.com.au
ip4:127.0.0.1
a
ip4:172.67.135.106
ip4:104.21.6.225
ip6:2606:4700:3033::6815:6e1
ip6:2606:4700:3037::ac43:876a
a:redmine.magenable.com.au
ip4:172.67.135.106
ip4:104.21.6.225
ip6:2606:4700:3037::ac43:876a
ip6:2606:4700:3033::6815:6e1
mx
ip4:77.88.21.249
ip6:2a02:6b8::311
include:_spf.yandex.net
redirect=_spf.yandex.ru
include:_spf-ipv4.yandex.ru
ip4:37.140.190.0/23
ip4:5.45.224.0/25
ip4:77.88.28.0/24
ip4:77.88.29.0/24
ip4:95.108.130.0/23
ip4:95.108.205.0/24
ip4:5.45.198.0/23
~all
include:_spf-ipv6.yandex.ru
ip6:2a02:6b8:c00::/40
ip6:2a02:6b8:0:1472::/64
ip6:2a02:6b8:0:1619::/64
ip6:2a02:6b8:0:1a2d::/64
ip6:2a02:6b8:0:801::/64
~all
include:_spf-ipv4-yc.yandex.ru
ip4:178.154.239.80/28
ip4:178.154.239.72/29
ip4:178.154.239.144/28
ip4:178.154.239.136/29
ip4:178.154.239.208/28
ip4:178.154.239.200/29
ip4:51.250.56.16/28
ip4:51.250.56.80/28
ip4:51.250.56.144/28
~all
~all
include:sendgrid.net
ip4:167.89.0.0/17
ip4:208.117.48.0/20
ip4:50.31.32.0/19
ip4:198.37.144.0/20
ip4:198.21.0.0/21
ip4:192.254.112.0/20
ip4:168.245.0.0/17
ip4:149.72.0.0/16
ip4:159.183.0.0/16
include:ab.sendgrid.net
ip4:223.165.113.0/24
ip4:223.165.115.0/24
ip4:223.165.118.0/23
ip4:223.165.120.0/23
~all
~all
include:servers.mcsv.net
ip4:205.201.128.0/20
ip4:198.2.128.0/18
ip4:148.105.8.0/21
-all
~all


The SPF record exceeds the 10 DNS query limit, which results in deteriorated email deliverability. Use DMARCLY's Safe SPF feature to fix this issue.


https://docs.sendgrid.com/ui/account-and-settings/spf-limitations

SPF implementations MUST limit the number of mechanisms and modifiers that do DNS lookups to at most 10 per SPF check, including any lookups caused by the use of the "include" mechanism or the "redirect" modifier. If this number is exceeded during a check, a PermError MUST be returned. The "include", "a", "mx", "ptr", and "exists" mechanisms as well as the "redirect" modifier do count against this limit. The "all", "ip4", and "ip6" mechanisms do not require DNS lookups and therefore do not count against this limit. The "exp" modifier does not count against this limit because the DNS lookup to fetch the explanation string occurs after the SPF record has been evaluated.

https://dmarcly.com/blog/why-spf-authentication-fails-none-neutral-fail-hard-fail-soft-fail-temperror-and-permerror-explained

DMARC (Domain-based Message Authentication, Reporting and Conformance) specifies these possible errors (non-pass) in SPF (Sender Policy Framework) authentication: none, neutral, fail (hard fail), softfail (soft fail), temperror (temporary error), and permerror (permanent error).



SPF permerror explained
SPF permerror, also known as SPF permanent error, means the domain’s published records could not be correctly interpreted. This signals an error condition that definitely requires DNS operator intervention to be resolved.

SPF permerror occurs when any of the following is true:

multiple SPF records are found on one domain; learn more here;
the SPF record is syntactically incorrect;
the number of DNS lookups involved in a single SPF check exceeds 10;
the number of void lookups involved in a single SPF check exceeds 2.


https://www.kitterman.com/spf/getspf3.py
SPF record lookup and validation for: magenable.com.au

SPF records are published in DNS as TXT records.

The TXT records found for your domain are:
google-site-verification=-y1kbuABsKoSCvxlxLDBg8FaqXNGer-M2cpQwl0IAHI
v=spf1 mx a ip4:127.0.0.1 a:redmine.magenable.com.au include:_spf.yandex.net include:sendgrid.net include:servers.mcsv.net ~all
MS=1D1E82C1561BD923E7C503D86399BFFCF28933AB

Checking to see if there is a valid SPF record.

Found v=spf1 record for magenable.com.au:
v=spf1 mx a ip4:127.0.0.1 a:redmine.magenable.com.au include:_spf.yandex.net include:sendgrid.net include:servers.mcsv.net ~all

evaluating...
Results - PermError SPF Permanent Error: Too many DNS lookups
Use the back button on your browser to return to the SPF checking tool without clearing the form.



DKIM

что такое dkim. что это за защита. наш почтовый сервер использует RSA пару ключей.
приватный ключ он хранит у себя а публичный мы публикуем в DNS. 
как найти dkim dns record  для домена magenable.com.au

ответ из serferfailt:
All DKIM keys are stored in a subdomain named _domainkey. 
Given a DKIM-Signature field with a "d=" tag of example.com and an "s=" tag of foo.bar, the DNS query will be for foo.bar._domainkey.example.com.

я занлянул в письмо и увидел что 
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=magenable.com.au; s=mail;
	t=1691302522; bh=MpPQWQQcz2LELwPj+r1af4AQX9MUBau1wcRctAjiDJQ=;
	h=Message-Id:Date:Subject:To:From;
	b=rH/0PDAzO7ZFdEwzoCVbd7a7RzT23615HqCdHoex8N2TVwQBE1CbHr/8F+tFr6B5H
	 n3jb4uT6DT5cpZ1XYT6Bl3EZJ0jny6UWUTnhTmROsII8Rs2rDw9DGUsAP7HIMwIekB
	 uD53SX4JNzfZ5dK5DN06K5H4cuw4wnr+pZpQj8/g=

видим что s=mail
d=magenable.com.au

значит
$ dig txt  mail._domainkey.magenable.com.au    +short

"v=DKIM1; k=rsa; t=s; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDac9fLyoKiRzCyUYH0Uj677gLJM3UW05lbXq+7MYSGJNmA/de0lHIm9dNO9zCLuqyCx73vS7WqPZMWbbGUnskvKdnTBVoA4XGIcCvgd0nsmLEVXsa2QWeQQs1eo6VbCVciG6SsZBDVF9arzJCxw9hJKB5y5oa7nd6o0sD79CGMDQIDAQAB"

значит принимающий сервер он видит dkim запись . в ней указан домен  d=magenable.com.au и s=maik он это 
слепляет и ищет в DNS запись. потом он вычисляет хэш от тела письма. потом он берет публичный ключ который он взял
из dkim записи и расшифрорываем тело dkim записи в котором был зашифрован хэш тела письма и сравнивает 
с хэшем который вычисли сам. если они совпдаают значит тело письма дошло к нам в неизменном виде.
правда есть и прикол. дело в том что скажем если у нас есть транзитный поточый сервео то он может dkim хидер
оригинальный убрать и вставить свой. насколкьо я понял наш потчтоый сервер который принимающий он ищет dkim запись в
том домене который указа в самом dkim хидере. а не в домене который указан в теле письма. поэтому если транзитный 
поточый сервер снял оригинальый dkim и поддложил свой dkim то слазии в итоге  в тот домен то указан в новом dkim
и успешно провреим что новый dkim выдает нам коректный хэш. чтоб тких проблем небыло видим надо руками лезить 
в пистмо и проверять dkin от какого домена был проверен.  если это dkim с оригинально го домена то тогда да 
можно утерждать что тело письма к нам дошло в неизменном виде.





DMARC
что такое DMARC нахер он всрался. от чего защищает.
вобще конечно это мудачество что обратный адрес укзываетс в двух содвершенно разных 
и не связанных местах в envelope части и в теле письма. отсюда такие сложности для проврки.
так вот до настоящего момента мы не говорили о проверке почтвого адреса в теле письма. и вот мы добрались 
до такой проверки. полськуо тело письм кодирвется через base64 насколько я заню то почтоый сервер может 
"прочитать письмо". так вот dmarc раотае с обартный адресом указанным в теле письма.  насколько я пнимаю 
то при конекте сервера с сервером первым делом провверяется SPF. это позвляет послать нахер левый сервер 
еще до передачи тела письма. если SPF неудачная то пока досвидаиния. dkim провряется на вторйо стадии
приема письма. когда наконец скачали его тело. если эта стадия прошла успешно то насколько я понимаю
тода настает через DMARC проверки. на предыдущей стадии удаленный сервер нам уже сообщил два почтовых адреса

Sender on envelope		Message Envelope		RFC5321.MailFrom
и
dkim домен

так вот dmarc берет домен из тела в письме и сравнивает с dkim домен и RFC5321.MailFrom 
и если есть совпдаения хотя бы чемто одним то dmarc считаеся успешно проденным.
тоесть либо у тела письма должга быть подпись имнно от оригинального домена либо серер который
нам прислал письмо должен был представит что он отправляет письмо от имени того же домена
что указан в теле письма и иметь разрешение на отправление писем от имени этого домена (что уже было проврено через SPF)

еще раз повторю что если SPF не прошел. то ни dkim ни dmarc как я понимаю не проверяются ибо до них просто
не доходит очередь. если spf прошел но dkim  не прошел то dmarc уже не проверяетя.  и толкьо если spf прошел 
и dkin прошел то тогда доходит очередь до dmarc.
возгкает вопрос -  а  какой смысл в проверке dmarc если spf и dkim уже успешно преойдены. 
смысл проявляется тогда когда у нас пиьсмо пришло на наш сервер не напрямую с сервера котоырй его отправил
а с промежуточного почтового сервера. 
дело вот в чем - во первых промежуттный почтоый сервер может отодрать исходную dkim подпись и влепить свою. 
просто проверка dkim нам ничего недаст. dkim будет верным. а вот dmarc уже дась потому что он сравнит
а каокй домен указан в dkim такой же как в теле пиьсма или домен каогто промежуточного сервера. еслли домены
не совпадут то уже это звоночек. точнее это будет ничего страшного . но это наложит обязанность на следущий шаг.
dmarc сравнит envelope mail адрес с адресом в теле письма и если он не совпдает то dmarc будет не пройден 
и письмо будет послано нахер. в случае когда сервер форвардить письмо то dmarc для spf всегда будет не продйен
потому что промежуточный почтоый сервер будет выставить envelope адрес своего домена а не домена транзитного письма. 
поэтому spf проверка будет пройдена но dmarc spf проврка будет всегда зафйлена. я уже сказал что чтобы dmarc 
проверка прошла надо чтобы выдполнилось хотя бы одно условие либо домен в dkim должегн совпадат с доменом 
в теле письма либо домен в envelope домлжен совпать с доменом в теле письма. таким оббразом есл мы получаем
пиьсмо чреез форвард сервер то нам чтобы прошшла Dmarc проверка надо чтобы dkim подапись была сохранена
с оригинально срврера с которого писмьо было высрано.

а вот еще с другого домента моего мое обяснение про dmarc
DMARC по своей сути чтобы его пройти он требует следущее:

во первых запись DMARC она читается для того домена который указан в ТЕЛЕ письма ( втеле это 
очень важно что именно из тела письма)

так вот дмарк чтобы его прйти он требует чтобы либо письмо было подписано
подписью того сервера (приближенно говоря) который отслылал письмо

либо чтобы отравителем письма был сервер которому разрешено отпрвлять письма именно из домена 
который укащан в тееле письма.


дело вот в чем письмо  не факт что будет послано от сервера отправитля нарпяумую 
на сервер получатель.  письмо может идти транзитом через кучу серверов. тут првада тоже особенность.
есть два типа транзитов через промежуточные сервера.

если это скажем так системный транзит сервер то этот сервер нихера нпроверяет ничего при пересылке
письма. вобще нихуя. поэтому тут нкаких прбем с dmarc\dkim\spf

проблемы начинаются когда у нас юзер настроил у себя в почте чтобы пришедшие письма переслылались
на другой сервер. как это работает тогда

письмо от @magemabe.com.ay адресовано на  @gmail.com а на @gmai.com анстроена форвард на @example.com
и вплане срервеов это выгляди так полт этого пиьсма

yandex server1 ---> yandex server2 ---> yandex server3 ---> .... ---> yandex server 100 ---> gmail server1 ---> ...gmail
server 100

вот наконец мы получили письмо. тпеперь sever 100 будет его форвардить. на example.com sever1

когда examp,ecom server1 получить письмо он будет вот что проверять

1) DKIM  письма . это значит в письме указан хэш письма. и указан домен.  наш сервер высчитваывает хэш сам. 
потом лезет по ссылке на DNS домена указанного в DKIM берет оттула ключ и на оснвое него расширорывает  хэш в письме
. если хэши совплаи значит письма не было имзненено.

2) SPF 
когда сервер А отправляет письмоа серврерУ Б  то он с ходе SMTP сесссиии передает ему таой парметр как rfc5321 smtp.from:
где указан некий домен. тода сервер  Б есл заходчет то идет в DNS и скчаиываеи с домена SPF запись. и в ней 
указано какие IP могут отправтя письа от имени домена.

3) DMARC он смотрит был ли успешный SPF либо DKIM. ему достаточно даже всего одного.
а далее он вот что смотрит. он беерет домен из ТЕЛА письма и сравнивает его с домено указнным в DKIM
либо SPF. еслр хотя ы в одном месте сопвпало то проверка проходится успено. это называется что домен 
прошел проверку на ALIGMNEMET

так вот прикол начинватеся когда мы форвардим письмо.

потмоу что это тгда выгляди вот так:

server A  --------> server B

server A:

smtp from: magenable.com.au  , значит SPF ищется в magenable.com.au
dkim domain: magenable.com.au , значит dkim ищется в magenable.com.au
mail from: magenable.com.au, значит dmarc ищется в magenable.com.au

теперь серерв Б форвадит письмоа на серввер C


--> serer B -----> serve C


server B:

smtp from: gmail.com  , значит SPF ищется в gmail.com
dkim domain: magenable.com.au , значит dkim ищется в magenable.com.au
mail from: magenable.com.au, значит dmarc ищется в magenable.com.au


и мы получаем вот что для dmarc прерки на сервере C
что SPF домен никга не продйет проверку на alignment. потмуо что в SPF был зявланен домен gmail.com
а в mailfrom вказан домен magenable.com.au
и только DKIM alignemnt можеть срабовать потму что dkim domain  magenable.com.au и mailfom domain magenable.com.au

а я уже сказал что dmarc он делает PASS если либо SPF align успеен либл DKIM align успешен.
так как при форварде пиисьма SPF align всегда неусещен то  DMARC проверка при форварде может быт пройдена
только если DKIM align успшеен. это значит что формвард сервер недолжен трогать оригиную DKIM подпись. он длжен ее оствить.
а не пытатться свовать свою подпись. 

таким обрзом DMARC гарантует что письмо было доставлено цеостным незамененым потому что его подлиннноьь подветжедена
оригианольнйо подписью. да получаетс отправлтельно сервер непонятно кто. иоб spf alig непродйен. но 
хотя бы письмо подрпсиано  ооигтинальной подеписью. таки макаром оно доствоверное.

приуо в втом что проверка dmarc\dikim\spf это дело добвронре. тоесть прнмающий сврер может проверять а может не прояреветь.
поэтму скажем магситартльные почтсвререра. они никаих проверкн неделают. просто форвалаять. проверку делают уже 
конечные почту сервера.

теперь как найти эту запись dmarc в dns.
во первых еще раз подчеркну в каком домене ищется dmarc запись. ищется она для домена который
указан в теле письма. еще раз читается тело письма и в нем берется домен. и именно для него 
ищется dmarc запись. как ее искать 

$ dig _dmarc.magenable.com.au    txt  +short
"v=DMARC1; p=reject; aspf=s; adkim=r; pct=100; sp=quarantine; rua=mailto:abuse@magenable.com.au,mailto:dmarc_agg@vali.email;"

распишу поля
rua - понятно это куда слать отчет если проверка dmarc не пройдена
pct - какой процент писем надо проверять через dmarc. видимо иметя ввиду что принимающий почт сервер 
должен вести статитику по письмам приходящим с каждого домена и вычислять процент? бред какойто
p - означает действие если проверка НЕ  пройдена и  также обозначает условие чтобы
проверка была пройдена вот в каком случае.
путь у нас в теле письма указан домен vasya.ru
а в envelope письма указан тоже vasya.ru тогда проверка продйена.

еще есть опция (тэг) sp . она указыает что делать если у нас не продйена проверка для субдомена. 
и также указывает уловие прходждоеия проверки для субдомена . тоесть
пустьу нас envelope mail  =  vasya.local
а мейл в телепиисьа равен = dc01.vasya.local
тогда проверка буде продйена потому что домен в теле пиьма являтся субдоменом доемне укзаанного в envelope.
пока както так. quarantine гвоорит что елс проверка не продйена то помтестить письмо в спам типа того.

aspf=s; -  в этом поле\теге "s" означает strict , еще может быть "r" означает relaxed.
эта настройка отноистя к сравнени домена в теле письма с доменом в envelope.  если "s" значит нужно точное
совпдание. если "r"  то  в тееле письма может быть указан субдомен. 

тоже самое для 
adkim=r; тольо здесь сравниватесся домен в теле исьма с оменом указаны в dkim.

если aspf и dkim не указан в явном виде в dmarc записи то он там все равно присутсвуют и по умолчгичю равны все "r"


а теперь разбор конкретных писем . что значат там поля.

первое письмо от sidor@magenable.com.au к vasya@gmail.com  

во первых в письме сверху идет самый последний север тоесть конечняа точка
а внизу идет самый первый сервер тоесь это начальная точка

 я публкую письмо и сразу коментрую его поля


Delivered-To: vasya@gmail.com

строчка "Received:" это всегда индикатор очередного сервера на пути письма.
Received: by 2002:a05:6a10:c5d6:b0:4e3:e8b9:f4c0 with SMTP id w22csp562855pxt;
        Sat, 5 Aug 2023 22:02:47 -0700 (PDT)

строки с "X-*" нам мало интеерсны это доп поля которе необязательные поэтому на них можно положить хер
X-Google-Smtp-Source: AGHT+IGPkXzqZxu8nL0XWc8IwuT86ztJVpfocc+2es0wcvFbOSQxuNor3ieBBREfqjafeEQWeUzh
X-Received: by 2002:a05:6512:358b:b0:4fd:d4b4:faba with SMTP id m11-20020a056512358b00b004fdd4b4fabamr3432860lfr.51.1691298167084;
        Sat, 05 Aug 2023 22:02:47 -0700 (PDT)


это кусок из трех ARC-* полей (ARC-Seal, ARC-Message-Signature, ARC-Authentication-Results)
про то что эта за хрень я опишу ниже а пока просто скажу что это результат DMARC проврки полученный
от предыдущего почтового сервера. яляется следствием того что письмо идет транизитом через кучу севреров.
ARC-Seal: i=1; a=rsa-sha256; t=1691298167; cv=none;
        d=google.com; s=arc-20160816;
        b=DmqCrHjwp16fG3fK9NTwgvzMvckmNLeSSB9HcawWyV539Dt67Cj8w4LcbU+rSu/GMl
         kBuaMYPX9Pur9PumVSJJFZYxSH6vpc7jn4ZSQ72uvdvvUHVfnM9d8T2o7bykq6K9S6+p
         LI602hZrQ2Xbi4R9axappEjcpxJynCQzBZ+5oJPs4pgoxVuQuw+zJb6GiPfGH2FVakuA
         KE/eHZsFQPXhdFLYuZAwo9wVpiuI2aG3fRW1LIJ43ceADsqa5mpt141ct3d2BLz9qn+Z
         q09PL9okJ0jLyRA5jLb+uuaGAiv2NEyuil7PXoQLnLFpFCfOsvpuFm6W1PoE+Dnfs15R
         tt6Q==

ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=content-transfer-encoding:message-id:date:mime-version:subject:to
         :from:dkim-signature;
        bh=sEVCrYRqSqducNN6CWpR/2aS+ihl98psKBPmAw2VlXk=;
        fh=QzIV+X8eSwMNCICNQ8C98SDj8TaU/TYmmDCEOgZ8Drg=;
        b=07lbD3+K9ba4NWTw+Rhcxnb2Bmz6WCCkhSjeO+P+pkGiiXi09joLy0DSwrPDXlpkR+
         SUfMqPV51CC0I/avQvHo6lY9HJFNvwRQ4irH5YSaEAKr79oybcotNNxKY/KuMl3tYlsG
         IPjrN/lNFvUV/nX8DtxzS9jcRF7+AGo7QSoD0C5P7DjtDbDKTUQeOxdSCU/3mzf7EnkQ
         R288nXm/1xqB178yaIHvo7QAuU9jZ8BRk6LbfZ+2gvJlK09yV1s+ZsXNrlQhrdaANERx
         w/tWmr2o+68L7ZwegJ1GkjbkcURXBEApYKG8B6K5m74P84bHKvoPR2qCbSa1DWA1M9Oa
         ULMw==

как раз в этом поле записаны резудьатты dmarc провреки сохраннеые преддущим сервером (об этом далше)
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@magenable.com.au header.s=mail header.b=nURgGI8x;
       spf=pass (google.com: domain of sidor@magenable.com.au designates 2a02:6b8:c02:900:1:45:d181:d102 as permitted sender) smtp.mailfrom=sidor@magenable.com.au;
       dmarc=pass (p=REJECT sp=QUARANTINE dis=NONE) header.from=magenable.com.au

по какому адреу возвращать письмо в натуре
Return-Path: <sidor@magenable.com.au>




это более ранний сервер в цепочке. опять же я его определи из за поля "Received: "
Received: from forward102b.mail.yandex.net (forward102b.mail.yandex.net. [2a02:6b8:c02:900:1:45:d181:d102])
        by mx.google.com with ESMTPS id a12-20020a056512020c00b004fe09789acesi1700205lfo.525.2023.08.05.22.02.46
        for <vasya@gmail.com>
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 05 Aug 2023 22:02:46 -0700 (PDT)

незнаю нахуй это поле нужно. иногда ыывает иногда его нет
Received-SPF: pass (google.com: domain of sidor@magenable.com.au designates 2a02:6b8:c02:900:1:45:d181:d102 as permitted sender) client-ip=2a02:6b8:c02:900:1:45:d181:d102;

самое важное поле. в нем как раз указаные резульатты проверок dmarc\dkim\spf
Authentication-Results: mx.google.com;
       dkim=pass header.i=@magenable.com.au header.s=mail header.b=nURgGI8x;
       spf=pass (google.com: domain of sidor@magenable.com.au designates 2a02:6b8:c02:900:1:45:d181:d102 as permitted sender) smtp.mailfrom=sidor@magenable.com.au;
       dmarc=pass (p=REJECT sp=QUARANTINE dis=NONE) header.from=magenable.com.au
видим что dkim прверка пройдена. (header.i=@magenable.com.au) = покызвает домен котоырй прописан в dkim
что spf провка пройдена. 
это транзитный сервер. (mx.google.com;)= покзывает что принимающим был сверер gmail, 
smtp.mailfrom=sidor@magenable.com.au; = покаызвает домен котоырй отправящий сервер указал при установке конекта
с этим сервером, 
что dmarc провка продйоена. (p=REJECT sp=QUARANTINE dis=NONE) = эта краткое содержание dmarc dns record,
header.from=magenable.com.au = это адрес проспианный в теле письма.



(следущий в обратном временно порядке почтоый транзитный севрер.
как видно что проверок никаких не делалось  )
Received: from mail-nwsmtp-mxback-production-main-88.sas.yp-c.yandex.net (mail-nwsmtp-mxback-production-main-88.sas.yp-c.yandex.net [IPv6:2a02:6b8:c08:cc03:0:640:cabb:0]) by forward102b.mail.yandex.net (Yandex) with ESMTP id 7514E60022 for <vasya@gmail.com>; Sun,
  6 Aug 2023 08:02:46 +0300 (MSK)


(следущий в обратном временно порядке почтоый транзитный севрер )
Received: from mail.yandex.com (2a02:6b8:c08:1720:0:640:afa2:0 [2a02:6b8:c08:1720:0:640:afa2:0]) by mail-nwsmtp-mxback-production-main-88.sas.yp-c.yandex.net (mxback/Yandex) with HTTP id k1OMTX2WAeA0-NWaL3b61; Sun, 06 Aug 2023 08:02:46 +0300

X-Yandex-Fwd: 1

(вот как раз поле с dkim подписью
d=magenable.com.au; s=mail; = укаазаны поля d и s 
в поле d как раз укызывается домен magenable.com.au который назвыается dkim домен 
а поле s оно является доп херней  зная котоыре
 всегда узнать откуда качать dkim запись с dns  а именно 
 $ dig txt  mail._domainkey.magenable.com.au    +short)

DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=magenable.com.au; s=mail; t=1691298166; bh=sEVCrYRqSqducNN6CWpR/2aS+ihl98psKBPmAw2VlXk=; h=Message-Id:Date:Subject:To:From; b=nURgGI8xQwmB6aPaAxW7G2ZnHtxBmc54t8QipXVNeH2PGVwZiwK0DVo4xCZio1gWM
         sf0uOFa8kz8pYFyGwe2pXieEF7nEHrWIpjaFo8KElDUEwBrE61RBNmCfhkP6M2USTn
         R9H0YGJHWdUFIvewGn/UZ7ajTaeeJHdoLSOPuQVw=



вот важное поле. здесь опять же проверки покааны результаты.
видно что проверяется только dkim
header.i=@magenable.com.au = это домен указанный в dkim подпсии
Authentication-Results: mail-nwsmtp-mxback-production-main-88.sas.yp-c.yandex.net; dkim=pass header.i=@magenable.com.au
Received: by of2lv7ur4mqs5cge.sas.yp-c.yandex.net with HTTP; Sun, 06 Aug 2023 08:02:46 +0300


а это уже тело письма. это уже from в теле письма 
From: sidor <sidor@magenable.com.au>
To: "vasya@gmail.com" <vasya@gmail.com>
Subject: 11:02 06 aug
MIME-Version: 1.0
X-Mailer: Yamail [ http://yandex.ru ] 5.0
Date: Sun, 06 Aug 2023 11:02:46 +0600
Message-Id: <93811691298141@mail.yandex.com>
Content-Transfer-Encoding: 7bit
Content-Type: text/html

<div><div>11:02 06 aug</div></div>




DMARC ARC - что за хрень?

