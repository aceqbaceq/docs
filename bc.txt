| bc

есть такой калькулятор в линуксе.
в целом достаточно ебанутая вещь. 
по двум причинам

во первых она не понимает что такое маленькие буквы если мы задали 16-ую систему счителения 
тоесть 


  a123

этот дебил не поймет. ему нужно обязателно

  A123

также он не понмиает 

  0x123

ему нужно 123


но главный дебилизм в другом. система счисления входных данных указыватеся чееерез

   ibase=10

сисиме счисления выходных данных указыается через 

  obase=16


так вот эти два параметра нужно укзаывать в определеном порялке сука!!!
вот характерный пример

$ bc <<< "ibase=16; obase=16; A+1"
 11

казалось бы что за хуйня!?!?!? мы задали чтобы входные параметры в примере "A+1" рассатривлись
как числа в 16-ом формате и также чтобы результтат примера был выввден на экране в 16-ом 
формате. мы тчно знаем что 0xA+0x1 = 0xB а мыполучили какуюто хуйню 11. почему?

оказывается ! порядок применения ibase, obase имеет значение!
если перый ibase а второй obase это не соввсем одно и тоже если первый obase а второй ibase
я щас докажу

$ bc <<< "obase=16; ibase=16; A+1"
B

нихуя себею а где логика? да - у дебила прогармистоа bc ест логика. своя. 

если мы первым параметром указали ibase то то число которое мы в нем 
указали 16 далее опрееляет систему счисления вводимы данных. казалось бы а чем проблема 
мы же гвоорим про систему счисления в самом примере "A+1"  АВОТНИХУЯ! дело в том что как только мы ввели ibase=16 то  теперь у нас  ВСЕ аргументы рассатриваются
тоже как указанные в 16-ичном формате. поэтому наш второй аргумент obase=16 рассматривается как
число укаазанное в 16-ичном формате. тоесть obase=0x16 тоесть это 22 dec !
поэтому результат у нас будет выведен в 22-ичной системе.
тоесть  я говорю этот дебил пограмист bc он задал так что ibase настройка она влияет нетолко
на поле самого примера а еще и на поле прааметров перед примеро! ЗАХУЯ??"
поэтому чтобы небыло всей этой хуйни нужно всегда ibase указвать последним. вот так 

$ bc <<< "obase=16; ibase=16; A+1"
B

какой же дебил этот програмист. уму не постижимо.


учитывая еще проблемы с маленкиим буквами в итоге приходиим в отк такой формуле 
примененеия

$  { echo -n "obase=16; ibase=16; " ; echo " aaaabbbccc + 121323    " |  tr '[:lower:]' '[:upper:]'; }  | bc
AAAACDCFEF

она позволяет нам вводить примеры с маленкой буквы

а вот еще пример дебилизма - bc не понмиает формат 0xaaa


$ { echo -n "obase=16; ibase=16; " ; echo "   1234 + 804c004    " |  tr '[:lower:]' '[:upper:]'; }  | bc
804D238

$ { echo -n "obase=16; ibase=16; " ; echo "   0x1234 + 0x804c004    " |  tr '[:lower:]' '[:upper:]'; }  | bc
F813D238

тоесть подстановка  0x1234 + 0x804c004 приводит к полной хуйне в ответе.


