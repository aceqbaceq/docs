| bash
| export
| env


вопрос в  чем разница вот этих двух 
подходов

   export LC_CTYPE=en-US.utf-8;
   printf 'vasya';

и 

   env LC_CTYPE=en-US.utf-8 printf 'vasya';

а разница вот в чем!


у нас есть баш. 

у баша есть  два интересных массива переменных.
один смотрим вот так

   $ set

а второй смотрим вот так

   $ env

а чем же разница? А ОНА ОГРОМНАЯ!
вот я задаю в текущем баше новую перменную

   $ vasya=10

смотрим куда она вошла

   $ set | grep vasya
     vasya=10

   $ env | grep vasya
 

окей понятно. а как сделат чтобы она вошла во второй
массив а вот так 

	$ export vasya

	$ env | grep vasya
	vasya=10

и она попрежнему есть в "set" массиве

	$ set | grep vasya
	vasya=10

когда я делаю 


    $ export vasya

то я не создаю новую перменную а баш помечает где
то там себе что перменная vasya она непросто перменн
ая  а еще обладает свойством "env" ну или баш 
копирует эту перменную дополентельно в массив env
точно незнаю. если дальше я буду менять эту пенмнную
любым из способов то оба они будут влиять на вывод
обоих команд

   $ vasya=11

   $ set | grep vasya
     vasya=11
   $ env | grep vasya
     vasya=11

   $ export vasya=12
   $ set | grep vasya
     vasya=12
   $ env | grep vasya
     vasya=12


по факту я считаю что масив пемерных в баш один
просто каждая пременная она имеет доп свойство
о том что есть ли у не свойство "env" или нет.
команда 

  $ set 

выводт масив пеменынх.
а комнада 

  $ env

делает выбору из прдудушего массива но тоько тех
перменых котораые имеют доп свйоство env.

теперь ворос  нахер этонадо.
а дело вот в чем . есть execve()


  int execve(const char *pathname, char *const _Nullable argv[],char *const _Nullable envp[]);

он позволяет нам попрсить ядро поменять бинарник
у данного процесса. и также позвоялет при этом
передать этому новому бинарнику два массива данных

 второй парметр это ссылка на массив  аргументов
итретий праметр это сыслка на массив перменных

что такое массив аргументов. это масвии из элементов
проивзваодного вида тоесть 

 a
 12
 s34
 ert=323432432

тоест к каждому элементу нет никких требований 
кроме как того что элемент не может быть 0x00


а массив пременных это массив где каждый элемент
ождидаетс имеет вот такой вид

  name1=key1
  name2=key2
  name3=key3

тоесть у втрго массвва кажый элмент имеет обязателно
знак равно.
а у первого массива таких требований нет.
поэтому два массива а не один. 


так вот баш когда запускет execve()
то он  во второй массив (третий аргумент) он 
сует только те свои перменные которые имеют признак env !!! вот нахера убаша разделение на просто пермене
ные и те которые имеют признак env.
тоесть просто перменные они остантуя тлько в нашем
процессе баща. а перменные с признаком env будут
преданы при запуске любой команды(бинакрника).

а теперь на счет вот этой строки

   env LC_CTYPE=en-US.utf-8 printf 'vasya';


приколо ее вот в чем. она заствояет баш при 
запуске prntf через exevve() всунуть перенную 
LC_CTYPE=en-US.utf-8 в третий аргумент execve()
ПРИ ЭТОМ!!! данная перменная LC_CTYPE=en-US.utf-8
не будет создана в памяти данного баш процесса!
тоесть ели у нас есть преенная котору мы хотим
передать в новый процесс но при этом мы не хотим
ее создавать в текущем баш процессе (напрмиер
потмоу что она уже есть в таещущем баш прцоессе
и ее зачнение мы менять внутри пмяти пцроесса не 
хотим ) но хотим ее создать в новом процессе.
вот в этом сулчае мы юзаем ENV!!!

тоесть вот у нас есть в баше настрокнная локаль

     LC_CTYPE="en_US.UTF-8"

и мы хотим это так и оставить. но мы запумукаем
друну процесграмму и вней эта перенная должна
быть и миеть другое зчание !!!
тггда я делаю

   $ env LC_CTYPE="ru_RU.UTF-8"   ls -1


а если я сделаю export LC_CTYPE="ru_RU.UTF-8"
то пролема в том что эта хрень поменяет
мне занчение и для текщуего баша! а я этого 
не хочу!!
вот почему в одном сулчае мы юзаем 

 export .....

а вдургмо 
  
 env .......

 