описвыаю инсталляцию с   --docker=none и --container-runtime=containerd

есть такая проблема если мы ставим с параметром driver=none
и с runtime=containerd то первое с чем придется  столкнуться что в коде 
миникуба есть баг (https://github.com/kubernetes/minikube/issues/5549)
он состоит в том что хотя мы ставимся на driver=none но почему то миникуб
все равно ищет бинарник докера на компе. и чтобы это обойти 
надо на компе создать фейковый бинарник докера. и тогда инсталлятор
успешно проскочит этот этап и инсталляция пройдет успешно.

 $ >/usr/bin/docker 
 $ chmod +x /usr/bin/docker 


далее надо минимально 2 цпу для виртуалки и памяти нужно минимум 1900MB
меньше никак недаст инсталлятор иначе поставиться. 
и кстати опции  --cpus=''   и     --memory='' они игнорируются 
инсталлятором если driver=none , то есть эти опции бесполезно 
пытаться подкрутить. просто прими то что виртуалка долджна иметь минимум
2 cpu и миниум 1900 MB. покдурчивать бесполезно.

далее нужно поставить кучку компонентов ручками
то что нужно поставить ручками указано вот тут 
https://minikube.sigs.k8s.io/docs/drivers/none/
а именно нужно поставить
	cri-o
	cni
	iptables (legacy mode)
	conntrack
	crictl
	selinux permissive (в убунту его по дефолту вообще нет)
	cgroups v1 (v2 не подходит)

    <=========  остановился здесь. осталось расписать 
                как поставить руками то что указано в списке

награда за такую более сложную установку состоит в том что у нас сеть подов
(POD net) будет развернута прямо на хосте (за бриджем) а не внутри докер 
контейнера. тоесть прям с хоста мы можем достучаться до подов. 
а в более простой установке  у нас поды сидят внутри докер контейнера
и хрен ты к ним с хоста достучишься. поэтому эта установка более выгодная
для использования в конечном итоге.

итак теперь НАКОНЕЦ можно запустить инсталлятор миникуба
$  minikube start  --driver=none   --container-runtime=containerd --cni=bridge 


кстати конфиг миникуба хранится в ~/.minikube/


