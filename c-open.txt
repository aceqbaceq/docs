| C
| open
| terminal


что дает open()

юзер процесс может читать писать только в файлы
те которые он перед этим "открыл" через open()
при этом ядро создает в свойствах этого процесса
в ядре стркутуру дескриптор. через который процесс
может запрашивать данные из файла и писать данные
в файл. 

когда мы запускаем open()


   open("/tmp/2.txt",....)


то мы указвыает "путь " на фс. так вот можно указать
путь к обычному файлу на диске. а можно укзаать
путь к файл на /proc типа /proc/pid/fd/15


open("/proc/pid/fd/15",....)

и тогда ядро посмотрит на какой файл этот дескриптор
указывает и наш созданный дескриптор будет по факту
укаызвать не на /proc/pid/fd/15 а на тот файл на который тот указывал.
так вот если дескриптор уазывал на обычный файл
или на файл терминала то "открытие" произодет
успешно. а вот если /proc/pid/fd/15 указывал на 
пайп или сокет то ядро пошлет.


такой еще попутный момент. у нас есть процесс
скажем bash и он имеет у себя открытым

  /dev/tty2

я беру из другого процесса открываю тот же

 /dev/tty2

далее я начинаю слать в этот демкриптор байты.
воппрос куда они полетят? они полетят на tty driver
который сидит за /dev/tty2 а куда они дльше 
полетят? они полетят на ТЕРМИНАЛ тоесть на дисплей
терминала. а баш они не полетят! потому что в баш 
летят из /dev/tty2 только те байты которые 
попали в tty driver из клавы терминала.
вот схема

        ==========================>
клава - терминал --- tty driver --- /dev/tty2 --bash


тоесть если с терминала (который невиидим из юзер
спейса который там сидит как кусок кода) в tty driver
приелатают байты то упрощенно говоря он их пихает
в /dev/tty2 и они попаадют в бащ

если баш пихает в /dev/tty2 байты то tty driver
их пихает в темринал а тот на дислпей.

так вот если у меня есть второй баш (баш2)
который тоже открыл /dev/tty2

клава - терминал --- tty driver --- /dev/tty2 --bash
                                     \----------bash2

то если я из баш2 шлю байты в /dev/tty2 то 
они попадают в tty driver и он их коненоже
в bash пихать не будет. он их отправить в темринал
а тот на дисплей.

а вот если я на клаве нажму кнопки то они идут 
в терминал оттуда на tty driver тот их пихает
в /dev/tty2 и оттуда их может считать как bash
так и bash2  . считает тот кто рандомно окажется быстрее. 
главня суть в том что если я открою файл /dev/tty2
в другом процесе то через него никак мне не 
просунуть байты в bash1
да они будут рисоваться на дислпее терминала
но в самом bash1 этих байтов не будет.

с сокетами еще почему получается не получается
к ним покчиться через open() потому
что обычно как мы рабем  сокеатами. вначале
мы создаем болванку

  socket()
а потом делаем 
  connect("/path/to/unix socket file")

и в конект мы указыаем путь к скажем локальному
юникс сокету. поэтому просто open("/path/to/unix socket file")  к локальному юникс сокету уже поэтому не работает. 

где то в инете написано что неьльяз двум процессам
поключаться к одному сокету.
ни через open() ни через socket()+connect()

причем я вот еще что проверил. в плане локального юникс сокета. 
унас обычно как один процесс создает слушающий
сокет. а второй потом к нему конестится так вот
когда эта сладкая парочка создаалась то третий
процес не может поключться через socket()+bind()
ни слушающему сокету ни к индивидуальному.

