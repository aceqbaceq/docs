	- env команда. что она делает
команда env
сразу внесем ясность что это за команда

$ type -t env
file
$ type -p env
/usr/bin/env

итак  это внешняя команда а не башевский builtin.


документацию читаем в:
$ man env
$ info env

утилиита является частью набора утилит coreutils

$ info coreutils

итак во первых env это небашевский builtin это внещняя программа.
что она делает. она позволяет запустить программу (любую кроме . : break continue eval exec exit export readonly return set shift  times trap unset ) в модифицированном окружении переменных. тоесть можно вырезать часть переменных , добавить новые или изменить старые.
наверное фишка в том что можно удалить все переменные для запускаемой программы.

если мы запустим просто $ env без параметров то на экране как вылезет 
окружение переменных. Но программа конечно не преднзначена именно для вывода окружения
для этого есть другая программа $ printenv 

если мы используем $ env имя_команды то переменые окружения неменяются но зато 
есть очень полезное свойство 





	
	- bash builtins
Значит что это за такой список программ : . : break continue eval exec exit export readonly return set shift  times trap unset.
Это так называемые shell builtin utilities. сокращенно builtin. тоесть эта команда она встроена в сам бинарник баша поэтому
башу ненадо форкаться и запускать никакие сторонние файлы. Но более того привденные список команда это непросто builtin это special builtin. а в чем разница. В POSIX я нашел вот что.
Вот это список простых regualar built-in utility:
alias bg cd command false fc fg getopts jobs kill newgrp pwd read true umask unalias
wait

Вот это список special built-in utility:
в самом посикс список ненашел. нашел только на стороннем сайте про bash
break : . continue eval exec exit export readonly return set
shift trap unset

из того что нашел в чем разница между простым builtin и special builtin ==> если мы запустили
скрипт баша и получили ошибку при выполнении простого builtin то скрипт продолжит дальше
работать а вот если вылезла ошибка при выполнении special builtin то скрипт остановится. 
вот и вся разница.


	- передача переменных окружения из текущего процесса bash в дочерний процесс. и как потом дочерний процесс может прочитать распознать эту переменную
	- посмотреть что все эти комнды делают : . : break continue eval exec exit export readonly return set shift  times trap unset

	- посмотреть про все башевские builtin

	- что вообще такое builtin. он встроен куда? посмотреть в posix
	 Here is a list of the special built-in utilities that are
standardized by POSIX 1003.1-2004.

     . : break continue eval exec exit export readonly return set shift
     times trap unset

     - я вот непонял в info от env пишут что ее нельзя использовать с builtin. но ползьвольте
     а в чем проблема? env это отдельная программа когда она запускается то она будет искать
     программу через PATH а на баш ей будет насрать. в чем проблема?
     прикол в том что винете я нашел что ее как раз таки и используют для того чтобы если у нас в системе есть билтин и внешняя прогармма с одним имеенем как printf что через env printf нам гарантированно заумпустить именно внешнюю программу. что за нахер?

	- info coreutils ?

	- bash guide for beginners
	- bash getopts

