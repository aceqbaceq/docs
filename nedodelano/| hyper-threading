| thread


>>> треды имеют общую вирт паять из того что я прочитал.
но не проверял. но у них индивиуадьный стек и индивиуальный кернел стек


ксатти возникает вопрос. когда мы лезем в /proc/pid/ то эта папка она рассказывает
параметры работы у процесса. тоесть у некоторого автономного куска кода 
который имеет свою вирт память и имеет своем место в очереди на некотором цпу
в шедулере. тоесть этот кусок кода регулярно пихают в цпу. у него своя память. 
это его отичает от других кусков автономного кода у которых своя вирт память 
и свое место в очереди на цпу. но это все клево если процесс одно тредовый. окей.
а если процесс много тредовый тогда как? если у нас процесс одно тредовый 
то он имеет папку /proc/pid/ и /proc/pid/tasks/N
и внутри последенй папки просто грубо говоря симлинк на голвную папку. 
а если у нас процесс двух тредовый тогда как?
у нас есть папки
	/proc/pid/
	/proc/pid/N1
	/proc/pid/N2
так вот головная папка /proc/pid она описывает работу какого куска кода 
который N1 или N2?
>>>заметка: если есть мультитред и один их тредов выходит,  даже если это главный тред(у котрого
pid=tgid) то все равно остальные треды работают продолжают!
>>>>заметка: окзывается kill шлет сигнал не процессу! а он его шлет треду!
тоесть в kill аргумент не номер процесса! а номер треда! (процесс и тред в старой тех
нологии). но так как ps aux и pidof показыает пока не знаю что но этот такой тред
у которого pid=tgid поэтому мы шлем kill tgid и убиваем по факту мастер тред. 
фишка еще и в том что таким макаром можно гасить нематер треды и все остальные 
треды продолжают раобтать даже если это мастер тред. если сигнал летит на немастер тред
то если в хендлере стоит pthread_exit то тред умирает и ниаких Z невисит. а вот если 
убить даже через pthrad_exit мастер тред то вот мастер тред висит с Z!
а не мастера просто исчезают! 

$ ps aux -T | grep thread3 | grep -v grep | grep thread3
vasya    15152 15152  0.0  0.0      0     0 pts/33   Zl+  03:32   0:00 [thread3.exe] <defunct>
vasya    15152 15153  0.0  0.0  33428  1888 pts/33   Sl+  03:32   0:00 ./thread3.exe
vasya    15152 15154  0.0  0.0  33428  1888 pts/33   Sl+  03:32   0:00 ./thread3.exe
vasya    15152 15155  0.0  0.0  33428  1888 pts/33   Sl+  03:32   0:00 ./thread3.exe

значит я отселледил - к паренту мултьитред процесса не полетит SIGCHLD пока
не сдохнет последний тред! поэтму если хлопнуть мстер тред он будет висеть 
вечно пока есть хотя бы один немастер тред который работат! поэтом умуи вист мастер
тред в Z!
>>замечание: если главный тред уже висит в Z то послыка ему сигнала приводит к тому
что сигнал досталяется к следущему после него треда!




//
кстати вопрос вот у нас интеррапт таймер случился. цпу выгрузило в память 
всю требуху от выполнения текущей програмы и загрузило таймер интеррпапт хендлер.
то есть шедулер. так вот вопрос - этот шедулер он занимается тем какой код 
засунуть на текущее ядро или на весь цпу? наверное скорее всего только на
это ядро. а на остальных ядрах свой таймер. и туда на каждое ядро индиивдадно
заггружается щедулер


//
кстаи я не понимаю
по каким криетяерия команда w
ищет свои строчки!
дело в том что я могу руками (на си) запустить баш так что
у него будет  в /proc/pid/cmdline указано -bash
однако этот терминал не появится в выводе w
так как он предяелетяе?
перввая строчка окей  - это tty1  ятам вел пароль
но остальные строки это xterm. я так нихрена пароль не вводил
так как он строки формирует ?


$ w
 04:05:36 up 3 days,  6:09,  5 users,  load average: 0,59, 0,78, 0,89
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
vasya    tty1     -                Вс00   27:30m  0.16s  0.11s -bash
vasya    pts/10   :0               Пт18    2days  0.08s  0.08s bash
vasya    pts/53   :0               Сб23   27:59m  0.74s  0.67s mc -u
vasya    pts/102  :0               16:39   11:21m  2.50s  0.13s bash
[vasya@lenovo ~]$ 
