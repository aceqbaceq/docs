в убунту есть вот такая хрень
 man 8 fanatic

 что это за хрень?!?!?! fan network

 

==


ознакосмиться для чего все эти утилиты
(это из пакета util-linux)

$ dpkg -L  util-linux | grep bin/
/bin/dmesg
/bin/findmnt
/bin/lsblk
/bin/more
/bin/mountpoint
/bin/su
/bin/wdctl
/sbin/agetty
/sbin/blkdiscard
/sbin/blkid
/sbin/blkzone
/sbin/blockdev
/sbin/chcpu
/sbin/ctrlaltdel
/sbin/findfs
/sbin/fsck
/sbin/fsck.cramfs
/sbin/fsck.minix
/sbin/fsfreeze
/sbin/fstrim
/sbin/hwclock
/sbin/isosize
/sbin/mkfs
/sbin/mkfs.bfs
/sbin/mkfs.cramfs
/sbin/mkfs.minix
/sbin/mkswap
/sbin/pivot_root
/sbin/runuser
/sbin/sulogin
/sbin/swaplabel
/sbin/switch_root
/sbin/wipefs
/sbin/zramctl
/usr/bin/addpart
/usr/bin/choom
/usr/bin/chrt
/usr/bin/delpart
/usr/bin/fallocate
/usr/bin/fincore
/usr/bin/flock
/usr/bin/getopt
/usr/bin/hardlink
/usr/bin/ionice
/usr/bin/ipcmk
/usr/bin/ipcrm
/usr/bin/ipcs
/usr/bin/last
/usr/bin/lscpu
/usr/bin/lsipc
/usr/bin/lslocks
/usr/bin/lslogins
/usr/bin/lsmem
/usr/bin/lsns
/usr/bin/mcookie
/usr/bin/mesg
/usr/bin/namei
/usr/bin/nsenter
/usr/bin/partx
/usr/bin/prlimit
/usr/bin/resizepart
/usr/bin/rev
/usr/bin/setarch
/usr/bin/setpriv
/usr/bin/setsid
/usr/bin/setterm
/usr/bin/taskset
/usr/bin/uclampset
/usr/bin/unshare
/usr/bin/utmpdump
/usr/bin/whereis
/usr/sbin/chmem
/usr/sbin/ldattach
/usr/sbin/readprofile
/usr/sbin/rtcwake
/sbin/getty
/usr/bin/i386
/usr/bin/lastb
/usr/bin/linux32
/usr/bin/linux64
/usr/bin/x86_64


====
проработать локи к файлам
надо прорабовтаь:
  - статью 
    https://www.baeldung.com/linux/file-locking#:~:text=The%20lslocks%20Command,file%20locks%20in%20our%20system.&text=In%20the%20above%20list%2C%20we,locked%20files%20in%20the%20system.
  - маны по трем функциям
    $ man 2 flock
    $ man 3 lockf
    $ man 2 fcntl   <======


====
  If pshared is nonzero, then the semaphore is shared between processes, and should be located in a region of shared memory (see shm_open(3), mmap(2), and  shmget(2)).   (Since  a
       child created by fork(2) inherits its parent's memory mappings, it can also access the semaphore.)  Any process that can access the shared memory region can operate on the sema‐
       phore using sem_post(3), sem_wait(3), and so on
       
       
       что?????
       
       
  sem_init() initializes the unnamed semaphore at the address pointed to by sem.  The value argument specifies the initial value for the semaphore.


чайлд он имеет копию памяти парента. но обе памяти незавсиимые.
один клон другго но связи между ними нет.
а если семаор хранится в памяти процесса. то как два процесса парент и чаолд
могут делить один семафор?? что хуйня. он же у каждого свйоп получется?!?!?!

===

инсталляция qemu на комп

1998  apt-get install qemu-system-x86
 1999  apt-get install qemu-user-static
 2004  apt-get install qemu-guest-agent
 2005  apt-get install gnome-terminal
==
$ qemu-img create -f qcow2 manj.img 15G
==
qemu entwork tap



запуск устанвоки
 qemu-system-x86_64 -name manj11 -m 2G -cdrom ~/Downloads/manjaro-cinnamon-23.0.1-230921-linux65.iso   -boot d -hda ./manj.img  -drive file=manj.img,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm -display sdl   -smp 2 -M pc-q35-2.11   -vga virtio    -netdev tap,id=mynet0,ifname=tap0,script=no,downscript=no -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:01

$  qemu-system-x86_64 -name manj11 -m 2G -cdrom ~/Downloads/manjaro-xfce-24.0-240513-linux69.iso  -boot d -hda ./manj.img  -drive file=manj.img,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm -display sdl   -smp 2 -M pc-q35-2.11   -vga virtio    -netdev tap,id=mynet0,ifname=tap1,script=no,downscript=no -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:02




manjao 1GB это вообще неподходит. нужно миимум 2ГБ при устанвке. 
пишет при згрзуе устанвощика что qemu agent dependency failed как лечить незнаю

==
==
чо вотэто за хуня
qemu ....   -device virtio-serial-pci
==
полезные комнды
# stty cols 158
# stty rows 39

-==
надо проверяеть какой менелжер в сиетме устанолвен.
systemd-networkd vs networkmanager vs netplan ?
==
удалить пакет и его депеденси
 pacman -Rsc package_name
 ==
 
 
 у манаджаро нет подеофтлут никкого файрвллвла
 ==
 ебусь с разрешением в тект консоли лин8укск арча
 pacman -S hwinfo
 hwinfo --framwbuffer
 
 ТЕКСТ косоль она в tty 1 нерартает. надо тыкать в alt+f2
 там кноки рабоиаюи
 
 sudo -s
echo 4 > /sys/class/graphcis/fb0/blank #monitor should be off
echo U:1280x720p-30 > /sys/class/graphics/fb0/mode
echo 0 > /sys/class/graphcis/fb0/blank #monitor should be on again



===

tty
из за пуллимута который в mkinitcpio которй в initramfs занято tty1сука
ив процессах висел процесс у котрого все было deleted!!!! и в maps
 я  вналле нихрен не понялу!
==

оазершить iptables на docker0 конейренры внутри нуттубка а именно ssh!
==
узнать как ядро было загуркжено в граб

s# cat /proc/cmdline 
BOOT_IMAGE=/boot/vmlinuz-6.2.0-32-generic root=UUID=9893ccba-b082-43ec-82c4-dea1d578316d ro quiet intel_pstate=disable cryptdevice=UUID=18762ff8-3aed-4810-9a56-d59aba30e533:luks-18762ff8-3aed-4810-9a56-d59aba30e533 root=/dev/mapper/luks-18762ff8-3aed-4810-9a56-d59aba30e533 resume=/dev/mapper/luks-46b7c787-735a-4251-a15c-f41f57ce4e16


===

2.0 /proc/consoles
------------------
Shows registered system console lines.

To see which character device lines are currently used for the system console
/dev/console, you may simply look into the file /proc/consoles:

  > cat /proc/consoles
  tty0                 -WU (ECp)       4:7
  ttyS0                -W- (Ep)        4:64

The columns are:

  device               name of the device
  operations           R = can do read operations
                       W = can do write operations
                       U = can do unblank
  flags                E = it is enabled
                       C = it is preferred console
                       B = it is primary boot console
                       p = it is used for printk buffer
                       b = it is not a TTY but a Braille device
                       a = it is safe to use when cpu is offline
  major:minor          major and minor number of the device separated by a colon

у меня
# cat /proc/consoles 
tty0                 -WU (EC p  )    4:1



===

nomodeset

In the beforetime the resolution (or screen mode) was set differently in a bunch of different places: the BIOS would set the initial mode, then Grub would set a mode supported by the ancient VESA BIOS Extensions (VBE) system, dependent on which obsolete video card your GPU pretended to be, then X would set a different mode dependent on the driver and the detected display. Lots of mode switches, and lots of mess, and no shared infrastructure. Then Kernel ModeSetting (KMS) was developed that scraps all of that nonsense in favour of simply letting the Linux kernel handle it since the kernel has to interact with the hardware anyway and the software needs to interact with the kernel anyway. nomodeset tells the kernel not to do KMS, so you fall back to the prior hodge-podge. It's useful when nouveau (the open-source driver for Nvidia hardware) fails to detect things properly through KMS, but not for much else.

For newer AMD drivers than the ones that came with the initial 18.04 release you'd want the Hardware Enablement Stack (HWE) selected (the default for fresh installs from 18.04.2 onwards) and a newer version of Mesa. There are different PPAs available that give versions of Mesa with different levels of newness.

===
смотрим модел викллеоартычерез
lscpi

а смотрим драйрве который эту железку рулит
lspci -v

00:02.0 VGA compatible controller: Intel Corporation 4th Gen Core Processor Integrated Graphics Controller (rev 06) (prog-if 00 [VGA controller]) <==== видеокрта модель
	Subsystem: Lenovo ThinkPad T440p
	Flags: bus master, fast devsel, latency 0, IRQ 29
	Memory at f0000000 (64-bit, non-prefetchable) [size=4M]
	Memory at e0000000 (64-bit, prefetchable) [size=256M]
	I/O ports at 3000 [size=64]
	Expansion ROM at 000c0000 [virtual] [disabled] [size=128K]
	Capabilities: <access denied>
	Kernel driver in use: i915
	Kernel modules: i915   <======= драйвер

===
qemu 
узниаит какие железки она может показать внутри VM

qemu-system-x86_64 -device help

оно покжает все желещки


видеоарты
Display devices:
name "ati-vga", bus PCI
name "bochs-display", bus PCI
name "cirrus-vga", bus PCI, desc "Cirrus CLGD 54xx VGA"
name "isa-cirrus-vga", bus ISA
name "isa-vga", bus ISA
name "qxl", bus PCI, desc "Spice QXL GPU (secondary)"
name "qxl-vga", bus PCI, desc "Spice QXL GPU (primary, vga compatible)"
name "ramfb", bus System, desc "ram framebuffer standalone device"
name "secondary-vga", bus PCI
name "sga", bus ISA, desc "Serial Graphics Adapter"
name "VGA", bus PCI
name "vhost-user-gpu", bus virtio-bus
name "vhost-user-gpu-pci", bus PCI
name "vhost-user-vga", bus PCI
name "virtio-gpu-device", bus virtio-bus
name "virtio-gpu-gl-device", bus virtio-bus
name "virtio-gpu-gl-pci", bus PCI
name "virtio-gpu-pci", bus PCI, alias "virtio-gpu"
name "virtio-vga", bus PCI
name "virtio-vga-gl", bus PCI
name "vmware-svga", bus PCI


CPU devices:
name "486-v1-x86_64-cpu"
name "486-x86_64-cpu"
name "athlon-v1-x86_64-cpu"
name "athlon-x86_64-cpu"
name "base-x86_64-cpu"
name "Broadwell-IBRS-x86_64-cpu"
name "Broadwell-noTSX-IBRS-x86_64-cpu"
name "Broadwell-noTSX-x86_64-cpu"
name "Broadwell-v1-x86_64-cpu"

но более того. можно смотерть екакие опции парметры можно по железе указатьа

$ qemu-system-x86_64 -device qxl,help  <======
qxl options:
  acpi-index=<uint32>    -  (default: 0)
  addr=<int32>           - Slot and optional function number, example: 06.0 or 06 (default: -1)
  cmdlog=<uint32>        -  (default: 0)
  debug=<uint32>         -  (default: 0)
  failover_pair_id=<str>
  global-vmstate=<bool>  -  (default: false)
  guestdebug=<uint32>    -  (default: 0)
  max_outputs=<uint16>   -  (default: 0)
  multifunction=<bool>   - on/off (default: false)
  ram_size=<uint32>      -  (default: 67108864)
  ram_size_mb=<uint32>   -  (default: 4294967295)
  revision=<uint32>      -  (default: 5)
  rombar=<uint32>        -  (default: 1)
  romfile=<str>
  romsize=<uint32>       -  (default: 4294967295)
  surfaces=<int32>       -  (default: 1024)
  vgamem_mb=<uint32>     -  (default: 16)
  vram64_size_mb=<uint32> -  (default: 4294967295)
  vram_size=<uint64>     -  (default: 67108864)
  vram_size_mb=<uint32>  -  (default: 4294967295)
  x-pcie-extcap-init=<bool> - on/off (default: true)
  x-pcie-lnksta-dllla=<bool> - on/off (default: true)
  xres=<uint32>          -  (default: 0)
  yres=<uint32>          -  (default: 0)

===
showconsolefont
setfont ter-v24n

шрифт на стадии загрузки зашит в initramfs
а туда он поаадет от 
mkinitcp -H cosnolefont
а там наисано что шоитф бертя из vconsole.cfg
шриыт для консоли лежат в /usr/share/kbd/consolefont/

==
окзываетс есть 16 битныйй протокл загрузки ядра линукс
есть 32 быитный протокоол загрузки ядра линукс

===
grub
set pager=1
vbeinfo
==
граф настройки
qemu -device qxl-vga,id=video0,vgamem_mb=64,xres=1900,yres=1000
fbset = опзовялет посмртеть
video=1900x1000M@60
grub_gfxmode=1600x900x32
grub_gfxpayload_LINUX=....
grub_terminal_output=console
==
со шрфитами
mkinitcp -P
хук consolefont
читаем имя фонта из /etc/vconosle.cfg
грифты лжат в /usr/share/kbd/consolfeont
првроеть щас шрфит эт 
serfont ....
посмтеть текущий конльны шрифт это 
showconsolefont -i -v  -C ,,,,
==
по пводу qemu и виедокарт
как я пнял самая клаяаная видеокрта
это ели у ебя на буке две карты. иодну
из них ожно пробростить в виртуалку!
это будет саая ыстрая схема!
==
qemu aget позоволяет из libvirt
слтать комнду в ВМ
spixe agent позволяет иметь типа 
каоассуную граф связь с витуалкой
например мышка клсно рабоатет
видимо переход програзный от хсота
в вм

==
spice
их строка
qemu-system-x86_64 -vga qxl -device virtio-serial-pci -spice port=5930,disable-ticketing=on -device virtserialport,chardev=spicechannel0,name=com.redhat.spice.0 -chardev spicevmc,id=spicechannel0,name=vdagent

моя строка
qemu-system-x86_64 -name manj11 -m 2G   -boot d -hda ./manj.img  -drive file=manj.img,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm -display sdl   -smp 1  -M pc-q35-2.11        -netdev tap,id=mynet0,ifname=tap1,script=no,downscript=no -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:02  -device qxl-vga,id=video0,vgamem_mb=16

моя новая строка
qemu-system-x86_64 -name manj11 -m 2G   -boot d -hda ./manj.img  -drive file=manj.img,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm   -smp 1  -M pc-q35-2.11        -netdev tap,id=mynet0,ifname=tap1,script=no,downscript=no -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:02  -vga qxl -device virtio-serial-pci -spice port=5930,disable-ticketing=on -device virtserialport,chardev=spicechannel0,name=com.redhat.spice.0 -chardev spicevmc,id=spicechannel0,name=vdagent
==

virt-manager -c qemu:///session

==

libvirt

/usr/bin/qemu-system-x86_64 
-name guest=manjaro,debug-threads=on 
-S 

-object {
"qom-type":"secret",
"id":"masterKey0",
"format":"raw",
"file":"/home/vasya/.config/libvirt/qemu/lib/domain-2-manjaro/master-key.aes"} 

-machine pc-q35-6.2,usb=off,vmport=off,dump-guest-core=off,memory-backend=pc.ram 
-accel kvm 
-cpu host,migratable=on 
-m 2048 

-object {"qom-type":"memory-backend-ram","id":"pc.ram","size":2147483648} 

-overcommit mem-lock=off 
-smp 1,sockets=1,cores=1,threads=1
-uuid 3922d246-c833-437e-80b6-8ddea7a7538b 
-no-user-config 
-nodefaults 
-chardev socket,id=charmonitor,fd=29,server=on,wait=off 
-mon chardev=charmonitor,id=monitor,mode=control 
-rtc base=utc,driftfix=slew -global kvm-pit.lost_tick_policy=delay 
-no-hpet 
-no-shutdown 
-global ICH9-LPC.disable_s3=1 
-global ICH9-LPC.disable_s4=1 
-boot strict=on 
-device pcie-root-port,port=16,chassis=1,id=pci.1,bus=pcie.0,multifunction=on,addr=0x2
-device pcie-root-port,port=17,chassis=2,id=pci.2,bus=pcie.0,addr=0x2.0x1 
-device pcie-root-port,port=18,chassis=3,id=pci.3,bus=pcie.0,addr=0x2.0x2 
-device pcie-root-port,port=19,chassis=4,id=pci.4,bus=pcie.0,addr=0x2.0x3 
-device pcie-root-port,port=20,chassis=5,id=pci.5,bus=pcie.0,addr=0x2.0x4 
-device pcie-root-port,port=21,chassis=6,id=pci.6,bus=pcie.0,addr=0x2.0x5 
-device pcie-root-port,port=22,chassis=7,id=pci.7,bus=pcie.0,addr=0x2.0x6 
-device pcie-root-port,port=23,chassis=8,id=pci.8,bus=pcie.0,addr=0x2.0x7 
-device pcie-root-port,port=24,chassis=9,id=pci.9,bus=pcie.0,multifunction=on,addr=0x3 
-device pcie-root-port,port=25,chassis=10,id=pci.10,bus=pcie.0,addr=0x3.0x1
-device pcie-root-port,port=26,chassis=11,id=pci.11,bus=pcie.0,addr=0x3.0x2 
-device pcie-root-port,port=27,chassis=12,id=pci.12,bus=pcie.0,addr=0x3.0x3 
-device pcie-root-port,port=28,chassis=13,id=pci.13,bus=pcie.0,addr=0x3.0x4 
-device pcie-root-port,port=29,chassis=14,id=pci.14,bus=pcie.0,addr=0x3.0x5 
-device qemu-xhci,p2=15,p3=15,id=usb,bus=pci.2,addr=0x0 
-device virtio-serial-pci,id=virtio-serial0,bus=pci.3,addr=0x0 

-blockdev {"driver":"file","filename":"/home/vasya/.local/share/libvirt/images/manjaro.qcow2","node-name":"libvirt-2-storage","auto-read-only":true,"discard":"unmap"} 

-blockdev {"node-name":"libvirt-2-format","read-only":false,"discard":"unmap","driver":"qcow2","file":"libvirt-2-storage","backing":null} 

-device virtio-blk-pci,bus=pci.4,addr=0x0,drive=libvirt-2-format,id=virtio-disk0,bootindex=2 

-blockdev {"driver":"file","filename":"/home/vasya/Downloads/manjaro-cinnamon-23.0.1-230921-linux65.iso","node-name":"libvirt-1-storage","auto-read-only":true,"discard":"unmap"} 

-blockdev {"node-name":"libvirt-1-format","read-only":true,"driver":"raw","file":"libvirt-1-storage"} 

-device ide-cd,bus=ide.0,drive=libvirt-1-format,id=sata0-0-0,bootindex=1 

-netdev user,id=hostnet0 -device virtio-net-pci,netdev=hostnet0,id=net0,mac=52:54:00:42:ae:99,bus=pci.1,addr=0x0 

-chardev pty,id=charserial0 

-device isa-serial,chardev=charserial0,id=serial0 

-chardev socket,id=charchannel0,fd=27,server=on,wait=off 

-device virtserialport,bus=virtio-serial0.0,nr=1,chardev=charchannel0,id=channel0,name=org.qemu.guest_agent.0 

-chardev spicevmc,id=charchannel1,name=vdagent 

-device virtserialport,bus=virtio-serial0.0,nr=2,chardev=charchannel1,id=channel1,name=com.redhat.spice.0 

-audiodev {"id":"audio1","driver":"spice"} 

-spice port=5900,addr=127.0.0.1,disable-ticketing=on,image-compression=off,seamless-migration=on 

-device qxl-vga,id=video0,ram_size=67108864,vram_size=67108864,vram64_size_mb=0,vgamem_mb=16,max_outputs=1,bus=pcie.0,addr=0x1 

-device virtio-balloon-pci,id=balloon0,bus=pci.5,addr=0x0 

-object {"qom-type":"rng-random","id":"objrng0","filename":"/dev/urandom"} 

-device virtio-rng-pci,rng=objrng0,id=rng0,bus=pci.6,addr=0x0 

-sandbox on,obsolete=deny,elevateprivileges=deny,spawn=deny,resourcecontrol=deny 

-msg timestamp=on

==
получается virt manager юзает virt-view а оно бзает spice чтоы нам показывать дисплей виртуалкуи.
и это хуже чем -display sdl
дает задежкру и размтытая ккартинка
==
можнооднврременоп подключиться к вм через spice и sdl
==
чрез spice в гграф ржиме дункск  мышка летает круто. 
а вот через sdл мышка тормзит. поэтому тут spice вне конкуррекцнии
===
 а вот -dsiplay gtk
уже работает мышь охуенно. и спайс никкой не нужен!
==
конечночная хуййня что раоатет

qemu-system-x86_64 -name manj11 -m 2G   -boot d -hda ./manj.img  -drive file=manj.img,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm   -smp 1  -M pc-q35-2.11        -netdev tap,id=mynet0,ifname=tap1,script=no,downscript=no -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:02  -vga qxl -device virtio-serial-pci -spice port=5930,disable-ticketing=on -device virtserialport,chardev=spicechannel0,name=com.redhat.spice.0 -chardev spicevmc,id=spicechannel0,name=vdagent -display gtk --spice  disable-ticketing=on,image-compression=off,seamless-migration=on,gl=off,unix=on,addr=/tmp/spice.sock -device qxl-vga,id=video0,ram_size=67108864,vram_size=67108864,vram64_size_mb=0,vgamem_mb=16,max_outputs=1,bus=pcie.0,addr=0x1 

gtk + spice

==

пооходу -vga qxl это урощеннавея версия когда пишем 
-device qxl-vga,id=video0,ram_size=67108864,vram_size=67108864,vram64_size_mb=0,vgamem_mb=16,max_outputs=1,bus=pcie.0,addr=0x1 

тоесть второе это более подробное.
а оба сразу нельяз ошлет нахер

==
qxl vs qxl-vga = ?

=

$ qemu-system-x86_64 -name manj11 -m 2G   -boot d -hda ./manj.img  -drive file=manj.img,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm   -smp 1  -M pc-q35-2.11        -netdev tap,id=mynet0,ifname=tap1,script=no,downscript=no -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:02      -sandbox on,resourcecontrol=allow     -device virtio-mouse -device virtio-keyboard -device virtio-vga -display gtk,gl=on
vasya@thinkpad:~/VM/manj2$ 

граф режиме окей хотя и llvm
а текстовый хуйня


получается с qxl охуенная четкость в тесктомров режиме
2$ qemu-system-x86_64 -name manj11 -m 2G   -boot d -hda ./manj.img  -drive file=manj.img,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm   -smp 1  -M pc-q35-2.11        -netdev tap,id=mynet0,ifname=tap1,script=no,downscript=no -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:02   -device virtio-serial-pci    -sandbox on,resourcecontrol=allow        -display gtk,gl=on  -vga qxl 

нов графичекомм хуйня  нрпимер нельзя поменять разрешение

а с virtiio размыто в тестоммвом но классно  в графическом
vasya@thinkpad:~/VM/manj2$ qemu-system-x86_64 -name manj11 -m 2G   -boot d -hda ./manj.img  -drive file=manj.img,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm   -smp 1  -M pc-q35-2.11        -netdev tap,id=mynet0,ifname=tap1,script=no,downscript=no -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:02   -device virtio-serial-pci    -sandbox on,resourcecontrol=allow        -display gtk,gl=on  -vga virtio 

ввот так прям отлично в тектсом режиме
$ qemu-system-x86_64 -name manj11 -m 2G   -boot d -hda ./manj.img  -drive file=manj.img,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm   -smp 1  -M pc-q35-2.11        -netdev tap,id=mynet0,ifname=tap1,script=no,downscript=no -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:02   -device virtio-serial-pci    -sandbox on,resourcecontrol=allow        -display gtk,gl=on  -device qxl-vga,id=video0,vgamem_mb=16,xres=1800,yres=900
даже в grub ненжн преедвать разрешение. он сам выставит

==
чужаястрочка
qemu-system-x86_64 -enable-kvm -boot order=c -drive file=storage/sda,format=qcow2 -m 6G -smp cores=2 -vga none -device qxl-vga,vgamem_mb=128 -spice port=5900,disable-ticketing -device virtio-serial-pci -device virtserialport,chardev=spicechannel0,name=com.redhat.spice.0 -chardev spicevmc,id=spicechannel0,name=vdagent -netdev bridge,id=hn0 -device virtio-net-pci,netdev=hn0,id=nic1 -daemonize

===
аоискк кета по маске
pacman -Ssq <regex>

==

по деолту у amjaro нет драйвера X11 от карты qxl
есть только дравер какото там. 
поэтому кодга старутет x11 то юзает драйыер mendenso. чкототкте
нужно посвтитьдфрайфайр x11 и наптсать окнфинеогиг

pacman -S xf86-video-qxl

/usr/share/X11/xorg.conf.d/50-qxl.conf 

Section "Device"
Identifier "qxl"
Driver "qxl"
Option "ENABLE_SURFACES" "False"
EndSection

reboot

check /var/log/X11.log

нихера неопонятно ибо lspci риует что драйыер для qxl конечно есть сука

--
кк добавить spice

-device virtio-serial-pci,id=virtio-serial0,bus=pci.3,addr=0x0
-chardev spicevms,id=charchannel1,name=vdagent
-device virtserialport,bus=virtio-serial0.0,nr=2,chardev=charchannel1,id=channel1,name=com.redhat.spice.0

сранвим  с моей строчкой
-device virtserialport,chardev=spicechannel0,name=com.redhat.spice.0 -chardev spicevmc,id=spicechannel0,name=vdagent   
 --spice  disable-ticketing=on,image-compression=off,seamless-migration=on,gl=off,unix=on,addr=/tmp/spice.sock

===
как  добавить qwmeu aagent

запустить виртулки вот тстакийи флгаами
-chardev socket,path=/tmp/qga.sock,server=on,wait=off,id=qga0 \
 -device virtio-serial \
 -device virtserialport,chardev=qga0,name=org.qemu.guest_agent.0


на ВИМ ставим паувет 

# pacman -S qemu-user-agent

запускаеслубу
# systemctl daemon-reload
#systemclt emable  qemu-user-agent  --now
#systemclt status  qemu-user-agent  --now

все должно гореить дещеленым


но устанволенный агент qemu и драйыер qxl для X11 все равно недает днамичреки менять разрегение раб сстола!
только через spice конект! а это хрень!
==
сторка и с qemu агентом и spice

 qemu-system-x86_64 -name manj11 -m 2G   -boot d -hda ./manj.img  -drive file=manj.img,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm   -smp 1  -M pc-q35-2.11        -netdev tap,id=mynet0,ifname=tap1,script=no,downscript=no -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:02   -device virtio-serial-pci    -sandbox on,resourcecontrol=allow        -display gtk,gl=on  -device qxl-vga,id=video0,vgamem_mb=16,xres=1800,yres=900 -chardev socket,path=/tmp/qga.sock,server=on,wait=off,id=qga0  -device virtio-serial  -device virtserialport,chardev=qga0,name=org.qemu.guest_agent.0   -device virtserialport,chardev=spicechannel0,name=com.redhat.spice.0 -chardev spicevmc,id=spicechannel0,name=vdagent   --spice  disable-ticketing=on,image-compression=off,seamless-migration=on,gl=off,unix=on,addr=/tmp/spice.sock 

gl=off потому что иначе segmntaiotn fault

конект 
 remote-viewer spice+unix:///tmp/spice.sock

поеичем что дебиально. якобыы через spice клиент экран диначесичаски масштабирцетс. но это брехня.
если посмотеть через xrandr то разареение остатется прежним. !!! просто spice  делает zoom
тоесть все начинает раслыыватьсят!

==
олучается видеале вот так
в этой окманде задаем разленрешшнеие xres=1920,yres=990

$ qemu-system-x86_64 -name manj11 -m 2G   -boot d -hda ./manj.img  -drive file=manj.img,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm   -smp 1  -M pc-q35-2.11        -netdev tap,id=mynet0,ifname=tap1,script=no,downscript=no -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:02   -device virtio-serial-pci    -sandbox on,resourcecontrol=allow        -display gtk,gl=on  -device qxl-vga,id=video0,vgamem_mb=16,xres=1920,yres=990 -chardev socket,path=/tmp/qga.sock,server=on,wait=off,id=qga 

в груб ничего пропсиыать ненадо.
н и в принципе все. даже драйвер qxl можн не стаить.
ни qemu агента ни spice агента. нихрна это ненадо
===
основыне этапы:
разрешнеие экрана на grub
шрифт размер на загрузке
разрение экрана в текстовом режиме
spice ненужен
qemu agetnt ненеужен
3d openl ускорения нет.
прброс второй видеораты с бука в вм это я пока неумею
==

===
lxd
при поытыатке запцстить контйнер говорт ошел нахуй
manjaroo lxc newuidmap failed
или
Error: LXD doesn't have a uid/gid allocation.

# ls -1 /etc/sub*id
/etc/subgid
/etc/subuid


и вставить в них
vasyaa:1000000:1000000000

далее надо убедиться что /etc/lxc/ default.conf отсутсвтует

перзапускаем lxd
systemctl restart lxd

но в archlnux это еще не все только root может запусать конейнеры.
а чтбы не рут мог то 
тут читай 
https://wiki.archlinux.org/title/Linux_Containers  <===================== !!!

====
arch+полная шифровка попробвать
===
как войти в нстйроки lxqt панели
одна хуйня про опен бокс про desktopall = no
вторая про поднырривание панели под окна
третье что окна со всех столов покзаывалист - как исправить


$ sudo apt install sysfsutils
~$ systool -m i915 -av
Module = "i915"

  Attributes:
    coresize            = "3883008"
    initsize            = "0"
    initstate           = "live"
    refcnt              = "39"
    srcversion          = "88E5C59BD440FED46FD060D"
    taint               = ""
    uevent              = <store method only>

  Parameters:

  Sections:

$ modinfo i915

чо это за хцйння?
$ 
vasya@thinkpad:/var/log$ cat Xorg.0.log | grep LoadModule
[  1419.434] (II) LoadModule: "glx"
[  1419.453] (II) LoadModule: "modesetting"
[  1419.455] (II) LoadModule: "fbdev"
[  1419.456] (II) LoadModule: "vesa"
[  1419.463] (II) LoadModule: "fbdevhw"
[  1419.465] (II) LoadModule: "glamoregl"
[  1420.253] (II) LoadModule: "fb"
[  1420.589] (II) LoadModule: "libinput"
vasya@thinkpad:/var/log$ 


===
немножко попробвать что такое генту?
=======
  <<<<<<<<========
  <<<<<<<<========
разобраться с ебаной аварией
надо активироватьт чтобы по ssh можно было зайти с компа на комп
на такой случай!

firewall провермть что все порты закрыты на обоих нотубках!

