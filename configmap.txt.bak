configmap

конфигмап позволяет вставлять в секцию env в контейнере
вместо занчений имена переменнных из своего тела.
то есть. мы в configmap прописываем переменные
а потом их имена можем использовать в контейнерах в секции env 
вместо значений.


если downward api позволяет вместо значений использовать лишь гортску системных переменных куба то configmap позволяет придумать и юзать любые переменные но наши свои.

пример конфигмапа

---
apiVersion: v1
kind: Namespace
metadata:
  name: es-cl-01
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: confmap
  namespace: es-cl-01
data:
  clustername: es-cl-01
  cluster_initial_master_nodes: "es-master-0, es-master-1, es-master-2"


в конфигмапе 
name: confmap

мы записали две переменные

  clustername: es-cl-01
  cluster_initial_master_nodes: "es-master-0, es-master-1, es-master-2"


теперь мы можем обращаться к этому конфигмапу и его переменным
из других порятнок yaml

вот вырезка из стейтфуллсета из описание контейнера раздел env

 env:
          - name: cluster.name
            valueFrom:
              configMapKeyRef:
                name: confmap
                key: clustername

          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name

здесь мы говорим что 

cluster.name = clustername из конфигмапа confmap

поэтому куб при развороте контейнера в итоге присвоит перпеменную

cluster.name = es-cl-01

что дает конфиг мап. он дает то что мы можем где то наверху в шапке
yaml файла прописать configmap со всеми переменными которые где то там
разбросаны по всему телу yaml портянки. и будет очень легкр менять эти переменные.


вторая переменная ксати это не конфиг мап а downward api (см. downwardapi.txt) 

и она присваивает значение из другой переменной , системной переменной куба

node.name = metadata.name

где metadata.name = имя пода текущего

==


