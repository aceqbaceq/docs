| terminal
| tty 
| pty

у меня спросили что что такое pty


начнем ииздалека.

у нас есть процесс. типа баша. который мы 
хотим связать  с терминалом. что значит терминал
что значит связать с терминалом.

терминал это исходно железка с экраном
и клавой. или с принтером, перфопринетером и клавой.

ну грубом уровне связть процесс процесс с терминалом
это значит что все то чтопроцесс сунет на стдаут
отриутся на экране терминала. а что человек нажмет
на клаве трминала то попадет в процесс.

в линуксе есть два типа терминалов. 
первый это эмулторя терминала вшитый в ядро.
визуально в него можно попасть нажав Ctrl+Alt-F2
второй вид терминала это юзер программа. так назвы
ваемый эмулятор терминала но в он не вшит в ядро
а это юзер процесс.

итак терминал это железка но в любом случае
в линуксе это все програмая эмуляция только одна
в ядре а вторая в юзер процессе. .

так вот если я хочу связать баш процесс с эмулятором
терминала который в ядре то для этого баш
должен открыть 

   /dev/tty2

файл.
тггда получим


баш --- /dev/tty2 --- tty driver --- терминал
                                     эмулятор


итак  tty файл  это сопосб свзять юзер процесс
с терминалом который вшит в ядро.


итак tty файл это способ связать юзер процесс
с терминалом(эмулятором который вшит в ядро)

если мы связали терминал с процессом.
то все то что процесс извергнет из себя то  оно будет
отрисовано на дисплее терминала.
а все то что будет нажато на клаве терминала
оно попадет внутр процесса. вот что значит связь
процесса и терминала. 

но помимо  терминала который вшит в ядро 
также эмулятор термианала может быть выполнен 
в форме юзер процесса. такими прмиерами явяется
   gnome-terminal 
   xterm

что по своей сути должен уметь делать эмулятор
терминала. он должен уметь делать то что умел
делать физический терминал. а именнно он должен 
уметь "рисовать" байты в виде глифов на экране.
должен понимать ESC секвенсы. тоесть в реальном
терминале если в него прилетают ескейп секвенсы
то он физ терминал начинает двигать курсор например.
а что значит уметь рисовать. если  у нас граф
режим то наш эмултяор темрианала должен уметь
разговаривать с X сервером чтобы если в эмулятор
терминала приелет ккйото байт чтобы он моег его
через граф подсистему отрисовать как глиф. 

юзеро процесс --..... ---- эмултор терм ---- X org --
-- экран

но чем будет отличаться просто граф рисовалка
глифов от эмулятора терминала? эмултор должен понимать
служебные экейп секвенсы. которые в итоге длжны 
приводитть к шеевелению курсора на экране например.


итак эмулятор термиала если в него приелет байт 
он должен его уметь отрисовать на экране до корторого
он дллжен как то добраться в линуксе. напримрер
xterm это делает через клент к X org системе.
также эмулятор термиала дожлен понимать ESC секвенсы.

в случае линкс текст консли эмулятор терминала
это не юзер прогрмма а кусок кода ядра.

в любому случае (если терминал это кусок ядра
или это юзер процесс) между эмулятором тмеримнлаа
и юзер процссом сидит tty driver
в случае  яренгого терминлаа он сидит за /dev/ttyN
в случае юзерского термнала он сидит за /dev/pts/N

bash -- /dev/tty2--- tty driver --- kernel terminal


bash -- /dev/pts/10--- tty driver --- /dev/ptmx -- xterm --- XORG - экран


если у меня есть програма эмултор терминала
то чтобы ее связтаьь с другой юзер программой 
то эмултор терминала открывает у ядра /dev/ptmx
в ответ на это ядро создает /dev/pts/10
файл и сажает за ним tty driver


эмулятор                                  bash
терминала
  /dev/ptmx --- tty  driver --- /dev/pts/10


тоесть баш и эмулятор тмеримнала они связнаны
дру с другом через ттай дравер. котоырй связан 
с ними через файлы /dev/ptmx  и /dev/pts/10

зачем нам нужен ттай дравер зачем такие сложности.
почему бы из не свзат пайпом. потом что он 
одноравленный. 
почему бы их не свзяать локальным сокетом. 
если это будет лоукальны сокет то между ними
в ядре не будет ттай дарйвера


эмулятор                bash
терминала
          --- сокет --- 



итак зачем между башем и эмулятором термианла
вставляют ттай драйвер. положим что на той стороне
не эмуялто терминала а даже натстоящий телеприентер


телпринтер                              баш
     --------------ттай драйвер --------

ну ттай дравер с баша снимает часть работы которую
нужно делать для связи с удаленным телепринтером
(или терминалом). напрмимер ттай драйвер в нем
укзывается скоарсть подклюения к телепринтеру
в бодах. склько стартовых битов сколко стоповых
какая четность. 

также баш покдручивая ттай дарйвер может его 
заставить делать часть работы которую иначе нужно 
было бы делать башу. анпрмиер баш включает на
ттй драйвреер режим echo
это прикод к тому что если с телериентера влетел
к нам байт то ттай драйвер аавтоматом обратно 
шлет этот же байт.  а башу уже этим заниматься ненадо.
баш просто получает этот байт от ттай драйвера
а в ответ уже гнедоожен ничего слать. это экономия
потому что получив байт татй дарйвер который в
ядре он из ядра и шлет обратно байт. а если бы
он это недалал то башу нужно было бы слать байт
через сисколл в ядро. а оттуда оно слаоло бы 
на телеприпнтер. также баш может на тта йдрверер
включить режим канон. что дает то что башу
ненужно в себе иметь софт который знмтается
редактивранием буфера. редктивонием буфера зманиется
тода ттай драйвер. а баш получает уже готорвую
строку в конечном виде. кнкррено баш этим
не пользуется я просто для примера.

тоеть ттай дарйвер он на себя берет часть рабоы
в том числе часть грязной рабоыты которую надо 
кому то делать рпи связи с удаленным теелприентром.

для баша по факту терминаом является ттай драйвер.
а он уже связывается с удлаенным терминалом. 
тоесть свхема вот такая


баш - ттай драйвер  -- удаленный термимнал
      (как бы тоже
      терминал)


то ест по факту для баша терминалом явялется
сам ттай дарйвер. а он уже задним числом
обащется с друним терминалом.



баш в своей работе может сделаь запрос 
проверить какой тип файла обслуживают 
дескрипторы  /fd0 fd/1 . тоесть на какой тип
файлов они смотрят . тоесть 

  fd/0 ---> /dev/tty2
  fd/2 ---> /dev/tty3

и баш может запрость чрез ссикол  котой тип
файла. ялвяется ли он "терминалом" тоесть сидит
ли за этим файлм ттай драйвер. 

если процесс открыл файл за кортоырм сидит 
ттай дарйвер то можно делать спец сисколлы
к ядру используя дескриптор. тоесть 
у нас ест десриптор  fd/10
мы пршивем у ядра - за ним сидитттай драйвер? 
ядро говрит да. тогда мы можем юазть 10 
как аргумент в сисколлах которые умеют 
подкручиться ттай драйвер. поэтому если 
создать процесс баш но его 0 1 2 не будут смотерть
на терминал тоон это быстор выянснить и начнет
ругаться.

если мы открыли файл котоырй смотерит на ттай арйвер
то мы можем нетлоко слать байты в этот файл
но и делать сисколыы с дескрипором от этого
файла. например можем запросить структ termios
от этоо тай дарйврера. где будут написаны 
разные настройки текущего ттай дарйвера.

физ терминал мог менять свое разереншение экрана.
об этом он както увеолял ттай драйвер. а тот 
в свою очередь увеломляет об этом юзер процесс
через сигнал SIGWINCH

вошем мудреная тема.

так вот про впрос что такое  PTY

это такая папка /dev/PTY/N

если мы юзер процессом откроаем файл /dev/ptY/10
то мы упремя в ттай драйвер. за которым 
сидит юзерская прогармма эмултор терминала. вот
зачем этот файл нужен что он дает.

если у нас есть прогама типа баша ктторая 
придумана чтобы взмиедостслвтавть с тмриналом
то при зауске баша его надо присоедниить к термуинлу
а точнее к эмулятору терминала. мы запускмм
эмулторя терминала. он октрывает .dev/ptmx
ядро при этом создает /dev/pts/10 файл.
и тогда можно запустит баш и его 0 1 2 
привзять к /dev/pts/10


xterm ---- /dev/ptmx --- tty drver --- /dev/pts/10 --bash

баш не былприумал быть просто заупщенным. он 
ожлен иметь связь с темриналом. он постоянно 
пркдручитвает парметры ттай драйвера. 

вобшем тмема мудреная.

тем не мене за PTY/10 файлом сдит ттайдравер
а за ним сидит  эмулятор терминала. который
ктаи может выоить чтото на экране а может 
и нет.  ттай драйвер нужен в этой связке для того
что баш приучен с самого начала иметь связь с
темриналом через прослойку ттай драйвера. 
для баша ттай дрвер это и есть терминал. 

вобщем ужас а не тема.



