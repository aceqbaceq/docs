| seccomp

–ß—Ç–æ–±—ã –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –≤—ã–∑–æ–≤—ã (`syscalls`) –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞ (`/usr/bin/file1`) —á–µ—Ä–µ–∑ `seccomp`, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É—Ç–∏–ª–∏—Ç—É **`seccomp-bpf`**, –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã `prctl()`, `seccomp()` –∏–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ç–∏–ø–∞ `systemd` –∏ `bubblewrap`.  

---

### üîπ **–°–ø–æ—Å–æ–±—ã –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è `syscalls` –¥–ª—è `/usr/bin/file1`**

#### **1Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `seccomp-tools` (–¥–ª—è —Ç–µ—Å—Ç–æ–≤)**
–ú–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —Å `seccomp`-—Ñ–∏–ª—å—Ç—Ä–æ–º —á–µ—Ä–µ–∑ `bwrap` (`bubblewrap`):  
```bash
bwrap --seccomp 1000,/path/to/seccomp-filter.json /usr/bin/file1
```
–ì–¥–µ `seccomp-filter.json` ‚Äî JSON-—Ñ–∞–π–ª —Å –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–º–∏ syscalls.  

---

#### **2Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `systemd` (–¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤)**
–ï—Å–ª–∏ `/usr/bin/file1` ‚Äî —ç—Ç–æ –¥–µ–º–æ–Ω –∏–ª–∏ —Å–µ—Ä–≤–∏—Å, –º–æ–∂–Ω–æ –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –µ–º—É `syscalls` —á–µ—Ä–µ–∑ `systemd`:
```bash
echo -e "[Service]\nExecStart=/usr/bin/file1\nSystemCallFilter=~execve fork vfork" | sudo tee /etc/systemd/system/myfile1.service
sudo systemctl daemon-reload
sudo systemctl start myfile1
```
üîπ `SystemCallFilter=~execve fork vfork` ‚Üí –∑–∞–ø—Ä–µ—â–∞–µ—Ç –∑–∞–ø—É—Å–∫ –Ω–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.  

---

#### **3Ô∏è‚É£ –ù–∞–ø–∏—Å–∞—Ç—å C-–ø—Ä–æ–≥—Ä–∞–º–º—É (–≥–∏–±–∫–∏–π –≤–∞—Ä–∏–∞–Ω—Ç)**
–ï—Å–ª–∏ —Ç—ã —Å–∞–º –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—à—å `file1`, –º–æ–∂–Ω–æ –≤–Ω–µ–¥—Ä–∏—Ç—å `seccomp` –≤ –µ–≥–æ –∫–æ–¥:
```c
#define _GNU_SOURCE
#include <seccomp.h>
#include <stdio.h>
#include <stdlib.h>

int main() {
    scmp_filter_ctx ctx;

    // –°–æ–∑–¥–∞—ë–º seccomp-–∫–æ–Ω—Ç–µ–∫—Å—Ç
    ctx = seccomp_init(SCMP_ACT_ALLOW);
    if (!ctx) {
        perror("seccomp_init");
        return 1;
    }

    // –ë–ª–æ–∫–∏—Ä—É–µ–º fork –∏ execve
    seccomp_rule_add(ctx, SCMP_ACT_KILL, SCMP_SYS(fork), 0);
    seccomp_rule_add(ctx, SCMP_ACT_KILL, SCMP_SYS(execve), 0);

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä
    if (seccomp_load(ctx) < 0) {
        perror("seccomp_load");
        return 1;
    }

    printf("Seccomp –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –ü–æ–ø—Ä–æ–±—É–π –≤—ã–∑–≤–∞—Ç—å execve()...\n");
    system("/bin/sh");  // –î–æ–ª–∂–Ω–æ —Å–ª–æ–º–∞—Ç—å—Å—è

    return 0;
}
```
–ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º:  
```bash
gcc seccomp_example.c -o file1 -lseccomp
./file1
```
–¢–µ–ø–µ—Ä—å —ç—Ç–æ—Ç –±–∏–Ω–∞—Ä–Ω–∏–∫ **–Ω–µ —Å–º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `execve` –∏ `fork`**.

---

#### **4Ô∏è‚É£ –ü–∞—Ç—á–∏—Ç—å –±–∏–Ω–∞—Ä–Ω–∏–∫ —á–µ—Ä–µ–∑ `LD_PRELOAD` (–≥—Ä—É–±—ã–π –º–µ—Ç–æ–¥)**
–ï—Å–ª–∏ –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å `file1`, –º–æ–∂–Ω–æ –ø–æ–¥–º–µ–Ω–∏—Ç—å `syscalls` —á–µ—Ä–µ–∑ `LD_PRELOAD`:
```c
#define _GNU_SOURCE
#include <dlfcn.h>
#include <stdio.h>
#include <unistd.h>

int execve(const char *filename, char *const argv[], char *const envp[]) {
    printf("execve –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!\n");
    return -1;
}
```
–ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º –≤ `.so`:
```bash
gcc -shared -o block_execve.so block_execve.c -fPIC -ldl
LD_PRELOAD=./block_execve.so /usr/bin/file1
```
–¢–µ–ø–µ—Ä—å `execve()` –¥–ª—è `file1` —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç.

---

### **–í—ã–≤–æ–¥**  
- –ï—Å–ª–∏ **—Å–µ—Ä–≤–∏—Å** ‚Üí `systemd` (`SystemCallFilter`).  
- –ï—Å–ª–∏ **—Å–∞–º –ø–∏—à–µ—à—å –∫–æ–¥** ‚Üí `seccomp` (`seccomp_rule_add`).  
- –ï—Å–ª–∏ **–Ω—É–∂–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω–æ** ‚Üí `bwrap` –∏–ª–∏ `LD_PRELOAD`.  

–ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç —Ç–µ–±–µ –ø–æ–¥—Ö–æ–¥–∏—Ç? üöÄ



--


`seccomp` (Secure Computing Mode) ‚Äî —ç—Ç–æ –º–µ—Ö–∞–Ω–∏–∑–º –≤ Linux, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç **–æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∫ —Å–∏—Å—Ç–µ–º–Ω—ã–º –≤—ã–∑–æ–≤–∞–º (syscalls)**.  

### üîπ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç?  
1. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ **"–ø–µ—Å–æ—á–Ω–∏—Ü–µ"**, –≥–¥–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã **—Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ syscalls**.  
2. –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –ø—ã—Ç–∞–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å **–∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–π syscall**, —è–¥—Ä–æ **—É–±–∏–≤–∞–µ—Ç –µ–≥–æ** –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É.  

### üîπ –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∂–∏–º—ã:  
- **`seccomp mode 1` (strict)** ‚Äî —Ä–∞–∑—Ä–µ—à–∞–µ—Ç **—Ç–æ–ª—å–∫–æ** `read`, `write`, `exit`, `sigreturn`.  
- **`seccomp mode 2` (filter)** ‚Äî –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å **–≥–∏–±–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞** —á–µ—Ä–µ–∑ BPF-—Ñ–∏–ª—å—Ç—Ä.  

### üîπ –ì–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è?  
- **Docker, Kubernetes** ‚Äî –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤.  
- **Chrome, Firefox** ‚Äî –∑–∞—â–∏—Ç–∞ –æ—Ç —ç–∫—Å–ø–ª–æ–π—Ç–æ–≤.  
- **systemd** ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤.  

### üîπ –ü—Ä–∏–º–µ—Ä: –∑–∞–ø—Ä–µ—Ç–∏—Ç—å `execve` (–∑–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤)  
```c
#include <linux/seccomp.h>
#include <sys/prctl.h>

prctl(PR_SET_SECCOMP, SECCOMP_MODE_STRICT);
```
–¢–µ–ø–µ—Ä—å –ø—Ä–æ—Ü–µ—Å—Å **–Ω–µ —Å–º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã** (`execve()` –≤–µ—Ä–Ω—ë—Ç –æ—à–∏–±–∫—É).

---
| docker

–¥–∞–ª–µ–µ —è –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å

—Ö–æ—Ä–æ—à–æ. —Ç–æ–≥–¥–∞ –≤–æ–ø—Ä–æ—Å - –≤–æ—Ç —Å–º–æ—Ç—Ä–∏ –ø–æ–ª—É–∞–µ—Ç—Å—è —á—Ç–æ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç–∞–∫–∏–µ –∫–∞–∫ –¥–æ–æ–∫–µ—Ä –Ω–µ –Ω—É–∂–¥–∞—é—Ç—Å—è –≤ —É—Å—Ç–∞–Ω–æ–ª–≤–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–∞—Ö iptables\ngtables. —Å –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –ø–æ —Ñ–∞–∫—Ç—É –≤ —è–¥—Ä–µ –≤—Å–µ–≥–¥–∞ –ø—Ä–∏—Å—É—Å—Ç–≤—É—é—Ç –º–æ–¥—É–ª–∏ –∏  –ª–µ–≥–∞—Å–∏ –∏–ø—Ç–µ–π–±–ª—Å –∏ –º–æ–¥—É–ª–∏ —Ç—Ñ—Ç–µ–π–±–ª—Å.  —Ç–æ–≥–¥–∞ –≤–æ–Ω–∏–∫–∞–µ—Ç –≤–æ–ø—Ä–æ—Å - –∞ –∫–∞–∫ –∑–∞–ø—Ä–µ—Ç—Ç–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∞–º —Å —Ä—É—Ç –ø—Ä–∞–≤–∞–º–∏ –¥–µ–ª–∞—Ç—å –∏–∑–º–µ–µ–Ω–∏—è –≤ —ç—Ç–∏—Ö –º–æ–¥—É–ª—è—Ö. 
–Ω–∞–ø—Ä–º–∏–µ—Ä - —è –∑–∞–¥–∞–ª –ø—Ä–∞–≤–ª–∞ –≤ –ª–µ–≥–∞—Å–∏ –∏–ø—Ç–µ–π–±–ª—Å. –∞ —Å–∫–∞–∂–µ–º –¥–æ–∫–µ—Ä –≤–∑—è–ª –∑–∞–ª–µ–∑ –∏ –∑–∞–¥–∞–ª –ø—Ä–∞–≤–∏–ª–∞ –≤ –Ω—Ñ—Ç–µ–π–±–ª—Å –º–µ–Ω—è –Ω–µ —Å–ø—Ä–æ—Å–∏–≤. 

–º–Ω–µ —á—Ç–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ª–∞–∑–∏—Ç—å –≤ –æ–±–∞ —ç—Ç–∏ –±–µ–∫–µ–Ω–¥–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–µ –ø–æ–ª–∞–∑–∏–ª –ª–∏ –∫—Ç–æ —Ç–∞–º.


–æ—Ç–≤–µ—Ç 

