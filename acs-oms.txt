| ACS
| OMS

install rocky linux 8.6

LVM+XFS !!




супеважно везде в пеерменных TIMEZONE 

   {MYSQL_TIME_ZONE}
   {ACS_TIME_ZONE}

ставить не GMT+3 а Europe/Moscow!





nmcli conn mod enp6s18  connection.autoconnect 1

sudo dnf install -y epel-release


ssh-copy-id -i ~/.ssh/id_5519.pub  vasya@100.100.1.26



		УСТАНОВКА ACS BASE


на стадии установки мускула при запуске скрипта  install_server.sh
нужно поменяьт порт на 16379 вместо предлагаемого 6379
и нужно указать где лежит бинарник
а именно 

   /usr/local/bin/redis-server


(он там реально лежит)
если не указать где лежит бинарник то усатновщик пошлет нахер





# ./install_server.sh
Welcome to the redis service installer
This script will help you easily set up a running redis server

Please select the redis port for this instance: [6379] 16379
Please select the redis config file name [/etc/redis/16379.conf] 
Selected default - /etc/redis/16379.conf
Please select the redis log file name [/var/log/redis_16379.log] 
Selected default - /var/log/redis_16379.log
Please select the data directory for this instance [/var/lib/redis/16379] 
Selected default - /var/lib/redis/16379
Please select the redis executable path [] /usr/local/bin/redis-server
Selected config:
Port           : 16379
Config file    : /etc/redis/16379.conf
Log file       : /var/log/redis_16379.log
Data dir       : /var/lib/redis/16379
Executable     : /usr/local/bin/redis-server
Cli Executable : /usr/local/bin/redis-cli
Is this ok? Then press ENTER to go on or Ctrl-C to abort.
Copied /tmp/16379.conf => /etc/init.d/redis_16379
Installing service...
Successfully added to chkconfig!
Successfully added to runlevels 345!
Starting Redis server...
Installation successful!



далее

/usr/local/bin/redis-cli -h localhost  -p 16379 -a пасс  set CURRENT_PRIMARY_INSTANCE_NUMBER "ACS#0"

как я понял эта шткуа ACS#0 именно константа так и вводится






после установки ACS BASE у меня будет

[root@acs-master base]# kubectl get services -n acs
NAME                               TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)                                        AGE
minio-svc                          NodePort    10.96.71.141   <none>        9000:30090/TCP                                 9m55s
nacos-svc                          NodePort    10.96.79.104   <none>        8848:30048/TCP,9848:28626/TCP,9849:17551/TCP   9m55s
rocketmq-broker-a-s-svc-headless   ClusterIP   None           <none>        <none>                                         9m56s
rocketmq-broker-a-svc-headless     ClusterIP   None           <none>        <none>                                         9m56s
rocketmq-broker-b-s-svc-headless   ClusterIP   None           <none>        <none>                                         9m56s
rocketmq-broker-b-svc-headless     ClusterIP   None           <none>        <none>                                         9m56s
rocketmq-console-svc               NodePort    10.96.108.11   <none>        8080:30916/TCP                                 9m55s
rocketmq-namesrv-svc               NodePort    10.96.110.85   <none>        20901:30915/TCP                                9m56s


по факту у меня на уровне открытия в веб морде 
сработало две штуки

http://master_local_ip:30048//nacos/index.html
http://master_local_ip:30916/

остальыне сервисы через веб не открыаваются







	ACS APPP DEPLOY


    For the first installation, you only need to import nacos-config-deploy-v{version}.zip andnacos-config-ext.zip file is enough


  
я не нашел  

nacos-config-deploy-v{version}.zip

а потом нашел. внутри zip который лежал внутри zip

супермегаважный момент. это в каком фмрате указывать timezone



супеважно везде в пеерменных TIMEZONE 

   {MYSQL_TIME_ZONE}
   {ACS_TIME_ZONE}

ставить не GMT+3 а Europe/Moscow!


тоесть ни в коем случае лучше не пихать таймзону в эти перенные
в виде GMT+3 а только в ввиде Europe/Moscow


как это можно словить. 
вот поставил я acs application .
иду в его веб морду

https://100.100.1.25:30080/#

пробую ввести логин и пароль(какой логин и пароль я скажу ниже. это 
отдельняа эпопея) а он пишет 

warning 
timeout 5000 exceeded


прикол в том что java прога  лезет через odbc драйвер на мускул 
и при входе указывает таймазону. и если она в формате gmt+3 то  идет она на хуй.
как это можно в логах увидеть

идем в эту папку

/opt/k8s/app/logs/


тут лежат логи подов.

нас интерсуют логи вот этих подов


acs-logs-access-service-0-*

и/или

acs-logs-user-service-0-*

и там можно вот такое увидеть


Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.

Caused by: java.time.DateTimeException: Invalid ID for region-based ZoneId, invalid format: GMT 3


что делать - если все же зону ввел  в перменные

   {MYSQL_TIME_ZONE}
   {ACS_TIME_ZONE}


неверно.
я ненашел другого способа как удаляем полнгостью деплой  ACS APPLICATION

   # helm uninstall acs-service -n acs


но это еше неконец. при этом у нас неудалются а остаются  PVC и PV от этой инсталляиции
вначале нужно удалить PVC а потом и PV 


 # kubectl delete pvc -n acs $(kubectl get pvc  -n acs | grep log-nfs-storage | awk '{print $1}')
 # kubectl delete pv -n acs $(kubectl get pv  -n acs | grep log-nfs-storage | awk '{print $1}')


и потом поменяв в конфигах установки  на 

   {MYSQL_TIME_ZONE} = Europe/Moscow
   {ACS_TIME_ZONE}   = Europe/Moscow


деплоим заново

helm install --create-namespace -n acs --values $ACS/public.yaml --values $ACS/ACS-{version}-full/helm/{version}.yaml acs-service $ACS/ACS-{version}-full/helm/acs-service

и должно заработать.




Теперь на счет логина и пароля в веб морду ACS
логины хранятся в базе 

  acs-user

в таблице

tb_user

и их там по дефолту два

 superadmin 
 systemadmin


прблема в том что в доках нет  пароля от них 
который бы сработал. 
как решить проблему.
идем в веб морду и вводим любой пароль.
потом идем в 



# head /opt/k8s/app/logs/acs-logs-user-service-0-pvc-efcf1f87-86dc-4b89-9e7f-f188e41d3297/sql.log 

2025-09-15 20:34:25.500 [http-nio-1001-exec-5] DEBUG com.acs.user.service.mapper.UserMapper.selectList - ==>  Preparing: SELECT id,user_name,user_nick,user_password,user_mobile,current_token,user_address,user_email,authentication_type,modify_password_flag,password_expired,status,user_group_ids,company_ids,creator,created_time,modifier,update_time,del_status FROM tb_user WHERE (user_name = ? AND user_password = ? AND del_status = ?)

2025-09-15 20:34:25.795 [http-nio-1001-exec-5] DEBUG com.acs.user.service.mapper.UserMapper.selectList - ==> Parameters: superadmin(String), cc68310a89df5b46ed2b01f3e81bc3fa(String), 1(Integer)



и здесь мы видим такое

Parameters: superadmin(String), cc68310a89df5b46ed2b01f3e81bc3fa(String), 1(Integer)


указан логин и хэш по непоняному алгоритму нашего пароля. 
и этот хэш сранивается с тем что прописан  в таблице tb_user
соотсвтвтенно мы просто всталвляем в эту таблицу для этого юзера этот хэш 


UPDATE tb_user
SET user_password = 'cc68310a89df5b46ed2b01f3e81bc3fa'
WHERE user_name = 'superadmin';

все! мы можем успешно войти в морду!

есть еще прикол. если вести пароль 3 раза невено то вход для этого логина 
блочится на 30 минут.
запись об этом хранится в редисе.
чтобы этот блок сбсроить заходим в редис

# redis-cli -p 16379

атуентифицифруктся 
127.0.0.1:16379> auth ПАРОЛЬ
OK

смотрим ключи
127.0.0.1:16379> KEYS *
1) "USER:USER_LOCK:NUM:systemadmin"    <==**==
2) "CURRENT_PRIMARY_INSTANCE_NUMBER"
3) "USER:USER_LOCK:NUM:superadmin"     <==**==

вот видно что оба юзера заблочены на полчаса
удаляем записи о них


>DEL USER:USER_LOCK:NUM:systemadmin
>DEL USER:USER_LOCK:NUM:superadmin

все! можно пробовать заходить!







127.0.0.1:16379> 









              УСТАНОВКА OMC BASE



на стадии установки мускула при запуске скрипта  install_server.sh
нужно поменяьт порт на 26379 вместо предлагаемого 6379
остальное как при установке ACS BASE

в папке с дистрибутивом есть два файла

$ ls *tar -1
public_images.tar
u-omc_images_1.35.70.tar


это имаджи докера.
а в чем разница?
а разница в том что в одном файле лежат дистрибутивы для одного регистри
который 

          registry.public.com:9999


так называмый паблик регистри


а во втором файле лежат имаджи для так назыаемого приватного регистри

           registry.u-omc.com:10002


как разворачивать этот регстри смотри в файле docker-registry2.txt
упрошенно говоря нужно на отдеьной машине поставить докер и поднять регистри

  # docker run -d -p 10002:5000 --restart=always --name registry3 registry:2


потом надо на локальном компе засосать имаджи в свой локальный докер

[noroot@manjaro UN-RAR]$ sudo docker load -i  u-omc_images_1.35.70.tar 
0c42fb82b48f: Loading layer [==================================================>]  3.072kB/3.072kB
53fc35dcc952: Loading layer [==================================================>]  133.8MB/133.8MB
Loaded image: registry.u-omc.com:10002/nm-service:1.35.70
47925820b1e1: Loading layer [==================================================>]  3.072kB/3.072kB
b62d36e3a466: Loading layer [==================================================>]  134.4MB/134.4MB
Loaded image: registry.u-omc.com:10002/usmc-service:1.35.70
c857b28e735c: Loading layer [==================================================>]  9.111MB/9.111MB
6c31e1147670: Loading layer [==================================================>]  3.072kB/3.072kB
053a0f73aead: Loading layer [==================================================>]  307.9MB/307.9MB
c2a6c271d956: Loading layer [==================================================>]  3.072kB/3.072kB
fdf899c4813f: Loading layer [==================================================>]   2.56kB/2.56kB
13d695606656: Loading layer [==================================================>]  3.072kB/3.072kB
606fbdf301a4: Loading layer [==================================================>]  2.048kB/2.048kB
c1412d2819ff: Loading layer [==================================================>]  4.608kB/4.608kB
98ea0a9b6f27: Loading layer [==================================================>]  119.5MB/119.5MB
9ef4193e84fe: Loading layer [==================================================>]  329.6MB/329.6MB
af4475599a30: Loading layer [==================================================>]  15.87kB/15.87kB
0dfbf87ad67b: Loading layer [==================================================>]  17.41kB/17.41kB
9ea76694324b: Loading layer [==================================================>]   16.9kB/16.9kB
fa58d01f8b81: Loading layer [==================================================>]  4.096kB/4.096kB
ab5e99eed5e0: Loading layer [==================================================>]    727kB/727kB
a3b942cf1f31: Loading layer [==================================================>]   74.8MB/74.8MB
a6c138206bb1: Loading layer [==================================================>]  4.376MB/4.376MB
e27e1946136f: Loading layer [==================================================>]  78.98MB/78.98MB
e24d2acec1aa: Loading layer [==================================================>]  6.144kB/6.144kB
79ea0dca2e35: Loading layer [==================================================>]  5.632kB/5.632kB
5f70bf18a086: Loading layer [==================================================>]  1.024kB/1.024kB
cd95a32dc253: Loading layer [==================================================>]  9.216kB/9.216kB
9d2506986fee: Loading layer [==================================================>]  286.1MB/286.1MB
Loaded image: registry.u-omc.com:10002/ems-service:1.35.60
fd6f5f957484: Loading layer [==================================================>]  3.072kB/3.072kB
3d0e90a501db: Loading layer [==================================================>]  148.4MB/148.4MB
Loaded image: registry.u-omc.com:10002/sm-service:1.35.70
8023b4559daa: Loading layer [==================================================>]  3.072kB/3.072kB
b596aaa5c274: Loading layer [==================================================>]    133MB/133MB
Loaded image: registry.u-omc.com:10002/tr069-service:1.35.70
553e9c159b76: Loading layer [==================================================>]  158.4MB/158.4MB
9c9cd62a1346: Loading layer [==================================================>]  4.861MB/4.861MB
c0c582f825c3: Loading layer [==================================================>]  58.31MB/58.31MB
Loaded image: registry.u-omc.com:10002/openresty:1.15.8.2-1.20.00
8043a48ee696: Loading layer [==================================================>]  3.072kB/3.072kB
9517b237bff3: Loading layer [==================================================>]  129.3MB/129.3MB
Loaded image: registry.u-omc.com:10002/alarm-service:1.35.70
91a49b481f09: Loading layer [==================================================>]  3.072kB/3.072kB
93328a0c07a9: Loading layer [==================================================>]  154.7MB/154.7MB
Loaded image: registry.u-omc.com:10002/cfg-service:1.35.70
69396fdd05bd: Loading layer [==================================================>]  3.072kB/3.072kB
69c87d49b822: Loading layer [==================================================>]  98.52MB/98.52MB
Loaded image: registry.u-omc.com:10002/httpfs-service:1.35.70
06f0d89e3d8f: Loading layer [==================================================>]  3.072kB/3.072kB
6118073d712e: Loading layer [==================================================>]  135.7MB/135.7MB
Loaded image: registry.u-omc.com:10002/pm-service:1.35.70

а потом их нужно засунуть в тот удаленный регистри. предвариетельно в hosts
прописав 

               1.2.3.4   registry.u-omc.com

где 1.2.3.4 ип того компа где мы ращвернули наш регистри



ВАЖНО! если хост в мускул стучится 100 раз с неверным праолем то мускул 
весь хост блокирует наехер! и его нужно разблокироватьс 

   mysqladmin -u root -p flush-hosts



еще момент.
в файле 

  /root/U-OMC-deploy/U_OMC/U-OMC-1.35.70-full/helm/ public-deploy-v1.35.70.yaml

который мы используем при деплое OMC application 
есть вот такой кусок


  mysql:
    mysqlHost: "{MYSQL_HOST}" # Please replace {MYSQL_HOST}
    mysqlPort: "{MYSQL_PORT}" # Please replace {MYSQL_PORT}
    mysqlPara: "allowPublicKeyRetrieval=true&serverTimezone={U_OMC_TIME_ZONE}" # Please replace {U_OMC_TIME_ZONE}
    mysqlUser: "{MYSQL_USER}" # Please replace {MYSQL_USER}
    mysqlPassword: "{MYSQL_PWD}" # Please replace {MYSQL_PWD}
  ems:



и в нем нифига непонятно о каком юзере мускула идет речь?
как я понимаю сюда надо вставлять логин и пароль так назыавемого 

       {MYSQL_U_OMC_USER} {MYSQL_U_OMC_PWD}


того юзера мускула которого мы заводим вот на этом шаге


# Login to the database using {MYSQL_ROOT_PWD}

mysql -p

# Add user and password, please replace {MYSQL_U_OMC_USER}, {MYSQL_U_OMC_PWD}

mysql> create user '{MYSQL_U_OMC_USER}'@'%' identified by '{MYSQL_U_OMC_PWD}';

# Assign permissions to {MYSQL_U_OMC_USER} users

mysql> GRANT Alter, Create, Create Temporary Tables, Create View, Delete, Drop, Execute, Index, Insert, Process, Select, Show Databases, Update, Alter Routine, Create Routine, Lock Tables, SET_USER_ID,SYSTEM_USER, Trigger ON *.* TO `{MYSQL_U_OMC_USER}`@`%`;

mysql> alter user '{MYSQL_U_OMC_USER}'@'%' identified with mysql_native_password BY '{MYSQL_U_OMC_PWD}';

mysql> flush privileges;



этот мускул юзер будет исползоваться подами  OMC и EMS  для доступа в мускул.


в этом же *.yaml файле есть непонятный кусок



    bizMode: {BIZ_MODE} # Please replace {BIZ_MODE}
    bizCkaes: {BIZ_CKAES} # Please replace {BIZ_CKAES}
    framedRoute: {FRAMED_ROUTE} # Please replace {FRAMED_ROUTE} dafault 0
    bizSnmpVersion: {BIZ_SNMP_VERSION} # Please replace {BIZ_SNMP_VERSION} default 1




тоесть что сюда совать неясно.
согласно ответу консульатантов сюда надо совать


  ems:
    bizMode: 1 # Please replace {BIZ_MODE}
    bizCkaes: 0 # Please replace {BIZ_CKAES}



в итоге у меня вот так

    bizMode: 1 # Please replace {BIZ_MODE}
    bizCkaes: 0 # Please replace {BIZ_CKAES}
    framedRoute: 0 # Please replace {FRAMED_ROUTE} dafault 0
    bizSnmpVersion: 1 # Please replace {BIZ_SNMP_VERSION} default 1

    






