| c 
| increment

есть такие стремные вещи в си как инкремент

тоесть 
пусть есть

    char a = 0x10;

так вот далее я могу сделать

    a++

или 

    ++a


что они делают  и в чем разница ?

это хитрые команды. 
оно делает две вещи  - оно возвращает значение переменной и изменяет ее значение увеличивая на +1.
разница их в том какой из шагов делается первее. 
вариант a++ вначале нам возвращает исходное значение перменной, а потом увеличивает ее на один
и запмсывает в тело.
вариант ++a он вначале увелчивает тело переенной а потом уже возвращает.

типа чего бля?

а вот чего

вот код


    char a = 0x10;
    char q = 0x20;
    q = q + a++;
    printf("q = 0x%hhX \n", q);


что происходит в этой строке

    q = q + a++;


у нас вначале в нашу формулу подствляется значение перменной "a" тоесть 0x10
а после этого дополнительный шаг тело этой перенной увеличивется на 1 и запмывается. 
тоеть в фоормулу подсталяется 0х10, а после этоого на заднем плане a становится равно 0x11
тоесть эта фоомула экивалтентна вот таким двум фомулам

    q = q + a;
    a = a + 1;


вот что увидим на экране

	q = 0x30

а если вот такую формулу подставлю

    q = q +   ++a;

то вначале a меняет на 0х11 , потом подсталвяется в формулу. тогда на экране
увидим 0x31





код
    printf("\n");
    a = 0x10;
    printf("a = 0x%hhX  \n",    a);
    printf("a++ = 0x%hhX  \n",    a++ );

на экране увидим 
    a = 0x10  
    a++ = 0x10  





код
    printf("\n");
    a = 0x10;
    printf("a = 0x%hhX  \n",    a);
    printf("++a = 0x%hhX  \n",    ++a );

на экране увидим
	a = 0x10  
	++a = 0x11 






но  это еще не конец. есть еще один идиотизм.
если у нас есть printf и в нем много аргументов то вопрос в каком порядке он эти аргументы
высчитывает? оказыветя справа налево.
показываю


код
    a = 0x10;
    printf("a = 0x%hhX, a++ = 0x%hhX  \n",    a, a++ );

на экране увидим
	a = 0x11, a++ = 0x10






код
    a = 0x10;
    printf("a = 0x%hhX, ++a = 0x%hhX  \n",    a, ++a );

на экране увидим
	a = 0x11, ++a = 0x11 




тесть вначале орабавыается самая правая перменная, а потом уже левая!
а я думал наоборот!



