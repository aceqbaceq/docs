yaml

ямль файл. 
поговорим из чего он состоит

он наполнен двумя сущностями
список и маппинг


список имеет вид

	    - рама
		- дверь
		- фундамент

это набор элементов, каждый элемент обозначается как 
   - значение
   
значением может быть число, слово и другой список или маппинг
 
  
маппинг имеет вид

	кошка : черная

кошка это имя мапинга
черная это значение 


значением может быть число, слово и другой список или маппинг

рассмотрим примеры кодгда значение это другой список\маппинг


 - вася
 - 
   - 1
   - 2
   - 3
 - петя
  
видно что вася и петя это простые значения а 
-
  - 1 
  - 3
  - 3

это когда в значении стоит список

еще пример
  - 1
  - вася: 1
  - 3
  
  1 и 3 это когда когда в значении просто число а
  
 - вася: 1

это когда в значении маппинг
  
рассмотрим примеры с маппингом

вася: т:34

у нас в значении стоит маппинг т:34

вася:
   - 1
   - 2
   
 у нас в значении стоит список

поскольку в значении может стоят список\маппинг внтри которого может стоят другой список\маппинг то ямль файл  имеет вид гробов


ПЕРВОЕ ОТКРОВЕНИЕ.

маппинг 

	кошка : черная

также можно записать как
	
	кошка : 
	    черная

и также он может быть записан как

	кошка : 
	    - черная

на счет эквивалентности третьего я не уверен. но ансибл обрабатывает
все три записи абсолютно одинаково. тоесть

вот записи которые ансибл обраабатывает одинаково

---
- name: test
  hosts: vagrant1

---
- name: test
  hosts:
      vagrant1

---
- name: test
  hosts:
     - vagrant1
	

если мы возьмем любой ямль файл то все что внутри у него есть это набор списков и маппингов и больше там ничего нет.

тоесть любой ямль файл выглядит всегда вот так

	- 1
	- 2
	- 3
	
	вася: 1
    петя: 2

	кошка : 
	    черная

	кошка : 
	    - черная
      

все. 


далее.
очень важный момент поговорим что из себя представляет элемент списка или маппинга. 
элементом может быть число , слово или ВНИМАНИЕ другой список\маппинг.
ОБА!
ИМЕННО ИЗ ЗА ЭТОГО ЯМЛЬ файлы имеют вид гробов.

давайте научимся расшифрровать гробы. 

пример гроба

spec:
  containers:
    - name: front-end
      image: nginx
      ports:
        - containerPort: 80
    - name: rss-reader
      image: nickchase/rss-php-nginx:v1
      ports:
        - containerPort: 88
		
разберем

в этом ямле один маппинг spec:
у которого значение это гроб

тоесть исходный ямль можно схематично описать в виде

spec: значение
	
или

spec:
   значение

где значение это гроб

как выяглядит  значение маппинга spec 

  containers:
    - name: front-end
      image: nginx
      ports:
        - containerPort: 80
    - name: rss-reader
      image: nickchase/rss-php-nginx:v1
      ports:
        - containerPort: 88

что из себя представляет данное значение? это еще один маппинг 

containers:
     значение

что из себя представляет значение? это список

    - name: front-end
      image: nginx
      ports:
        - containerPort: 80
    - name: rss-reader
      image: nickchase/rss-php-nginx:v1
      ports:
        - containerPort: 88
		

что из себя представляет элемент1

  -	name: front-end
    image: nginx
    ports:
       - containerPort: 80


в нем три маппинга
name
image
ports


name и image явалются типа классическими маппигами

	name: front-end
	image: nginx

у них значение это просто слово

а у ports у него значение это список из одного элемента

    ports:
       - containerPort: 80

  
на засыпку интересно какая разница

между 

a: 1
b: 2

и 

- a: 1
- b: 2

