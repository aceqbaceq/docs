| chmod

значит чмод в нем можно задавать преимшнмы в двух видах
либо через octal маску либо через другю формую.


с octal маской все ясно

	$ >t.txt
 	$ ls -1al t.txt 
	-rw-rw-r-- 1 vasya vasya 0 июн 11 18:42 t.txt

	$ chmod 666 t.txt
 	$ ls -1al t.txt 
	-rw-rw-rw- 1 vasya vasya 0 июн 11 18:42 t.txt


   у нас есть маска

   rwxrwxrwx

   первые три слева относятяс к владельцу файла и что он может делать с файлом
   вторые три символа относятся к группе
   и правые три символа это остальные

   r - это 4  в octal маске
   w - это 2  в octal маске
   x - это 1  в octal маске

   соовтетвенно rw-rw-rw- это 666 в виде octal маски


итого октал маска она убирает все биты которые были устаолвены были и устанвливает 
все быит точно так как указано в маске
итак с октал маской все понятно.

переходим к другому споосбу задания перминшнсов
можно указать группу битов которую мы хотим модернизирвать и как мы их хотим модернизицровать.
групы образначаются через 
	u - владелец
	g - примари группа к которой относится владелец
	o - все остальные
	a - означает все три группы

сами биты обозначаются 
	r - право на чтение
	w - право на записьь
	x - право на execute (который транслируетя по разгому для файла и папки)
далее будем расатривать права на файлы. папки не бууду троагать

итак мы выбрали группу битов "o" мы выбрали что мы хотим делать "x" теперь надо понять
что мы точно хотим сделать. добавить этот бит. или его убрать. это заадаетс через "+"
или "-"

	$ ls -1al  t.txt
	-rw-rw-rw- 1 vasya vasya 0 июн 11 18:42 t.txt

добавляем для "other" право "x"
	$ chmod o+x t.txt
	$ ls -1al  t.txt
	-rw-rw-rwx 1 vasya vasya 0 июн 11 18:42 t.txt
             /\
             ||
              добавился бит x
            
убираем для "other" право "x"
	$ chmod o-x t.txt
	$ ls -1al  t.txt
	-rw-rw-rw- 1 vasya vasya 0 июн 11 18:42 t.txt
             /\
             ||
              убрали бит x


тперь работаем с группой "all" 
	$ chmod a+x t.txt
	$ ls -1al  t.txt
	-rwxrwxrwx 1 vasya vasya 0 июн 11 18:42 t.txt

	$ chmod a-x t.txt
	$ ls -1al  t.txt
	-rw-rw-rw- 1 vasya vasya 0 июн 11 18:42 t.txt

как модифиицировать сразу скажем две группы битов. например "g" и "o"
убереем "w" для групп битов "g" и "o"
	$ chmod go-w  t.txt
 	$ ls -1al  t.txt
	-rw-r--r-- 1 vasya vasya 0 июн 11 18:42 t.txt

а вот такое не прокатит
	$ chmod g-wu-w  t.txt
	chmod: invalid mode: ‘g-wu-w’
	Try 'chmod --help' for more information.

тоесть мы выбираем группу битов или группы битов. а потом выбираем для всех них 
единое действие которое нужно изменить.

вот так тоже не срабоате
	$ chmod g-w u-w  t.txt
	chmod: cannot access 'u-w': No such file or directory

но окалалось что можно это сделать. надо всего лишь разделить эти паттерны запятой
	$ chmod g-w,u-w  t.txt
 

итак  я расммотрел  "u"  "g" "o" и рассморел "r" "w" "x" и "+" "-"
остался последний штук это "="
и тут я хочу пояснить как выглядит паттерн когда мы его задаем через буквы ( а не через 
октал форму). паттерн выглядит вот так

			[ugoa][+-=][rwxXst]

в первой скобочке стоит обозначение группа битов с которой мы будем работать.
во третьей скобочке указано какие быты мы меняем в выбранной группе битов
во второй группе указано что мы делаем с битами которые мы указали в третьей скобке
в группе битов котоыре мы указали в первой скобке. то есть

			u+w

означеает что бит w в группе битов u добавляется 

так вот что значит "=" во второй скобке. оно значит что биты указанные в третьей скобке
будут добавлены в группу указанную в первой скобке а все биты которые не указаны в трейтей
скобке будут убраны! пример

			u=w

для группы битов "user" будет установлен (добавлен) бит "w" а остальные биты (r,x) будут
убраны из групппы "user" . показываю

		$ ls -1al t.txt 
		-r--r--r-- 1 vasya vasya 0 июн 11 18:42 t.txt

		$ chmod o=w t.txt 

		$ ls -1al t.txt 
		-r--r---w- 1 vasya vasya 0 июн 11 18:42 t.txt

то есть было r-- а стало w-- 
тоесть был установлен w и убраны rx из группы "other"
замечу что остальные группы битов в данном случае "user" и "group" никак не трогаются

щас еще покажу

		$ chmod a+rwx  t.txt 
 		$ ls -1al t.txt 
		-rwxrwxrwx 1 vasya vasya 0 июн 11 18:42 t.txt


так вот 

	$ chmod g=w,o=x  t.txt 
 	$ ls -1al t.txt 
	-rwx-w---x 1 vasya vasya 0 июн 11 18:42 t.txt


итак я не трогал биты для группе "user" а для групп "group" "other" я устанвоил бит "w"
а отальные биты "rx" я удалил

кстати из первая скобока может быть пустая. это значит что подразумевается "a"
тоесть
		$ chmod +x t.txt
его аналог
		$ chmod a+x t.txt

так вот на счет "=" если мы при этом в третьей скобке ничего не выставим. то это 
значит что устаналивать никкие быты мы не будем зато убирать будем все остальные биты.
но так как никакой бит не был устагвлен то осталльные биты это ВСЕ биты тоесть

		u=

это экваилваентно

		u-rwx

потому что еше раз как работает знак "=" 
все биты котоыре указаны в третьей скобоке будут установлены  А ВСЕ ОСТАЛЬНЫЕ биты должны
быть сброшены!  покзывают на примере

	$ ls -1al t.txt 
	-rwxrwxrwx 1 vasya vasya 0 июн 11 18:42 t.txt
 
	$ chmod o= t.txt 
	$ ls -1al t.txt 
	-rwxrwx--- 1 vasya vasya 0 июн 11 18:42 t.txt

тоесть "o=" это "[o][=][пусто]" тоеть для группы битов "other" знак "=" устанавлиывает 
биты в третьей скобоке а там пусто. значит никакие биты не будут установлены. а все
осталрные биты а в данном случае это значит все биты rwx будет сброшены.
значит в итоге в "other" будет не устанолвен ни один бит зато будут брошены все биты "rwx"

я бы сказал что значок "=" это сумма значков "+" и "-" соединенная воедино.
щас покажу напримере

	$ ls -1al t.txt 
	-rwxrwx-w- 1 vasya vasya 0 июн 11 18:42 t.txt

заюзаем одноврменно "+" и "-"
	$ chmod o+r,o-wx t.txt

 	$ ls -1al t.txt 
	-rwxrwxr-- 1 vasya vasya 0 июн 11 18:42 t.txt


тоесть  я добавил\включил бит "r" и выклюил\убрал биты "wx"



а теперь сделаем тоже самое через "="

	$ ls -1al t.txt 
	-rwxrwx-w- 1 vasya vasya 0 июн 11 18:42 t.txt

	$ chmod o=r  t.txt

	$ ls -1al t.txt 
	-rwxrwxr-- 1 vasya vasya 0 июн 11 18:42 t.txt


тоесть единым порывом "o=r"  я активирвал бит "r" и выключил все остальные тоесть "wx" биты

еще пример. при настройке wireguard испотутся вот такая команда

	# chmod go= /etc/wireguard/private.key

теперь стало понятно что она делает. 
		
		go=

это аналог
		[go][=][пусто]

это значит что для групп битов "group" и "other" устаналивается бит "никакой" и все остальные
биты тоесть в данном случае это значит все биты сбрасываются. тоесть это даст то что 
биты группы "user" не будут затронуты. зато все биты для групп "group" "other" будут сброшены.
тесть если у нас было

		abcdefghi

то после команды у нас будет

		abc------

пример на эту тему

 	$ ls -1al t.txt 
	-rwxrwxrwx 1 vasya vasya 0 июн 11 18:42 t.txt

	$ chmod go= t.txt 

	$ ls -1al t.txt 
	-rwx------ 1 vasya vasya 0 июн 11 18:42 t.txt



получается маска "og=" применяется тогда когда мы для всех кроме владельца файла хотим
убрать все права. вычиитить запретить доступ к файлу для всех кроме владельца файла.

Если октальная маска модифицирует все биты в пермишнсах. то маска в виде [ugo][+-=][rwxXst]
позволяет удобно модифицировать кусочек из группы битов. 

