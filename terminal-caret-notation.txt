| terminal 
| caret notation ^
| caret notion


речь тут идет о том что есть такая практика
если мы работаем с терминалами - она состоит в 
том что если с терминала прилетел управляющий
байт либо в ттай драйвер либо уже в юзер приожение
и в ответ на это на терминал шлется не тот байт
который влетел а шлется символ '^' и второй символ
заглавная буква

   A-Z


но часть управляющих символов порождает то что в ответ
ттай драйвер либо юзер приложение шлют на терминал
другую хрень
а именно


для символа 0x00 NULL     отсылается     ^@
для символа ESC           отсылается     ^[ 
для символа 0x1C FS       отсылается     ^\ 
для символа 0x1D GS       отсылается     ^]
для символа 0x1E RS       отсылается     ^^
для символа 0x1F FS       отсылается     ^_
для символа 0x7F DEL      отсылается     ^?



как это проверить на практике
иду в первый терминал 

 $ tty
   /dev/pts/68
 $ strace -xx cat

пойди на второй терминал
 $ stty --file=/dev/pts/68  -icanon echo echoctl -isig

возврашаемся на первый терминал. и начинаем жать
кнопки и мы все увидим.


теперь на счет какая связь между кодом исходного
байта и кодом символа который вылезает на терминале
после ^. связь такая - берется исходный байт код
и в обратку шлется этот же байт код но у него еще
сделан reverse для бита 0x40 = 0100  0000
                                ^
                               вот этот бит 
                               реверсится


насколко я понимаю математически это значит что 
берется байт код и с ним делается XOR (он работает
так что если 0 и 0 то 0 или 1 и 1 то 0 в остальных
случая выдается 1)


например ASCI NULL 0x00

байт 0х00 = 0000 0000 
байт 0х40 = 0100 0000
            ----------
XOR         0100 0000 = 0х40 = '@' 


или 
байт 0x01 = 0000 0001  
байт 0х40 = 0100 0000
            ----------
XOR         0100 0001 = 0x41 = 'A'

и так для каждого управляющего байт кода.


также рассмотрим судьбу байт кода 7F
0x7F = 0111 1111 
0x40 = 0100 0000
       ----------
XOR    0011 1111  = 0x3F = '?' 
 
тоесть для байт кода 7F мы увидим на экране '^?'


спрашивается а почему так было выбрано.а прикол в том
в том что мы видим на экране зашифрована формула
что нужно нажать на клаве чтобы терминал в итоге
породил данный байт код. символ '^' собой шифрует
кнпоку Ctrl а второй символ шифрует сам себя тоесть 
его и нужно нажимать . тоесть
   
     ^? = Ctrl+?
или
     ^A = Ctrl+A


и если вглядеться вдуматься то символы 'A' или '?'
нельзя получить на клаве просто нажав на кнопку
а можно получить только нажав на  Shift+'key'
тоесть 'A' = Shift-'a'
       '?' = Shift-'/'


так вот прикол в том что по крайне мере в линуксе
можно полуить тот же самый байт код нажимая тутже
самую кнопку без шифта тоесть

    Ctrl+A 
    Ctrl+a 

породят тот же самый ^A тоесть 0x01

или 

   Ctrl+?
   Ctrl+/

породят тот же самый ^? тоесть 0x7F или 0x1F ( в за
висимости от того что за терминал. гном-терминал
породит 1F а  линукс текст термнинал породит 7F)



посольку люди в 99% случаях нажимают Ctrl+a
и ненажимают Ctrl+A
тоя считаю что XOR нужно было делатть не с числом 0x40
а с числом 0x60



кстати нотация  ^N в себе шифрует нетолько то что
надо нажать но и тот байт код который будет породжен
терминалом. тоесть '^?' это '?'=0x3F и нужно в нем
реверсировать 0x40 

     0011 1111
     0100 0000
     -----------
XOR  0111 1111 = 0x7F

тоесть если я вижу на экране '^?' кодирует то 
что в ттай драйвер влетел байт 0x7F


в итоге после ^  идут байт коды в диапазоне 0x3F-0x5F
тоесть вот эти символы


   ?@ABC...XYZ[\]^_


далее
в википедии управляющие байт коды которые я щас
рассмотрел тоесть 0x00 - 0x1F и 0x7F они называются
почемуто "C0 control characters". почему C0 пока 
неясно видим будет ясно при чтении интсутрукциии
к VT220 терминалу


есть еще управлющие байты из диапазона 0x80–0x9F
которые относяится к "C1 control characters" 
они уже не входят в состав ASCII таблицы. пока что
я про них ниухя не знаю но может узнаю потом.
ясно пока только то что что эти байт коды уже нележат
в группу 7битных хреней. это уже 8битные хрени.

также вики пишет что ядро или приложения которые
при прилете в них обратно на терминал шлют "caret
notion" они это умеют делать только для "C0 
control characters" а для  "C1 control characters"
такой нотации уже нет. не придумали. 

далее пишут что многие комп системы позволяют
вводить управлябщие байт коды через нажатие Ctrl+n
вместо Ctrl+N (что я описал уже выше)
пишут что на многих системах прокатывает именно
Ctrl+n
но есть системы где нужно нажать именно Ctrl+N


еще раз хочу выделить такой момент что  в завсимости
от разных эмуляторов термиалов нажатие на комбинацию
порождает разные байты коды которые пошлет термнал
а ттайдрайер. тоесть 


Ctrl+/ порождает 7F если это текст линукс терминал
и порождает 1F в гном терминал

а вот что приятно Ctrl+8 в любом терминале порждает 
7F

а вообще эта тема мнея уже тоже позалебала


ссылки:
https://en.wikipedia.org/wiki/Caret_notation
