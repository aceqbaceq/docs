toBinary () 
{ 
    local n bits sign='';
    (($1<0)) && sign=-;
    for ((n=$sign$1 ; n>0 ; n >>= 1 ))
    do
        bits=$((n&1))$bits;
    done;
    printf "%s\n" "$sign${bits-0}"
}



for ((n=5 ; n>0 ; n >>= 1 ))
    do
        sleep 1;
        echo 1;
    done;

    - чо это за хрень n >>= 1
    ответ (( n>>=1)) это эквивалентно (( n=n>>1 ))
    тоесть сдвиаем на 1 бит направо и переприсваиевам переменную.
    почему не используют (( n>>1 )), потому что оно сдвигает бит но переменнуб оно 
    неменяет. вот зацени разницу

$ a=15;echo $(( a>>1 )); echo $a
7
15

$ a=15;echo $(( a>>=1 )); echo $a
7
7

