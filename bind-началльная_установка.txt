| bind

я создаю две виртуалки чтобы на них создать
два BIND сервера. один будет примари
второй будет секондари.
на бинде мы создадим zone она будет отвечать
за домен 

     petya.loc



у виртуалок будут параметры:

	имя хоста: bind2-01
	ip       : 172.16.100.28

	имя хоста: bind2-02
	ip       : 172.16.100.29



я создаю два tapN порта воткнутых в свич

$ sudo nmcli connection add con-name "tap21"    type tun   mode tap   ifname "tap21" ipv4.method disabled ipv6.method disabled  owner 1000   autoconnect yes  master br4

$ sudo nmcli connection add con-name "tap22"    type tun   mode tap   ifname "tap22" ipv4.method disabled ipv6.method disabled  owner 1000   autoconnect yes  master br4


в них я буду втыкать виртулки.


запускаю виртулки

  $ cat start.bash 
#!/usr/bin/bash

qemu-system-x86_64 -name bind2-01 -m 286M -boot d -drive file=hda.img,media=disk,if=virtio,format=qcow2,file.locking=on -cpu host -enable-kvm -smp 1 -M q35 -device virtio-balloon -device VGA,vgamem_mb=8 -display none -netdev tap,id=mynet1,ifname=tap21,script=no,downscript=no -device virtio-net-pci,netdev=mynet1,mac=ba:ec:24:00:21:01 -serial /dev/tty ; reset


на всех вирталках вырубаем тот днс клиент
который там есть. это либо dnsmasq либо 
это systemd-resolved
потому что на 53 порту у нас будет сидеть bind9

# export i="dnsmasq"; systemctl stop $i && systemctl disable $i && systemctl mask $i
# export i="systemd-resolved"; systemctl stop $i && systemctl disable $i && systemctl mask $i


на первой вирталке я делаю
настройки


root@bind2-01:~# cat /etc/hostname 
bind2-01



root@bind2-01:~# 
root@bind2-01:~# cat /etc/hosts
127.0.0.1	localhost
172.16.100.28	bind2-01


root@bind2-01:~# cat /etc/network/interfaces
...
...
# The primary network interface
allow-hotplug enp0s3
iface enp0s3 inet static
    address 172.16.100.28/24
    #gateway 172.16.100.1
 	dns-nameservers 127.0.0.1
	# dns-nameserver 172.16.10.1
         up ip route add default via 172.16.100.1  dev enp0s3 proto static  src 172.16.100.28  metric 100
         down ip route del default



в итоге я имею  ip адрес

172.16.100.28/24

и таблицу маршуитизации

# ip -c r sh
default via 172.16.100.1 dev enp0s3 proto static src 172.16.100.28 metric 100 
172.16.100.0/24 dev enp0s3 proto kernel scope link src 172.16.100.28 


далее я начинаю ставить бинд 
через статью

https://www.digitalocean.com/community/tutorials/how-to-configure-bind-as-a-private-network-dns-server-on-ubuntu-14-04


$ sudo apt-get update
$ sudo apt-get install bind9 bind9utils bind9-doc -y


далее в статье указано как выключить ipv6 для бинд.
через файл 

/etc/default/bind9

но это хуйня .так уже неработает
насамом деле нужно создать файл

/etc/systemd/system/bind9.service.d/bind9.conf

[Service]
ExecStart=
ExecStart=/usr/sbin/named -4 -f $OPTIONS

это так назвыаемый drop-in файл для юнита системд


теперь открываем файл

 /etc/bind/named.conf.options


и редактируем его , в самом вверху вставляем
кусок


acl "trusted" {
        172.16.100.28;    # bind2-01
        172.16.100.29;    # bind2-02
        
};


эта секция задает ип адреса клиентов которым
можно обращаться к бинду для рекурсивных днс запросов

в этом же файле находим кусок

options {
        directory "/var/cache/bind";
...
}

и вставляем в него кусок и получаем вот такое


options {
	directory "/var/cache/bind";


        recursion yes;                 # enables resursive queries
        allow-recursion { trusted; };  # allows recursive queries from "trusted" clients
        listen-on { 172.16.100.28; 127.0.0.1; };  # указаыаем ип нашего сервера где будет у нас бинд слушать реквесты от клиентов
        allow-transfer { none; };      # disable zone transfers by default

        forwarders {
                1.1.1.1;
                8.8.8.8;
        };



этим куском мы разрешили серверу обслуживать 
рекурсиые запросы. и это можно делать с ип 
адресов из куска  "trusted"
также мы указали форвардеры тоесть те днс
сервера к которы будет обращаться наш бинд
если на нашем бинде нет данных которые запраишивабтся
в запросе


далее редактиурем файл /etc/bind/named.conf.local 
вставляем кусок


zone "petya.loc" {
    type master;  # это указывает что данный бинд сервис будет для данной зоны примари сервером
    file "/etc/bind/zones/db.petya.loc"; # путь к файлу в котором будут хранится днс записи зоны
    allow-transfer { 172.16.100.29; };   # указываю ип адрес секондари сервера котоому будет разрешено считать зоны с нашего сервера 
};


в этом же файле вставяляю еще кусок

zone "100.16.172.in-addr.arpa" {
    type master;
    file "/etc/bind/zones/db.172.16.100";  # 172.16.100.0/24 это ип подсеть которая принадлежит нашей организации об этом я буду писать отдельно
    allow-transfer { 172.16.100.29; }; 
};


таким образом я задал то что наш бинд сервер
будет заведывать двумя зонами в качестве мастера
пока что мы обьявили зоны в целом.
вторая зона это так называемая reverse zone.
я считаю что это называни только ебет мозг
на пустом месте. это обычная зона которая как
все зоны просто напросто хостит внутри себя
днс записи. зона отвечает за домен.
я не вижу никакой разницы между доменом
	petya.loc
и доменом
	100.16.172.in-addr.arpa
и тот и другой домен подчиняется правилу имени
домена. назваиние reverse zone навевает идею
что якобы это какой то особый шаманский домен
и что это особая шаманская зона. ЭТО НЕТАК.
это такой же домен как и другие. ни более того.
ну единственное что такой домен не сможет себе
купить обычный юзер. его сможет купить только 
провайдер который владее блоком белых ип адресов.
и только то.


а теперь начнем заполнять эти зоны днс записями
создаем папку и файлы которые будут содержать
записи зон

   $ sudo mkdir /etc/bind/zones
   # cd /etc/bind
файлы будет создавать на основе уже имеющихся
шаблонов
   # cp ./db.local ./zones/db.petya.loc


приводим этот файл к виду


$TTL	604800

@	IN	SOA	bind2-01.petya.loc. admin.petya.loc. (
	          3		; Serial
	     604800		; Refresh
	      86400		; Retry
	    2419200		; Expire
	     604800 )	; Negative Cache TTL
;



; NS servers
@    IN      NS      bind2-01.petya.loc.
@    IN      NS      bind2-02.petya.loc.



; name servers - A records
bind2-01          IN      A       172.16.100.28
bind2-02          IN      A       172.16.100.29


по идее все настройки сделаны.
теперь нужно проверить что все конфиги верные

(проверка общих конфигов)
	# named-checkconf    

(проверка  конфигов зон)
первый аргумент имя домена который указан в зоне
второй параметр это путь к файлу где хрнанятся
днс записи зоны
	# named-checkzone petya.loc ./zone/db.petya.loc


теперь надо перезапусить сервис bind9
сделать это можнонесколькимим способами
	# kill -HUP $(pidof named)
либо
	#systemctl restart bind9
еще можно через CLI от бинд9 это rndc
	# rndc reload petya.loc

теперь нужно убедиться что в логах бинд неругается
	# journalctl -f

теперь проверяем что на ип адресах
	172.16.100.28
	127.0.0.1
у нас сидит named

все. можно слать запросы от клиента dig



тепрь я разберу  синатксис файла где хрантся
записи днс
вотэта штука


$TTL	604800

я не знаю что она делает. 

а в целом в файл записывается список днс 
записей. каждая запись имеет вид

   имя  IN    тип    значение

вот типичный пример

bind2-01          IN      A       172.16.100.28


значит тут важный момент. имя это всегда
имя какогто домена. и ОБЯЗАТЕЛЬНО оно указвыается
обрезанным относиельно домена который указан в 
свойствах ЗОНЫ.
тоесть у нас указано имя 


   bind2-01

а домен в зоне равен

  zone "petya.loc"{..


то это значит что имя домена в записи bind2-01
на самом деле равно 

   bind2-01.petya.loc


тоесть домен который указается в поле имени
записи в файле он всегда относитеелен имени домена
в свойствах зоны.

поэтому вот эта запись 

bind2-01          IN      A       172.16.100.28

она на самом деле значит 


   bind2-01.petya.loc ...  172.16.100.28


поэтому когда мы создаем запись в файле то имя
домена исходного нужно обрезать вычитая имя домена
в свойствах зоны.

далее запись чуть более сложная

@    IN      NS      bind2-01.petya.loc.


знак @ означает что имя равно названию зоны!
тоесть  в данном случает  petya.loc
тоесть полный аналог этой записи


petya.loc.    ...     bind2-01.petya.loc.


тоесть @=petya.loc



вообще правило такое: если в файле в поле имя
указан домен и на его конце нет точки то в итоге
к нему прибалвяется домен в зоне.
а если домен в файле указан с точкой на конце 
то тогда этот домен воспринимается буквально тоесть
запись

bind2-01          ...


она ведет к тому что это домен  bind2-01.petya.loc

а если запись


bind2-01.petya.loc.          ...


то так как на конце есть точка то домен из зоны
не прибавлется поэтому  домен данной записи
равен bind2-01.petya.loc

а если у нас стоит @ то это значит что в этом
месте домен равено домену из зоны
тоесть запись

@          ...

его экваиваент

bind2-01.petya.loc.          ...

если в файле имя записи пустое то имя домена 
равно в точности имени домена от предудущей наверрх
записи. показывают на прмиере


@          IN      A       172.16.100.28 (домен petya.loc)

           IN      A       172.16.100.29 (домен petya.loc)

           IN      A       172.16.100.30 (домен petya.loc)

a           IN      A       172.16.100.30 (домен a.petya.loc)

b.petya.loc.   IN      A       172.16.100.30 (домен b.petya.loc)


итак еще раз если мы в записи указываем в поле
имя просто домен то к нему прибавлвяется домен 
из названия зоны
если мы ставим @ то вместо него подставляется
домен из зоны
если стоит пробел вместо имени то имя равно
в точности имени из записи предыдущей что выше
если в имени на конце стоит точка то домен в
точности равен тому что мы указали в имени без
плюсования домена из названия зоны.
охуеть.


итак синтаксис простеньких записей мы разообрали.
посмотрим на синатксис самой сложной вэтом файле
записи

@	IN	SOA	bind2-01.petya.loc. admin.petya.loc. (
	          3		; Serial
	     604800		; Refresh
	      86400		; Retry
	    2419200		; Expire
	     604800 )	; Negative Cache TTL
;

это всего навсего запись.
ВАЖНЫЙ МОМЕНТ. если я меняю файл с записями
то обязательно нужно увеличиить на +1 вот этот
параметр в SOA записи

было
    3		; Serial

стало
    4		; Serial

когда мы его меняем то наш мастер сервер шлет
уведомление на секондари серверы о том что зона
изменилась и им нужно синронизиротьвся.
если это число не увилчиь то в логах будет 
ругань



ее имя это @
ее тип это SOA
ее значение равно "bind2-01.petya.loc. admin.petya.loc."
(
	          3		
	     604800		
	      86400		
	    2419200		
	     604800 )	

@@@@@@@@@@@@@@@@@@@@@@@@@@@@

это доп свойства этой записи.





создаем файл в котором будет хостится записи второй
зоны

   # cp ./db.127 ./zones/db.172.16.100


файл приводим к такому виду


$TTL	604800
@	IN	SOA	bind-01.vasya.loc. admin.vasya.loc. (
			      6		; Serial
			 604800		; Refresh
			  86400		; Retry
			2419200		; Expire
			 604800 )	; Negative Cache TTL
;

; name servers - NS records
@      IN      NS      bind2-01.vasya.loc.
@      IN      NS      bind2-02.vasya.loc.



; PTR Records
28   IN      PTR     bind2-01.vasya.loc.    ; 172.16.100.28
29   IN      PTR     bind2-02.vasya.loc.    ; 172.16.100.29



дальше уже нет сил писать.
открыай 

    bind-config-examples.txt  

там уже готовые  конфиги...

