| libvirt
| virt-manager
| qemu
| kms


тут будет большая тема про всю эту кухню
==
ксатт елсли мы указали console=tty1 console=ttyS0
то можно в одной коноли заустить баш и во втоорой
(в первой консоли) $ /bin/sh </dev/tty1 >/dev/tty1
и у нас уже две консоли

==
что инеерсно как выгядит список процесссов 
когда сатрутанул intrd и выолняется скрипт init


PID USER       VSZ STAT COMMAND
    1 root      4812 S    {init} /bin/sh /init 
    2 root         0 SW   [kthreadd]
    3 root         0 IW<  [rcu_gp]
    4 root         0 IW<  [rcu_par_gp]
    5 root         0 IW   [kworker/0:0-eve]
    6 root         0 IW<  [kworker/0:0H]
    7 root         0 IW   [kworker/0:1-eve]
    8 root         0 IW   [kworker/u2:0-ev]
    9 root         0 IW<  [mm_percpu_wq]
   10 root         0 SW   [ksoftirqd/0]
   11 root         0 IW   [rcu_sched]
   12 root         0 SW   [migration/0]
   13 root         0 SW   [idle_inject/0]
   14 root         0 SW   [cpuhp/0]
   15 root         0 SW   [kdevtmpfs]
   16 root         0 IW<  [netns]
   17 root         0 SW   [rcu_tasks_rude_]
   18 root         0 SW   [rcu_tasks_trace]
   19 root         0 SW   [kauditd]
   20 root         0 SW   [khungtaskd]
   21 root         0 SW   [oom_reaper]
   22 root         0 IW<  [writeback]
   23 root         0 SW   [kcompactd0]
   24 root         0 SWN  [ksmd]
   70 root         0 IW<  [kintegrityd]
   71 root         0 IW<  [kblockd]
   72 root         0 IW<  [blkcg_punt_bio]
   73 root         0 IW<  [tpm_dev_wq]
   74 root         0 IW<  [ata_sff]
   75 root         0 IW<  [md]
   76 root         0 IW<  [edac-poller]
   77 root         0 IW<  [devfreq_wq]
   78 root         0 SW   [watchdogd]
   80 root         0 IW   [kworker/u2:1-ev]
   82 root         0 SW   [kswapd0]
   83 root         0 SW   [ecryptfs-kthrea]
   85 root         0 IW<  [kthrotld]
   86 root         0 IW<  [acpi_thermal_pm]
   87 root         0 IW<  [vfio-irqfd-clea]
   88 root         0 IW<  [ipv6_addrconf]
   97 root         0 IW<  [kstrp]
  100 root         0 IW<  [zswap-shrink]
  101 root         0 IW<  [kworker/u3:0]
  106 root         0 IW<  [charger_manager]
  107 root      4812 S    /bin/sh
  109 root         0 IW   [kworker/u2:2-ev]
  128 root     12052 S    /bin/bash
  129 root      4812 R    ps


вот этастрочка интерсная

    1 root      4812 S    {init} /bin/sh /init 
получется ядро ищет на initrd файл /init  и его запускает.
а в нем написано
	#/bin/sh

и он тггда запускает execve (/bin/sh, ["/bin/sh", "init"],......)



спмсок папок это в памяти не на дисеке

4# ls -1  /
dev
root
kernel
lib64
sbin
scripts
lib
usr
run
var
init
conf
bin
etc
proc
sys

папки /sys  /proc  я создал сам и примнтиррва их fs

далее
# cat /proc/cmdline
BOOT_IMAGE=(hd3,gpt1)/boot/vmlinuz-5.10.0-051000-generic rw console=tty1 console=ttyS0 root=LABEL=initka


маунт точки
# mount
none on / type rootfs (rw)
proc on /proc type proc (rw,relatime)
sysfs on /sys type sysfs (rw,relatime)

# tty
/dev/console
# cat /sys/class/tty/console/active 
tty1 ttyS0


вывовд и ввод идет в ttyS0



потмо пониже проша устанволк по сркитпу имеем вот так

# lsmod
Module                  Size  Used by
btrfs                1351680  0
blake2b_generic        20480  0
raid10                 61440  0
raid456               159744  0
async_raid6_recov      24576  1 raid456
async_memcpy           20480  2 raid456,async_raid6_recov
async_pq               24576  2 raid456,async_raid6_recov
async_xor              20480  3 async_pq,raid456,async_raid6_recov
async_tx               20480  5 async_pq,async_memcpy,async_xor,raid456,async_raid6_recov
xor                    24576  2 async_xor,btrfs
raid6_pq              114688  4 async_pq,btrfs,raid456,async_raid6_recov
libcrc32c              16384  2 btrfs,raid456
raid1                  49152  0
raid0                  24576  0
multipath              20480  0
linear                 20480  0
qxl                    61440  0
drm_ttm_helper         16384  1 qxl
ttm                   102400  2 qxl,drm_ttm_helper
drm_kms_helper        233472  3 qxl
syscopyarea            16384  1 drm_kms_helper
sysfillrect            16384  1 drm_kms_helper
sysimgblt              16384  1 drm_kms_helper
fb_sys_fops            16384  1 drm_kms_helper
cec                    53248  1 drm_kms_helper
rc_core                53248  1 cec
drm                   548864  5 drm_kms_helper,qxl,drm_ttm_helper,ttm
ahci                   40960  1
e1000                 147456  0
psmouse               159744  0
libahci                36864  1 ahci
virtio_blk             20480  0


# 
# mount
none on / type rootfs (rw)
proc on /proc type proc (rw,relatime)
sysfs on /sys type sysfs (rw,relatime)
proc on /proc type proc (rw,nosuid,nodev,noexec,relatime)
udev on /root/dev type devtmpfs (rw,nosuid,relatime,size=214144k,nr_inodes=53536,mode=755,inode64)
devpts on /root/dev/pts type devpts (rw,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000)
tmpfs on /root/run type tmpfs (rw,nosuid,noexec,relatime,size=51740k,mode=755,inode64)
/dev/sdb1 on /root type ext3 (rw,relatime)
# 


# 
# cat /proc/consoles 
ttyS0                -W- (EC p a)    4:64
tty1                 -WU (E  p  )    4:1


# 
# cat /proc/$$/mountinfo 
1 1 0:2 / / rw - rootfs none rw
25 1 0:23 / /proc rw,relatime - proc proc rw
26 1 0:24 / /sys rw,relatime - sysfs sysfs rw
27 25 0:25 / /proc rw,nosuid,nodev,noexec,relatime - proc proc rw
28 32 0:5 / /root/dev rw,nosuid,relatime - devtmpfs udev rw,size=214144k,nr_inodes=53536,mode=755,inode64
29 28 0:26 / /root/dev/pts rw,nosuid,noexec,relatime - devpts devpts rw,gid=5,mode=620,ptmxmode=000
30 32 0:27 / /root/run rw,nosuid,noexec,relatime - tmpfs tmpfs rw,size=51740k,mode=755,inode64
32 1 8:17 / /root rw,relatime - ext3 /dev/sdb1 rw
# 

хочу увидеть собсвтеие major:minor с драйверами 
у нас мы видим  
	8:17
	0:*


# cat /proc/devices 
Character devices:
  1 mem
  4 /dev/vc/0
  4 tty
  4 ttyS
  5 /dev/tty
  5 /dev/console
  5 /dev/ptmx
  5 ttyprintk
  7 vcs
 10 misc
 13 input
 21 sg
 29 fb
 89 i2c
108 ppp
128 ptm
136 pts
180 usb
189 usb_device
204 ttyMAX
226 drm
239 aux
240 cec
241 lirc
242 vfio
243 bsg
244 watchdog
245 remoteproc
246 ptp
247 pps
248 rtc
249 dma_heap
250 dax
251 dimmctl
252 ndctl
253 tpm
254 gpiochip

Block devices:
  7 loop
  8 sd
  9 md
 11 sr
 65 sd
 66 sd
 67 sd
 68 sd
 69 sd
 70 sd
 71 sd
128 sd
129 sd
130 sd
131 sd
132 sd
133 sd
134 sd
135 sd
252 virtblk
253 device-mapper
254 mdp
259 blkext
# 


видим что major=8 это 
	8 sd

что значит major=0 нппотяно. какой дрквер ее обслуживает. 
==
если arch/manjaro то установка пакета вот так
  $ sudo pacman -Sy qemu-full
там просто дохрена устанавливеся того что нам ненадо.
зато ставится и то что надо. поэтому пока так
далее
вот так ставим линукс из iso
    $ qemu-system-x86_64 -name ub18 -m 4096M  -boot c -cdrom ./ubuntu-18.04.6-desktop-amd64.iso  -drive file=ub18.img,media=disk,if=virtio,format=qcow2,file.locking=on  -cpu host -enable-kvm    -smp 1 -M pc-q35-2.11     -device virtio-balloon          -device qxl-vga,id=video0,vgamem_mb=16,xres=1800,yres=900    -display gtk 


далее чтобы нам запуститься уже устанолвенную систму нам нужно к ней еще сеть
прикрутиь.
теперь мы когда поставили линукск то теперь надо к нему присобачить
сеть. для этого на самом ноутбуке на хозяйской ос настроить
бриджевый br0 интерфейс и tap0 интерфейс

   apt-get install -y bridge-utils
если это арч\манжаро то  
   pacman -Sy bridge-utils

   brctl addbr br0
   ip address add 172.16.10.1/24 dev br0

в убунту
   apt install uml-utilities
   tunctl -t tap0 -u `whoami`
на самом деле пакет uml-utilities можно не ставить
тем более что в арч\манжаро пакет uml_utilities лежит в AUR
и он сука сломан. он не компиилиурется сука ПОЭТОМУ 
вместо uml утилит  надо заюзать пакет iproute2 вот в таком виде
   ip tuntap  add mode tap user noroot tap0
   
   brctl addif br0 tap0
   ip -c l set tap0 up
   ip -c l set br0 up


запускаем гостевой манжаро с сетью прикрепленной к нему

    $   qemu-system-x86_64 -name manj2   -m 4096M  -boot d    -drive file=manj2.img,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm    -smp 2 -M pc-q35-2.11     -device virtio-balloon            -device qxl-vga,id=video0,vgamem_mb=16,xres=1800,yres=950    -display gtk  -netdev tap,id=mynet0,ifname=tap0,script=no,downscript=no  -device virtio-net-pci,netdev=mynet0,mac=ba:ec:24:5c:80:3f


заходим на виртуалку и там настраиваем сетку внутри 
   172.16.10.10/24 
тперь мы из вртулки можем пинговать гейтвей который находится на хостовой ос
осталось настроить чобы можно было из гостевой ос выходить в интернет
я это расписал в файле "lubuntu-LiveUsb-Qemu-Manjaro.txt"  там читать начиная с места "но этого мало для того чтобы из гостевой ос выходить в интернет"



==
не могу запусти экран gtk

qemu-system-x86_64: -display gtk: GTK support is disabled
приична 

нет пактеа
qemu-systemgui

описание пактеа
apt-cache show qemu-system-gui
Description-en: QEMU full system emulation binaries (user interface and audio support)
 This package provides local graphical user interface (currently GTK)
 and audio backends for full system emulation (qemu-system-*) packages.
 .
 The default GTK based qemu-system-gui is generally better and recommended,
 but a few corner cases still need SDL which is therefore provided as well.

прико в том что на моем старом линуксе нет  такого пактеа
только в новом


==
еще ошибка про gtk

заускаю

$ qemu-system-x86_64 -name grub1 -m 550M  -boot d -hda ./grub1.img  -drive file=grub1.img,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm    -smp 1 -M pc-q35-2.11     -device virtio-balloon  -hdb ./hda.img  -drive file=hda.img,media=disk,if=virtio,format=qcow2,file.locking=off             -device qxl-vga,id=video0,vgamem_mb=16,xres=1800,yres=950    -display gtk

получаю

error: gtk initualization failed

прчииана

0

It's trying to connect to your local X11 server but doesn't have access; you can change this with the xhost command:
❯ xhost +
access control disabled, clients can connect from any host
❯ export DISPLAY=:0

это пиздец
(https://unix.stackexchange.com/questions/765565/starting-qemu-as-another-user)
===

==
| qemu archlinux manjaro Ctrl+C 


пролема
есял я заохожу на qemu виртулку через режим 

	-monitor none
	- nographic


и тыккаю Crtl+C 
то моя хостовое ядро оно посылвает этот сигнал невнутрт вируалки!
а на форегруаунд процесс который щас крутится на моем черном окне моего хоста
тоеть он посылает этотсигнал qemu-system-x86_64  и он как номраьный процесс
поймав этот сигнал заканчивает рабооту тоесть по факту моя виртуалка ПОДЫХАЕТ!

надо как то заставить qemu при получении сигнал sigterm на работу заканчивать
а пересылть сигнал виртулке !!!

если зсставить qemu создавать pts/10 устройствао и я будут к нему подкюаться
через самописную C программу то это тоже невыход. так как нажатие Ctrl+C 
будет приавоид к тому что ядро хоста будет посылать этот  сигнал моей 
сампоисной программе. !

КОРОЧЕ решение найдено! 
окзывается во всем виновата настройка 

	-monitore none

нужно ее вообще нахуй убрать полностьью.
и тоогда qemu-system-x86_64 если получает сигнал SIGTERM он его 
не сам исполняет (типа грохает себя) а напрвляет его внутрь виртулки!
нашел ответ здесь
(https://unix.stackexchange.com/questions/167165/how-to-pass-ctrl-c-to-the-guest-when-running-qemu-with-nographic)
сука!!






==

| archlinux manjaro network static ip
сеть в archlinux\manjaro
как ее быстро поднять

в целом есть несколько вариантов как на виртулаке на оснвое qemu 
настроить сеть. я буду описывать метод который в интенете называется "qemu network via tap"

во первых я рекомендую поднять на хостовой машине linux bridge,
можно посмотреть как это сделать а можно например воспользоваться 
уже тем бриджом что уже есть на хосте например очень часто на хостовой
машнине есть docker0 бридж который создал докер. ну вот и отлично.
или можно восползоваться бриджом lxdbr0 это бридж  который создает lxd
фишка в том что для этих бридждей уже все настроено в том числе нужные
правила на iptables

далее надо  создать tap0 интерфейс и воткнуть его в этот бридж.
( взял отсюда https://gist.github.com/extremecoders-re/e8fd8a67a515fee0c873dcafc81d811c )
    $ sudo apt install uml-utilities
    $ sudo   tunctl -t tap0 -u `whoami`
    $ sudo brctl addif docker0 tap0
    $ sudo ip -c l set tap0 up   <==== ОБЯЗАТЕЛЬЕО на хосте надо поднять tap0 карту!



далее запускать виртуалку в qemu надо вот так
$ qemu-system-x86_64 ....
    -netdev tap,id=mynet0,ifname=tap0,script=no,downscript=no 
    -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:02   


далее когда зайдешь на виртуалку то поднять временно  сеть 
руками можно так 

	# ip address 172.17.0.113/24 dev enp0s2   < ==== 172.17.. это сеть br интерфейса
											  < === enp0s2 это назв карты на виртуалке
    # ip route add default via 172.17.0.1
    # echo "nameserver 8.8.8.8" > /etc/resolv.conf

а чтобы сеть по нормальному настроить чтобы после перезагрузки
ннужно было руками ничего крутить то используй

		systemd-networkd

чтобы его настроить ищи "|systemd-networkd"

все теперь доступ в интернет должен работать

==
| libvirt
| qemu 
| virt-manager
в какой папке по дефолту virt-manager запиывает файлы виртуальных дисков

	~/.local/share/libvirt/images/manjaro.qcow2	

==
иногда он рукгаается что не может залочтить файл на запис тггда я запукаю виртуалку
авот 
ттак

 qemu-system-x86_64 -name manj2 -m 300M   -boot d -hda ./manj2.img    -cpu host -enable-kvm   -smp 2 -M pc-q35-2.11   -vga virtio    -netdev tap,id=mynet0,ifname=tap1,script=no,downscript=no -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:03  -device virtio-balloon   -nographic  -drive file=./manj2.img,format=qcow2,file.locking=off,id=hd0,if=none

главная опция  это вот этаа

 -drive file=./manj2.img,format=qcow2,file.locking=off,id=hd0,if=none

==
создать диск
 qemu-img create -f qcow2 Win2k.img 20G
==
пример команды

 qemu-system-x86_64 -name manj2 -m 350M   -boot d -hda ./manj2.img  -drive file=manj2.img,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm -display sdl   -smp 2 -M pc-q35-2.11   -vga virtio    -netdev tap,id=mynet0,ifname=tap7,script=no,downscript=no -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:03      -device virtio-balloon

==
как примонтировать на хост qemu qcow2 диск

$ sudo modinfo -p  nbd
nbds_max:number of network block devices to initialize (default: 16) (int)
max_part:number of partitions per device (default: 16) (int)


$ sudo modprobe   nbd nbds_max=2 max_part=2

$ cat /sys/module/nbd/parameters/max_part 
3
$ cat /sys/module/nbd/parameters/nbds_max 
2

$ sudo qemu-img create -f qcow2 hda.img 2G

$ sudo qemu-nbd --connect=/dev/nbd0  ./hda.img 

 $ sudo parted /dev/nbd0
GNU Parted 3.2
Using /dev/nbd0
Welcome to GNU Parted! Type 'help' to view a list of commands.
(parted) p                                                                
Error: /dev/nbd0: unrecognised disk label
Model: Unknown (unknown)                                                  
Disk /dev/nbd0: 2147MB
Sector size (logical/physical): 512B/512B
Partition Table: unknown
Disk Flags: 
(parted) mklabel gpt                                                      
(parted) mkpart                                                           
Partition name?  []?                                                      
File system type?  [ext2]? ext3                                           
Start? 4M
End? 100%                                                                 
(parted) q                                                                
Information: You may need to update /etc/fstab.

 R 謵  $ sudo mkfs.ext3 /dev/nbd0p1                                       
mke2fs 1.44.1 (24-Mar-2018)
Discarding device blocks: done                            
Creating filesystem with 523008 4k blocks and 130816 inodes
Filesystem UUID: a867e628-1db6-492f-a505-90ce963d3a00
Superblock backups stored on blocks: 
    32768, 98304, 163840, 229376, 294912

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (8192 blocks): done
Writing superblocks and filesystem accounting information: done 

$ sudo mount -t ext3 /dev/nbd0p1 /mnt/01

$ sudo umount /mnt/01
 R 뫆  $ sudo qemu-nbd --discoonect /dev/nbd0
qemu-nbd: unrecognized option '--discoonect'
Try `qemu-nbd --help' for more information.
 ; ⤦  $ sudo qemu-nbd --disconnect /dev/nbd0
/dev/nbd0 disconnected
 > ࠘  $ 

$ sudo rmmod nbd

==
я непонянимал одну вешь

я довыбавлял диск добавлял вот так

 qemu-system-x86_64  ...
  -hda ./manj2.img  
  -drive file=manj2.img,media=disk,if=virtio,format=qcow2,file.locking=off 
  ...
на самом деле это добоебзм потому что это дублируюая запись.
тость один ии тотже "диск" добавллялся два раза в систему.
тоже смое качается гарф карты

 -device qxl-vga,id=video0,vgamem_mb=16,xres=1800,yres=950    -vga qxl
это тоже две граф карты будут доавллены!
так делать ненадо


==
| qemu 
| archlinux
| manjaro
| kbd_mode: KDSKBMODE

при загрузке ос через qemu который вот так запускается

$ qemu-system-x86_64 -name manj11 -m 2G   -boot d -drive file=manjaro.qcow2,media=disk,if=virtio,format=qcow2,file.locking=off  -cpu host -enable-kvm   -smp 1  -M pc-q35-2.11        -netdev tap,id=mynet0,ifname=tap1,script=no,downscript=no -device virtio-net-pci,netdev=mynet0,mac=52:55:00:d1:55:02   -device qxl-vga,id=video0,vgamem_mb=16,xres=1800,yres=950    -nographic

я отмечу опции
	-nographic
это дает то что qemu берет COM порт (ttyS0) который он сует в виртуалку
и qemu вот что делает он все что виртуалка высирает на ttyS0 направляет на текущее "черное
окно" а то что с клавы "черного окна" нажмается то qemu это все пихает на ttyS0 виртуалки.
при этом у меня через GRUB на виртуалке настроен вот такой параметр
	console=ttyS0
это дает то что линукс при загрузке будет на ttyS0 высирать лог загрузки
а после ттого как линукс загрузится то ядро запустиит agetty процесс которому он 
"пришьет" к fd/0 и fd/1 ttyS0

               /proc/pid/fd/0 ----> /dev/tty/S0
               /proc/pid/fd/1 ----> /dev/tty/S0

где pid это пид процесса agetty
поэтому в итоге у нас на экранее нашего черного окна на хосте будет выведено 
приглашение логина и пароля. и вуаля мы внутри виртуалки.

так вот при загрузке manjaro который базируется на archlinux
я вижу ошибку


:: running early hook [udev]
:: running hook [udev]
:: Triggering uevents...
:: running hook [keymap]
:: Loading keymap...kbd_mode: KDSKBMODE: Inappropriate ioctl for device   <====== !!!!


вот с этой ошибкой  я щас будут работать

//\\\
|||||
|||||
|||||
\\\\\
 \\\\\======>>> закончил на этом вопросе
 
