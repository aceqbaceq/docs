| bind
| delegate
| authoritative
| авторитетный
| zone


поговорим про домены и зоны. и авторитетность.


что такое днс. это распределенная по множеству
компов база данных. база данных в которой хранятся
так назыаемые доменные имена. доменное имя имеет
вид текста. это такой считай что мат обьект.
днс хранит множество этих обьектов. или элементов.
днс имя в физ мире може ассоциировать с разными
хренями - можно его ассцоировать с сервером, можно
с сайтом или веб сервисом , можно ассоциировать
с группой серверов. сама база данныз абсолютно
не указывает с каким физ обьектом у нас ассоциировано
доменное имя. она лишь хранит в себе этим элементы.
и у нас есть следущий момент - каждое доменное
имя как мат обьект может иметь кучу свойств. 
и база днс она хранит в себе не только множество
доменных имен но и их свойства или атрибутов. 


мы делаем запрос от клиента на днс сервер 
и укзываем доменное имя котоорое нас интеерсует
и  свойство которое мы для него хотим найти.
например у доменного имени есть атрибут\свойство
такое как ип адрес.  мы укаызаем доменное имя
и название свойтва "ип адрес" и днс сервер нам
выдаст запись в которой будет указано наше
домнное имя и чему равен ип адрес или адреса
у этого доменного имени как элементы его свойств
или атрибутов.
как пишут в инетет днс это база ключ значение.
ключом является доменное имя и название свойства
вот какая задача у днс. а уж  какой обьект имеет
это доменое имя в физ природе это уже наше дело.
как правило доменное имя это текстовый идентификатор
сервера в IP сети. или это текстовый идентификатор
веб сайта. в любом случае доменное имя это текстовый
лейбел идентификатор какогото обьекта.



днс сервер это база данных.
база в стиле ключ значение.
она в себе хранит записи.
запись состоит из нескольких полей.
при запросе клиент указывает несколько полей
и они служат в качестве ключа. днс сервер
ищет эти записи либо у себя либо у других днс.
и возвращает эту запись или если записей
несколько то несколько записи клиенту.


основным предметом который хранится внутри
записи это доменное имя и значение.
тип записи назначает класс к которому принадле
жит значение. тоесть тип-А означает что в этой
записи можно хранить толко ип адрес.

база днс это база доменных имен. 
свойств может быть много.
так вот каждая запись в себе несет инфо о домене
и об его каком то одном (из множества) свойств.


что такое домен
домен у нас вобщем то это текст  вида


 ааа.bbbb.ffff.tttt.ffff.tyyy.uuuu.


в общем виде это хрень имеет вид

 *.

важно то что самый правый символ это всегда
точка. а слева у нас  уже любые символы в том числе
и другие точки (ну не совсем любые символы но 
похер). в домене две точки не могут стоять подряд.
тоесть множстево доменных имен это множество
всевозможных хреней которые вкаладываются в шаблон

        *.



это множество всевозможных значений оно не хранится
на одном сервере. вся база всевозможных значений
она разбита на куски на много серверов.
вобще то эта база разбита на зоны. зона это 
обычный файл на диске. внутри зоны записи
набиваются не от балды а на основе закона шаблона
имен. сами зоны могут сидеть как на одном сервере
так и на разных. тость оодин серер может хостить
у себя много зон.

зоны разбиты по иерархическому способу. 

положим у нас есть зона vasya.ru
это значит что внутри этого файла можно
дбавлять только записи  с имнами по шаблону

  (*.)...(*.)(*.)vasya.ru

я могу из этого множества выделить субножстево
записей и засунуть из в другую зону. полуичм
имерархию

   vasya.ru  (отдельный файл зоны)
    \
     \
      \
       kuku.vasya.ru (отдельный файл зоны)
        \
         \
          \
           ab.kuku.vasya.ru (отдельный файл зоны)


таким образом у нас три зоны, три файла.
чем ниже файл тем меньшее множество из исходного
он всебя включает. 


итак домен это некоторое слово вот такого вида

  re.er.geer.er.g.er.rr.g.g.g.eb.er.eb.erer.er.


у него самый правый сивол это точка. 
а левее него любые символы в том числе и точки
единственное что нельзя чтобы две точки стояли
рядом подряд.

нахуй нам нужен этот домен. например домен
можно испольовать как идентификтор сервера в сети.
тоесть помнить какой у сервера ИП это сложно
а вот понмить какой у сервера домен нейм это 
уже легко. например мы говрим что такойто сервер
имеет доменное имя 

   vasya.ru.


в браузерах эти суки убрали точку на конце
поэтому она реежет глаз. 


итак домены удобноиползовать для индентаиции 
компов с точки зрения памяи человекка в отлиии
от ип адреса


и вот эти домены или имена доменов мы будем
хранить на на серверах. но мы будем хрнить непросто
только имена доменов а еще и их свойства.
тоесть если у нас ест домен

 vasya.ru.

то у него еще может быть куча свойств чисто 
в математчиеском смысле. если домен это обьект
то у него могут быть свойства.  например у него
может быть свойства ип адрес 

     1.1.1.1


также можно использовать домен для того чтобы 
обозначать не отдельный комп а группу компов.
скажем каждый комп имеет ип тогда если они 
входя у в условную группу vasya.ru то получается
что у нас домен имеет вот такие свойства


 vasya.ru. ( 1.1.1.1, 2.2.2.2, 3.3.3.3 )

также например домен может иметь в своем свойстве
другой домен 

  vasya.ru. (petya.ru.)


если мы введем доп идентификатор который будет 
кодировать какоето определнное своствао.
например  идентификатор  А кодирует свойство
ип адрес тогда мы можем вот так записать


  vasya.ru.      A   1.1.1.1
  vasya.ru.      A   2.2.2.2
  vasya.ru.      A   3.3.3.3


тоесть домен vasya.ru имеет у себя три свойства
одного типа , тип это ип адрес


есть кодификатор другого своства это MX
он обозначает доменное имя для почтовго сервера


  vasya.ru.      MX  petya.ru.


и таких типов свойства их дохрена - SRV NS TXT итд


теперь мы можем на основе этого создавать записи

запись в себе как раз содержит


имя_домена  TTL  IN     ТИП     ЗНАЧЕНИЕ


TTL пока не буду оббяснять значение этого поля.
IN это считай как некая константа

остальные поля я обьяснил.

так вот доменный сервер он внутри себя
хранит такого вида записи. тоесть 
инфомрацию о доменных именах и их разнобрзных
свойствах

возьмем днс сервер и внури него хранися адовая
туча таких записей. так вот эти записи они 
разиавются на кучки. кажлая кучка хранися
в отдельном файле на диске и назыаеся ЗОНА ZONE


записи в одной зоне имеют общее свойство - 
они все имеют одинаковое поле ИМЯ, поэтому
при создании зоны мы указаыаем для какого домена
она создаетя  чтоы было понятно чему внутри
файла должно быть равно поле ИМЯ у записей

например зона для домена vasya.ru.

значит внутри этого файла будут собраны
записи вот такого вида


 vasya.ru.   TTL IN   A  ...
 vasya.ru.   TTL IN   A  ...
 vasya.ru.   TTL IN   NS  ...
 vasya.ru.   TTL IN   NS  ...
 vasya.ru.   TTL IN   MX ...
 vasya.ru.   TTL IN   TXT  ...


в одной зоне не может быть двух соврещенно
одинаковых записей по всем полям. но если
хотя бы одно поле другое то нет проблем.
на практике это дает то что у нас спокойно 
может быть несколко записей вида


 vasya.ru.   TTL IN   A  ...
 vasya.ru.   TTL IN   A  ...
 vasya.ru.   TTL IN   A  ...
 vasya.ru.   TTL IN   A  ...


главное чтобы у них послденее поле ЗНАЧЕНИЕ было
у всех разное

при запросе от клиента к серверу он указывает
имя которое надо найти, и тип.  наоснове этого
ключа днс сервер ищет записи.

когда я сказал что внуири зоны записи имеют
одно и тоже имя это частично вранье.
на самом деле внутри зоны vasya.ru 
записи могут иметь вид более широкий чем точное
совпадение с vasya.ru. а именно 
они подчиняются щаблону

   (*.)vasya.ru.

тоесть эти записи имеют либо имя в виде

  vasya.ru

либо в виде

  be.er.er.b.ew.be.br.eb.erew.ber.e.b.vasya.ru

если левее v у нас есть символ то это точка
и левее нее уже символы. а если левее v нет символа
то там пусто

вот такого имени домена не может быть
не то что в файле зоны а вообще

  .vasya.ru

если у нас стоит точка 
у нас толко домен с именем "." валиден как
исключение . тоест у нас стоит точка а левее нее
нет нихуя

итак получается если  у нас на сервере две зоны
одна имеет имя  vasya.ru а вторая petya.ru
то внутри первой у нас идут записи с именем
по шаблону

   (*.)vasya.ru.

а во второй зоне собраны записи по шаблону

   (*.)petya.ru.

таким образом у нас имя зоны отражает ту часть
в имени записи внутри файла которая у него точно
есть. но она может быть и длиннее

тоесть мы берем любое доменное имя из башки

 dsfsd.sdf.sd.fsd.fs.df.sf.sfd.

и тогда можем на основе него создать зону
в котрой мы будем группировать все записи 
подчиняющиеся щаблону

 (*.)dsfsd.sdf.sd.fsd.fs.df.sf.sfd.


потом решили что хранить все записи всех доменов
на одном компе это миссия невыполнима.
значит нужно всю базу записей раскидать 
по куче серверов. 

сервер может хранить записи минимально в размере
одной зоны. тоесть серверу дозволяется отвечать
минимум за одну или несколько зон.


зоны как я показал выше образуют  
иерархию относиетельно зоны "."
все остальные зоны являются ее кусочками
подмножсетвами.

зоны хранятся на серверах.
адреса днс серров которые хранят 
адреса сервров который хранят зону "." вшиваются на компы в виде списка ип адресов. 
поэтому проблемы с поиском где начинать
поиск нет


  . (файл зоны ".")(сервер1)
  \
   \
   vasya.ru  (файл зоны vasya.ru)(сервер2)
    \
     \
      \
       kuku.vasya.ru (аналогично)(сервер3)
        \
         \
          \
           ab.kuku.vasya.ru (аналогично)(сервер4)




в более верхней зоне пропсиыывается 
какая субзона из него эксрактирована и на какой
сервер она сохранена. таким образом зона на 
сервере1 задает какой именно сервер2 и какую
субзону ему разрешено хостить.
в свою очередь сервер2 его файл зоны имеет
власть у себя в файле зоны написать какую 
субзону уже его зоны он разрешает из себя
экстрактировать и какому серверу3 этот экстракт
хранить


напомню что имя зоны это тот шаблон в имени
записи который может содрежться в данной зоне.
зона "." означает что в ее файле мгогут быть 
записи по шаблону

 *.

в теории 
это самый широкий шаблон. ему удосвлтетворяют
все доменные имена. но! как раз по приколу то 
чтоо обычно чем болеее формально широка зона
тем в ней по факту меньше запсыают записей.
в частности потому что чем шире (выше) зона
тем чаще к ней идут обращения потому ее лучше
деражть с небольшим число айтемов.
а чем ниже зона тем у нее шаблон уже но там 
уже по факту дохрена айтемов.

как выглядит поиск скажем записи 
в упрощенном виде

12.ab.kuku.vasya.ru  IN  A

мы обращаеся на коренвой днс и спрашиваем у него
ип адрес от днс сервера2 где хранится зона
.ru , заходим туда и узнаем ип от днс сервера
гда хранится зона kuku.vasya.ru
заодим туда и справшиваем где находится 
ип от сервера который хостит зону ab.kuku.vasya.ru
заходим на него и там уже заппршвиваем в его
файле зоны 
саму запись 


12.ab.kuku.vasya.ru  IN  A


которая на нем хостится


поиск записи похож на поиск файла на обычной
фс , когда мы идем в зарнее изветную иноду=3
где хранится папка корень. там в списке дентри
ищем папку верхнео уровня. находим. читаем ее иноде.
идем в ту иноду. там ищем в списке очреенюу папку
. находим смотиим ее иноду. в конце конуов 
мы добираеся до папки в которой лежит файл.
находим в спаике имя файла и читаем его иноду.
и идем в эту индоу.

имена папок похожи на имена днс серверов.
их иноды похожи на ип этих серверов.
конечная запись похожа на иноду файла.

итак получается что ип адрес коревноо сервера
я знаю. 
а адрес сервера более нижнего уровня я узнаю
от текущего сервера

сервер1 -- сервер2 -- сервер3 -- сервер4 

тоесть каждый сервер знает где искать 
следующий сервер
правда тут несколько более сложно о том как 
сидя на текущем сервере найти следущий. при более
простой архитектуре было бы вот как . мой текущий
сервер знает ип нижележащего. так вот это не соввсем
так. текущий сервер всегда знает ДНС ИМЯ нижележащего
сервера а вот на счет ИП адреса ебала. 
точнее так. вот у нас есть сервер1 на котором
мы сидим в зоне1 И В ЭТОЙ ЗОНЕ прописано какое 
ДОМЕННОЕ ИМЯ имеет сервер на котором лежит зона2
которая является экстрактом части зоны1
этим я хотел выразить что не сервера знаю друг 
о друге а зоны знаю о друг о друге

так вот в одной зоне прописано на каком днс
сервере лежит ее дочерняя зона. прописано это 
в формет того что указано доменное имя сервера 
который хостит дочернюю зону. 

например зона "." имеет в себе запись
  
    net.    IN     NS    l.gtld-servers.net.


таким образом мы знаем ип серера который
хостит зону ".", мы к нему обратились и из 
записей в его зоне мы знаем  доменное имя
сервера который хостит у себя зону "net."
(которя явлется вырезкой из зоны ".")

дочерняя зона называется делегированная зона.
таким образом если у нас есть файл зоны.
и если из этой зоны у нас сделано делегирование
тоесть вырезка части записей вынесена в отдельный
файл в отдеьную зону то мы из текущего файла
всегда имеем информацию  о том на каком сервере
хранится эта делегированная зона. но! проблема в
том что нам для фактической связи с этим сервером
днс имя ни пришей ни пристебай! нам нужен ип
адрес!

и вот тут начинается проблема! проблема достоаночно
обьемная.  значит файл зоны как я уже сказал
всегда содержит доменное имя сревера на котором
лежит дочерняя зона. но далеко не всегда содержит
ип сервера на котором лежит дочерняя зона.  а нам
для связи нужен именно ип! нам по большому счету
доменное имя нафиг не сдалось! и если зона не содержит
ип адрес то нужно экстра усилия чтобы его найти!
почему ип адреса в зоне может не быть? потому что 
ип адрес хранится в зоне как и все что хранится  в
зоне в форме записи  а не просто в форме голого
ип адреса. ип адрес хранится в форме записи тип-А


 ns1.vasya.ru.    IN    A  2.2.2.2


итак ип хранися в таблице в форме записи.
как я уже сказал запись от том что часть записей
делегирована в другой файл имеет вид


 www.vasya.ru.   IN    NS  ns.rt.net

слева у нас закодировано какие записи из данной
зоны исключены . справа указано где их искать
на каком сервере в виде его доменного имени

в данном случае эта запись говорит о том что 
записи которые удовлетворяют  шаблону


   (*).www.vasya.ru.

из данной зоню исключены. их тут быть не может 
и не должно. 
тоесть это записи с именами вида

   123.www.vasya.ru.
   kuku.www.vasya.ru.
   ab.bc.cd.www.vasya.ru.

итп
и в том числе это запись с именем

  www.vasya.ru.

записи с таким именем в этой зоне быть недолжно.
ПОДОЖДИТЕ! но ведь под это запрещающее правило
подпадает наше правило о делегировании!!!

 www.vasya.ru.   IN    NS  ns.rt.net

она сама же подпадает под это правило а значит 
его нарушает! этож пиздец! это дейсивтельно так
и для этой записи вводится исключение!
здесь важно вот что сказать. у нас зона может
в себе хостить только строго тот сервер которому
это разрешено. сервер не может сам по себе выбирать
какую зону ему хостить. ему это право может дать 
только днс сервер какойто другой путем того что 
тот днс сервер уже имеет право хостиьт какую то
зону и он нашему днс сереру может выдать право
хостить часть его записей, тоесть свою подзону.
если нам другой днс сервер дал право хостить зону
то это называется что наш сервер имеет АФОРИТИ 
для такойто зоны. наш сервер авторитивный для такойто
зоны. как это выглядит на практике. в америка
есть корневые днс сервера у которых есть право
хостить зону "."
они высшая форма днс власти.
они выдали другой группе серверов хостить вот 
такие субзоны как 

   com.
   net.
   ru.
   lt.
   pl.
   biz.

итд.
эти сервера называются TLD серверами 
их назвывают днс сервера для доменов второго 
уровня
они в свою очередь каждый берет свою зону
и делегиурет из нее часть записей другим
группам серверов наример
сервер который авторитвиный для зоны "ru."
дает другому серверу право хостить субзону "vasya.ru."
другому дает право хостить субзону "petya.ru."
таким образом тот сервер которому другой сервер
дал право хостить зону назвыается авторитивным 
для этой зоны. 

поэтому слово данный сервер1 авторитивный для
зона-А означает что серверу1 дал право другой
сервер0 на то чтобы сервер1 у себя хранил на диске
зону-А только он имеет право ее хранить. другие
днс сервера неимеют право ее хранить. только
у сервера1 имеется 100% достоверная копия зоны-А
только если у этого сервера мы делаем запрос к 
записям домена зоны-А мы получим достоверный ответ.

как физически происходит передача власти афорити
от одного сервера другому. как я уже выше написал
это делается через днс запись внутри файла зоны
в которой мы пропсиыаем какую субзоны данной
зоны мы пердаем на какой днс сервер (через указание
его доменного имени). например мы в файле зоны "."
на сервере который автортивен ее хранить делаем
запись 


  ru.   IN    NS  ns.rt.net

таким образом коренвой днс сервер дал власть чтобы
сервер с именем ns.rt.net мог хранится у себя
зону "ru."


   "."  (корневой днс сервер)
    \
     \
      \
       'ru.' (другой днс сервер ns.rt.net)


этот сервер ns.rt.net имеет власть часть записей
из выданной ему в ведение таблицы отдать другим
серверам . например в его файле зоны есть вот
такие две записи


  vasya.ru.   IN    NS  ns1.kuku.net
  petya.ru.   IN    NS  ns.lala.net


таким образом у нас серверу ns1.kuku.net дана
власть со стороны сервера ns.rt.net чтобы он 
всебе хостил записи для зоны vasya.ru
получаем схему


   "."  (корневой днс сервер)
    \
     \
      \
       'ru.' (другой днс сервер ns.rt.net)
       /   \
      /     \
     /       \
petya.ru     'vasya.ru.' (ns1.kuku.net)
(ns.lala.net)


что мешает рандомному серверу у себя хранить 
какую угодно зону и таким образом  представлять 
в сеть лживую информацию не спрашивая никого о том
какую зону ему у себя хранить?

если мы берем юзер
комп и наш юзер комп хочет получить достоверную
настоящую запись для именем домена vasya.ru
то мы  днс клиенту укаызаем на какой ип
днс сервер нужно обращаться в первую очередь. тут наша отвесвтенность лежит чтобы не использовать лживый днс сервер.
это обычно гугл 8.8.8.8 или клаудфлее 1.1.1.1 
днс сервер.  запрос от клиента удетает туда.
на тех днс серверах вшит в виде ип адресов таблица
корневых днс серверов. те котрые уполномочили сами
себя держать автортивную копию зоны "." 
поэтому они обращаются по ип на корневой днс
сервер и тот им сообщает доменное имя ns.rt.net автортивного сервера которому кореневой днс
дал право отвечать за достоверность и хранить
записи зоны "ru."
наш гул днс сервер обращается к  ns.rt.net (как 
он узнает его ип это дальше поговорим) и 
спрашивает у него посмтреь в его файле зоны
о том какое днс имя имеет сервер которому данный
сервер выдал право отвечасть за достоверность
и хранить записи для зоны "vasy.ru"
сервер ns.rt.net смотрит в файл своей автортивной
зоны и видит что этот сервер имеет имя ns1.kuku.net
и сообщает об этом гугл днс серверу. тот 
неважно как узнает его ип и обращается к нему.
и говорит - посмтрит в своем файле зоны "vasya.ru"
такую то запись с именем vasya.ru , тот вовзращает
ответ в гугл днс сервер. а гугл днс срвер наконец
то вовзращает ответ днс клиенту нашего компа.

так вдумаемся в эту схему в этот алгоритм.
если у меня есть сервер с белым ип адресом и 
я наего поставлю бинд. и там создам зону 
для некоторого домена например домена vasya.ru
то это ничего недаст вплане того чтобы клиенты
из интернета попадали на мой днс сервер с запросами
для домена vasya.ru потому что эти клиенты
(или их днс сервера) никогда и никак не узнают
что для таких запросов нужно обоащаться имннно
к моему днс серверу. они об этом никак узнать не 
смогут!


   "."  (корневой днс сервер)
    \
     \
      \
       'ru.' (другой днс сервер ns.rt.net)
       /   \
      /     \
     /       \
petya.ru     'vasya.ru.' (ns1.kuku.net)
(ns.lala.net)



                 ?'vasya.ru' мой сервер?


поэтому мой сервер может создать у себя какие угодно
зоны но в них никто и никогда с запросом
для этих зон не придет. 
чтобы на мой днс сервер ктото стал приходить это
нужно чтобы инфо о моем днс сервере была размещена
зарегестрирована прописана на днс сервере который
входит в офциальную иераорхию днс серверов который
будет согласен делегировать часть своих записей
(тоесть какйото домен и его поддомены) моему серверу
только там клиенты и другие днс сервера узнают
о существоаии моего днс серевера и только так
днс запросы по какимто доменам начнут попдать в мой
днс сервер

вот что значит афорити. вот что значит сервер 
автортивен за какую то зону. 

вот что значит сервер такойто автортивен за такуюто
зону - значит ему один из днс срверов входящий
в иерархию днс серверов созданную коренвым днс
серврмми дал право хостить у себя часть записей 
из его зоны право на хостинг которой ему дал 
другой днс сервер из этой иерархии

авторттивность я обьяснил.
автортивность данного сервера по такойто 
зоне достигается путем того что другой днс
сервер  в своей автортивной зоне (которая более
широка) сделал делегирующую запись  - запист о 
делеигировании которая передает право нашему
серверу хостить у себя автортивно субзону данной
зоны. 

как я уже скзал выше вот у нас ест сервер ns.rt.net
который автортивнен за зону "ru."
и в его зоне есть делегиурющая запись

  vasya.ru.   IN    NS  ns1.kuku.net

которая предает право хостить субзону 'vasya.ru'
серверу  ns1.kuku.net


итак автортивность и делегироваие  я пояснил.

из всей это схемы есть один важный неосвященный
вопрос - как я уже скзаал остается неосвящыенным
то как доменное имя сервера полученное нами
из ответа днс сервера превращается в его ип адрес.
потому что нам нужен именно ип адрес.
как я уже скзаал в файле зоны указана ифнормация
о днс сервере который хостит дочернюю субзону
в не в форме ип а в форме доменного имени


  vasya.ru.   IN    NS  ns1.kuku.net


это хоорошо но мало что дает с точки зрения
связи с этим сервером.

для начала я вот начем сфокусируюсь. как уже 
скзаал вот у нас есть автортиная зона на сервере.
тоесть наш сервер имеет право у себя ее держать.
также он за нее отвечает. и система днс так
утсроена что только к нему будут прилетать запросы
по этой зоне если люди хотят узнать именно 
100% достоверную инфо о записях этой зоны.
да другие серера могут запрашивать отслюда записи
потом их у себя кешировать а другие клиенты могут
тогда из тех сервров ситывать наши записи из 
того кеша. но это все в целом фигня. еинсвтенный исто
чник 100% доствоерной инфо об заисях этой зоны
это толко наш авторитиный сревер.
итак у нас есть срвере и на нем есть автортинвая
зона. первый важный момент - зона имеет правило
о том каеие записи в ней могу содержаться.
например если у нас зона vasya.ru то в ней
могут содержаться олько записи  с иемнем 

  vasya.ru

или его субдомены

тесть валидные записи должны удовлетворять шаблону

 (*.)vasya.ru

и это жесткое нерущимое правило
если я запишу в файл зоны наример запист


petya.ru     IN   A    1.2.2.2

то бинд при считвании этого файла в памят пошлет нас
нахер и эту запись проигнорирует. ей запрещено тут
быть.

если у нас авотортивная зона то логично предположить
что все записи внутри нее автортивные. но это 
к соажлению нетак.

если у нас в файле зоны есть делегирующая запись
то по своей физ природе она гвоорит бинд 
серверу что часть записей этой зоны наша зона
из себя исключает и передает эти записи на управление
в другую зону возможно на другой сервер.
и так получается что этим самым эта запись сама
себя автоатом заносится в записи коооторых быть 
в этой зоне не должно 
пример

зона ru.
в ней делегирующая запись

  vasya.ru.   IN    NS  ns1.kuku.net

она сообщает что из данной зоны исключается 
выборка записей по шаблону (*.)vasya.ru
и при этом получается что сама эта делегиурю
щая запись себя помещает в исключенные. однако
она присутвует в этой зоне. ей разершено присутсовать
в качестве исключения из этого правила. 
замечу что при этом эта запись не противрочит
более общему и жесктому без исключений о том что 
если у нас зона "ru." значит внуртри мтолько могут
быть записи с именем по шаблону 

   (*.)ru.

очевидно что имя vasya.ru. поаадает в шаблон (*.)ru.
так что в этом плане все окей.

еще раз посмтрим на зону "ru."

зона "ru." :

  vasya.ru.   IN    NS  ns1.kuku.net


посколку мы тут указали что записи для домена
vasya.ru лежат на сервере ns1.kuku.net в отдельной
зоне , тут важно понимать что не так важно что 
оно лежит на отдельном сервере как то что делегирую
щая запис укзывает что указныне запииси лежат в 
отденой зоне тоесть вне данной зоны. то это 
значит что автортивиные подлинные записи для 
домена vasya.ru. лежат точно не здесь. это автоматом
означает что данная запись

  vasya.ru.   IN    NS  ns1.kuku.net

находясь в данной зоне ( наданном сервере) НЕЯВЛЕТСЯ
автортивной в этой зоне. не является 100% подлинной.
скорее всего она подлинная. но это скоре всего.
подлинная запись хранися на сервере ns1.kuku.net
мы длжны пойти туда. сделать запрос об этой 
записи и то то мы полуичим будет подлинно автортивно.
а здесь как бы хранится КОПИЯ той подлинной записи
причем строго говоря неизвестно совпадает ли эта
копия с истинной записью или нет. это есть 
смысл фразы что данная запись в данной зоне 
неавтортивна. 
поэтому в автортивной зоне в порядке исключения
могу быть неавтортивыне записи подлинные копии
которых хранятся в другой зоне которую мы делегировали.
тоесть такой странный эффект(наличие неавтортиынех
записей в автортивной зоне) появлыется из за дебилно
го механизма задания делегирования субзоны из 
более широкой зоны.

таким образом я осветил что значит неавтортиная
запись и откуда она беертся в автортивной зоне.

у сервера днс есть олкалные файлы в которых хрантся
зоны которые ему переданы на хостинг то ест автори
тивные. у него также есть кеш в котором он
хранит те записи которые получил от других днс 
серверов.  так вот клиент когда делает запрс
к днс серверу (в нем указано рекурсиный ли он 
или итератиный об этом ищи отделно потому что это
влияет какие записи и как их искать серверу для овета)
то если сервер возвращает в ответе запись то он 
также выставляет или не выставляет в ответе флаг АА
который сигнализиурует клиенту о том является ли 
данная запись автортивной или не автортивной. 
поэтому я хотел осветить вопрос об значении 
смысла фраза автортивная запись или не автортиная.

теперь когда эти важные моменты освещены.
я возвращаюсь к вопросу как нам узнать ип
адрес днс сервера если пока что мы знаем только 
его днс имя. (днс имя и доменное имя походу это
одно и тоже).

значит мы каким макаром попали на сервер 
который автортивен для зоны "ru."
и вот как она выглядит


зона "ru." :

  vasya.ru.   IN    NS  ns1.kuku.net.

в ней указано через делегирующую неавторитивную
запись что записи зоны vasya.ru  автортивно хранятся
на сервере  с именем ns1.kuku.net
как нам узнать его ип.

для этого нам нужно пойти на корневой сервер
и там узнать какой днс имя у сервера который
хостит зону "net." потом нам нужно както 
узнать какой ип у этого сервера. тоесть опять 
нам нужно узнавать ип какогото левого сервера
непонятно как потому что на корневом сервере
есть 100% днс имя серера который хостит зону 
"net." а на счет его ип адреса это еще вопрос.

значит почему бы не разметить ип адрес
нужного нам днс сервера прям сразу вэтой же
зоне

зона "ru." :

  vasya.ru.      IN    NS  ns1.kuku.net.
  ns1.kuku.net.  IN    A   2.3.3.4

но так нельзя никак. потому что хотя запись
 vasya.ru.      IN    NS  ns1.kuku.net.
неавторитивна но ответчает главному правилу 
размещения записей записей внутри зоны что 
запись должня в поле имя отвечать шаблону

     (*.)ru.

тоесть vasya.ru подпадает под шаблон (*.)ru.
а вот запись с именем ns1.kuku.net. никак под
шаблон (*.)ru. не подпадает. дейвсвтиеиетльно 
имя ns1.kuku.net. должно как минимум заканчиваться
на .ru а этого нет. поэтому как бы мы не хотели
мы неможем разместиь запист с ип в эту зону.

ксатти ограние на домен  в имени (*.)ru.

  vasya.ru.      IN    NS  ns1.kuku.net.


касается только поля имя у записи а что там в поле
значение вобще пофиг. 

итак я обяснил почему в этой зоне


зона "ru." :

  vasya.ru.      IN    NS  ns1.kuku.net.


нельщя померить запсись про ип для этого днс
сервера.


но есть ситуации попроще когда можно!
напрмиер 


зона "ru." :

  vasya.ru.      IN    NS  kuku.ru.


указано что днс сервер на котором хостится запииси
для делегированного домена vasya.ru размещены
автортивно на сервере с днс именем kuku.ru
в этом случае имя kuku.ru подпадает под шаблон
разершенных имен для зоны ru то есть под шаблон (*.)ru.
это знчит что мы можем спокойно и прерасно разместить
в этой зоне запист


зона "ru." :

  vasya.ru.      IN    NS  kuku.ru.
  kuku.ru.       IN    A   4.5.6.7


в этой ситации все отлично. мы зашли на сервер
который овтечает за зону "ru." и узнаем днс
имя сервера которйы овтечает за зону vasya.ru
и тут же следущим запросом к этому же серверу
мы узнаем ип для сервера kuku.ru. 
все отлично! (на саомом деле мы узнаем и днс
имя и ип за один запрос а не за два но это уже 
детали)


а что если такой вариант

зона "ru." :

  vasya.ru.      IN    NS  ns1.vasya.ru.


в этом случае доменное имя днс сервера ns1.vasya.ru.
оно подападает под основное правило для имен
записей внутри зоны потому что 

ns1.vasya.ru. удовлятворяет шаблону (*.)ru.

поэтому мы можем разметстть в зоне эту запись


зона "ru." :

  vasya.ru.        IN    NS  ns1.vasya.ru.
  ns1.vasya.ru.    IN    A    6.7.8.9

но! надо отметить что так как согласно первой
строке  у нас из данной зоны формально исключены
все записи из шаблона (*.)vasya.ru то вобщето
говорят имя ns1.vasya.ru. подходит под этот 
запрос ровно как и первая строка тоже. поэтому
вторая запись она неавтортивная для этой зоны.
и она размещается в ней тоже в порядке исключения.
если ее запросить с этого сервера то сервер ее 
одаст но без флага АА
зато мы если зайдем на этот сервер то мы узнаем
не только  домнное имя ns1.vasya.ru. но и 
его ип. что круто.

а что было был если бы мы ип не разместили 
в этой зоне а была бы безвыходная ситация. 
потому что нам нужно попасть на сервер ns1.vasya.ru.
но чтобы до него достучаться нам нужен ип
а автортинвая запись  которая содержит его ип
хранится тлько на этом сервере. поэтому мы вынуж
дены на нашем сервере в нашей зоне хранит 
неавтортивную (то есть копию записи которая не 
факт что достверная) запись с его ип.

получается также интересный момен. 
именно сервер который хостит зону "ru." он решает
он задает какое доменное имя обязан иметь 
сервер которому он отдает во владение зону vasya.ru
тоесть вот эту строку

  vasya.ru.        IN    NS  ns1.vasya.ru.

задаем опрееделяет чему она равна именно
сервер который хостит зону "ru."

а вторая строка ну формально тоже ее определяет
чему она равна этот же сервер

  ns1.vasya.ru.    IN    A    6.7.8.9


но по факту чему она равна зависит от того 
какой ип имеет тот делегированный днс сервер.

ну тоесть это как выглядит. вот я владеделц
днс сервера котооый хсостит зону "ru."
я решаю что я отдам субзону vasya.ru. на упоавление
другому серверу. тогда я сам решаю и сам говрю
что  я ее отадм на управление серере с 
именем 


   ns1.vasya.ru.

и делаю запись в моей зоне



  vasya.ru.        IN    NS  ns1.vasya.ru.


потому я нахожу человека который имеет сервер 
и хочет хостит эту субзону. и я у него спрашиваю
чему равен его ип. он говорит 7.8.9.10
тогда я на освно этой инфо вношу  у себя вот
эту строку

  ns1.vasya.ru.    IN    A    7.8.9.10

а ему говорю что чобы когда он будет у себя
создавать файл зоны для vasya.ru 
что он там вписал именно вот эту запись

  vasya.ru.        IN    NS  ns1.vasya.ru.


хотя можно и подругму это трактовать.
так как все решаю я. потому что клиент будет
искаь инфо  о делегирующем днс сервере имено
на моем компе то я могу сам создать две 
записи


зона "ru." :

  vasya.ru.        IN    NS  ns1.vasya.ru.
  ns1.vasya.ru.    IN    A    6.7.8.9


а потом владеьльце сервера навязать чтобы
он на своем сервере изменил ип на 6.7.8.9
потому что если я поменяю на совем сервере
ип то система сразу имзенится. тоесть еси
я сделаю

зона "ru." :

  vasya.ru.        IN    NS  ns1.vasya.ru.
  ns1.vasya.ru.    IN    A    8.9.10.11

то запросы от клиентов сразу полетят на 8.9.10.11
а если чувак на своем сервер изменит ип
сервера то он просто сам себя отрежет от днс
иерархии

что смешно и забавно - форально запис в моей 
зоне


  vasya.ru.        IN    NS  ns1.vasya.ru.
  ns1.vasya.ru.    IN    A    8.9.10.11


не является автортитетными истинными. это вообще
может быть фуфло. тоесть первая строка она не
авторитетная но именно она задает доменное имя
для авториттетного сервера. 
вторая строка тоже неавториитетная. 
ибо автортетные записи хрантся в другом месте.
но именно это неавтиреитыные фуфловые записи
определяют как все будет работать.
по мне это супер насмешка в архитеткуре.
недостоверные записи задают где лежат достоверные.
но это стиль архиткектуры днс. противрочит самой 
себе.


таким образом если я попал на днс сервер и хочу
у него узнать ип адрес сервера который обслуживает
субзоны то 
возможно три варианта

вариант один

зона "ru." :

  vasya.ru.      IN    NS  kuku.ru.
  kuku.ru.       IN    A   4.5.6.7


когда днс сервер обслуживающий субзону имеет
имя коорое не принадлежит субзоне и в тоже время
принадлежит нашей зоне. тогда в нашей зоне
размешается автортиная запись с этим именем 
которая сдержит его ип 
и мы в итоге без прблем узнаем его ип. шикарно


вариант два

зона "ru." :

  vasya.ru.        IN    NS  ns1.vasya.ru.
  ns1.vasya.ru.    IN    A    8.9.10.11


когда у нас днс имя днс серера который хостит
субзону лежит в той субзоне. тогда в порядке
исключения в нашей зоне размешаеся неавтортиная
запись которая содержит его ип.
тоже в итоге мы сразу узнаем его ип. шикарно.
формально размещение этой записи незаконнно в этой
зоне. но нет выхода. без этого трюка вобще невможно
узнать его ип. такая запись назвыается GLUE 
запись. то есть вот это глю запись

  ns1.vasya.ru.    IN    A    8.9.10.11

а вот это делеирующая  запись

  vasya.ru.        IN    NS  ns1.vasya.ru.



вариант три 

зона "ru." :

  vasya.ru.        IN    NS   ns1.petya.net.


в данном случае мы из этой зоны не узнаем
ип нужного нам сервера. размещение записи которая
бы содержала ип нарушило бы железное правило что
имя записи должно быть доменом или субдоменом
зоны. а у нас ns1.petya.net. не явялется ни домном
ru. ни его субдоменом
в этом случае мы узнаем тлоко домен имя сервера
но не узнаем его ип. а ип мы будем искать путем
доп запросов. мы пойдем на корневой днс. 
там узнаем днс имя срвра который отвечает за 
зону "net."  потом исходя из того чему оно равно
мы узнаем его ип. потом мы пойдем на тот сервер.
узнаем доменное имя для днс сервера который хостит
хону petya.net. потом узнаем его ип. потом 
пойдем на него и тлоько на нем мы уже узнаем
чему равен ип для ns1.petya.net. и только потом
мы сможем на него попасть и уже узнать про те
записи которые мы хотим узнать для домена vasya.ru.



теперь  я думаю надо рассмотреть забористый 
живой пример

например я хочу узнать чему равна запись 

 bbc.co.uk.  IN     A  ????

тоест хочу узнать чему равен ип для этого домена.
прежде чем начать скажу что все доменные имена
на конце имеют точку  

   bbc.co.uk.

а то что вбразуере мы не ставим точку когда
мы укзываем в строке доменное имя  это преступление
со стороны браузера по факту она там должна быть.
кстати неавжно большая или маленкая буква в домене
уазана тоесть вот это считается одно и тоже
доменное имя

   bbc.co.uk.
   BBC.cO.uK.

по мне это лютый прикол. потому что байт код 
этих тектов совщерешенно разный. хотя понятно
что это защита от дурака. чтоб не было миллиона
разных типа доменных имен вида

  bank.ru
  Bank.ru
  bAnk.RU

это был бы ад если бы это все счиалось разные
жоменные имена.

теперь про инетрналмы файла зоны для бинда.
в нем если точка на конце не указано то это значит
что к этом доменому имени нужно бинду еще 
присобачить кусок домена. обычно это доменное
имя зоны. либо значене директивы бинда ORIGIN 
скажем если у нас зона vasya.ru
то я могу записать в файл зоны запист либо 
вот так

  www   IN   A 1.1.1.1

либо 

  www.vasya.ru.   IN A 1.1.1.1

во втором случае бинд понимает что я указал
доменное имя целиком. а в первом случае я указал 
кусок доменного имени предлагая бинду налету
к нему присобачить vasya.ru.

кстати так назымвыеый FDQN = fully qualified 
domain name - по мне это полная хуйя. есть 
либо доменное имя либо не доменное. нет никаких
частично доменных имен. тоест нет никаких 
notfully qualified domain name. тоесть здесь
тоже на пустом месте запутывают  и ебут мозги

вот у нас в днс зоне записано

  host1.vasya.loc. IN  1.1.1.1

поэтому доменное имя для хоста это именно 
целиком host1.vasya.loc. но никак не host1
поэтому я не очень понимаю теперь смысл 
файла в линуксе /etc/hostname
с точки зрения днс у нас можеть быть визуаьно более
короктео доменное имя например host1.
но у него точка на конце. а без точки на конце это
водбще не доменное имя. это каато отделная хуйня
так я протестировал вот этот момент

# dig -4 @127.0.0.1   -t A "localhost."  +norecurse

; <<>> DiG 9.18.33-1~deb12u2-Debian <<>> -4 @127.0.0.1 -t A localhost. +norecurse
; (1 server found)
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 31342
;; flags: qr aa ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 2

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 1232
; COOKIE: 2281d53095e68e1f01000000683892c415caa3d9ffea2edc (good)
;; QUESTION SECTION:
;localhost.			IN	A

;; ANSWER SECTION:
localhost.		604800	IN	A	127.0.0.1

;; AUTHORITY SECTION:
localhost.		604800	IN	NS	localhost.

;; ADDITIONAL SECTION:
localhost.		604800	IN	AAAA	::1

;; Query time: 0 msec
;; SERVER: 127.0.0.1#53(127.0.0.1) (UDP)
;; WHEN: Thu May 29 13:00:52 EDT 2025
;; MSG SIZE  rcvd: 124



из чего я делаю вывод что нет никакого
localhost а есть только localhost.
и это доменное имя. просто оно хранится не 
на днс сервер каком бы то ни было а оно
хранится в файле /etc/hosts на компе юзера
и локальный днс клиент который ксатти по сути
является днс сервером  так настроен чтобы
при запросе по этому доменному имени он нелез
на внешний днс сервер а лез в этот файл. 
который выступает  в роли хранилища не для 
авторивной зоны но как хранилище для некоторых
автортивых записей

заавно то что файл /etc/hosts по сути это хранили
ще автотивных записей. это почти что аналог 
файла зоны. просто в зоне у нас записи должны
принадлежать одному крупному домену а в файле
hosts у нас записи могут быть с каких угодно
доменов .. ОООО!!! я понял у нас файл hosts это
как бы авторитивный файл КОРНЕВОЙ ЗОНЫ! которая
хранится на нашем компе. вот только фмрат у
него не совпдатет с форматом у бинда.
так вот я скажем в него сую запись

$ cat /etc/hosts
127.0.0.1	localhost
172.16.10.10	debian12-c1
172.16.10.11	debian12-c2

13.13.13.13	kuku.kuku.kuku.kuku.  (<=====)

кстати тееперь понятно почему в нем домнные
имена без точки на коцне! потому что если это
у нас файл зоны "." то типа если мы указали
доменное имя без точки значит к нему налету еще
надо добавить имя зону тоесть точку.
пэтому полный аналог этого файла вот такой


$ cat /etc/hosts
127.0.0.1	localhost.
172.16.10.10	debian12-c1.
172.16.10.11	debian12-c2.

13.13.13.13	kuku.kuku.kuku.kuku.


так вот я делаю через диг запрос и ищу
запись 

kuku.kuku.kuku.kuku.   IN   A ....



$ dig -4 @127.0.0.54  -t A "kuku.kuku.kuku.kuku."

;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 39904
;; flags: qr aa rd ra ad; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 65494
;; QUESTION SECTION:
;kuku.kuku.kuku.kuku.		IN	A

;; ANSWER SECTION:
kuku.kuku.kuku.kuku.	0	IN	A	13.13.13.13



значит мы видим что наш локальны днс сервер
тоесть systemd-resolved 
нам возвращает флаг АА тоесть что запись автори
тивная!!!
и саму запись

kuku.kuku.kuku.kuku.	0	IN	A	13.13.13.13

охренеть! я нконецто узнал истинное и глубинное
значение загадочного файла /etc/hosts.
он полуается рельно нам позволяет как бы
изменить зону "." на корневом днс сервере
через фокус на нашем компе
забавно что наш днс клиент (который по факту тот
же днс сервер) возвращает нашему приложению флаг АА
тоесть для приложения все выдяит так что запись
получена авторитивная. единсвтетнное что тут
служит опрааданием это то что мы при запросе
обращаеся не нареальный корневой днс сервер
а на днс сервер с адресом 127.0.0.54

dig -4 @127.0.0.54  -t A "kuku.kuku.kuku.kuku."

ну окей.это не корневой днс сервер. но то что
он возвращает флаг АА означает что якобы ему
вышележащий днс сервер выдал офорити на хостинг
корневой днс зоны. но так как корневая зона самая
высшая то ему никто это право выдать не мог.
он сам получается явялется корневым днс. сам
себя назанчил. ровно также как все остальные
корневые днс их никто не незначает. они сами
себя назначили ! а мы получается на нашем компе
к классическим корневым днс добавили еще один 
корневой днс. 
вобщем формально получается херня.
наш днс клиент он вначале обращается к 
корневому днс серверу нашего компа формально.
а если там ответа нет то он лезет уже на остальные
днс сервера в том числе настоящие корневые днс
сервера. 

получается с точки зрения днс киента нашего компа
есть две независимые системы днс. 
есть днс система нашего сервера которая 
хостится на базе файла /etc/hosts 
которая хости зону "." но эта зона на самом деле
это не так зона "." которая в интернете. это
другая независимая альтерантивная зона. более 
того она так как мы к ней первой лезем и так 
как она отезана от той зоны то она полуается более
авторитетная. 
а уж если в этой днс ссистеме нет записи
то тогда наш днс клиент уже обращается ко второй
запасной альтернативной днс сиситеме из интернета!

с точки зрения ответа днс клиаента нашему приложению
мы не заметим разницы. из какой днс системы 
получена запись. 
и там и там мы увидим флаг АА.

это опять же очень деьбиильно и путанно сделано.


еще что получается. у меня на компе есть
днс резолвер , днс клиент. по факту это днс
сервер. при любом запросе к нему он вначале
лезет в файл /etc/hosts
и если там находит запись то он ее отдает
моей программе с флагом АА
моя программа которая обращается к днс резолверу
она думает что она обращается к днс системе.
той самой днс системе которая в интернете. она
понятие неимеет что мой локальный днс сервер
не имееет никакого отношения к иерархии днс
серверов которая в интернете. если мой днс
ерзволер сразу лезеть в интернет то я получу
ответ от настоящего днс сервера.
а если мой днс резволер найдет ответ из файла
/etc/hosts то он его отдаст моей проге и она
понятия неимеет что данная запись ни из какого
ни интрнетера и что днс система из интрнета 
неимеет никакого отношения к этой записи
тоесть у меня на компе файл /etc/hosts это 
типа полная замена всей днс системе из интернета.
и резултат из этого файла это полностью аналогичная
по силе и достверности информация.
более того получается что локальная днс хрень
из /etc/hosts это еще более авторитетная щтука
чем вся днс система из интернета! потому что 
моя локальная днс хрень она никак не синхронизируется
с днс систмой из интернета. поэтому это более высшая
автортитетная система. а та что в интернете 
это запасная и менее авторттеттная!
моя локалная днс система она имеет как я понимаю
такие же правила для того чему равно доменное
имя. тоесть оно имеет шаблон

  (*.).

тоесть оно всегда закачниется справа на точку.
нельзя чтоб было в имени две точки рядом
нелья чтобы доменное имя имело точку слева кроме
домена "."

файл /etc/hosts получается это файл зоны "."
только эта не та корневая зона которая на днс
серерах интернета. это альтертиавная и независимая.
так же как у бинда для днс системы из интренета так
же и для зоны в /etc/hosts при указании домнного
имени можно укзывать полное имя через точку на 
конце либо частичное тогда днс резволер добавит
эту точку сам.
вот доказательство

# cat /etc/hosts
127.0.0.2	localhost.   (доменное имя с точкой)
127.0.0.1	localhost    (частичное доменное имя)


делаю запрос  к днс резолверу (ака локальный днс
сервер) и ищу запись с доменным именем 


         localhost.

тоесть я ищу запись 

   localhost.    IN    A  x.x.x.x.


$ dig -4 @127.0.0.54  -t A "localhost."

;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 25115
;; flags: qr aa rd ra ad; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 65494
;; QUESTION SECTION:
;localhost.			IN	A

;; ANSWER SECTION:
localhost.		0	IN	A	127.0.0.2
localhost.		0	IN	A	127.0.0.1



соотвстенно наш днс резволер нашей проге
возвращет флаг АА
тоесть записи авторитивные
и сами записи


localhost.		0	IN	A	127.0.0.2
localhost.		0	IN	A	127.0.0.1


вау!
это реально докзывает что мой локльный днс 
резволер типа обращается к локальному днс
серверу который явялется полной авльтернативой
все днс иераррхии в интренете. что этот лкальный
днс сервер он у себя хостит зону "." которая совер
шенно независимая от той же зоны в интренете.
что мой локлаьный днс сервер он самоавторитинвыный
тоесть он сам себя назначил авторитивным для
зоны "." все записи которые там есть считатся
автортивными.
то что файл /etc/hosts это зона "." потому что 
в файле зоны могут быть только записи для домена зоны
или его поддоменов. так как у меня в файле могут
быть асболютно все доменные имена это значит что
файл отвечает за корневую зону !!! и никакую 
другую.
также это знчит что тот самый localhost ко которому
мы так привыкли это самое что ни на есть полноценное
доменное имя только это localhost а это 


   localhost.

тоесть это полнцоенное доеменное имя первого уровня
получается. (по аналогии если vasya.ru это домен 
второго уровня. то видимо ru. это домен первого
уровня. а домен "." это домен нулевого уровня чтоли)
это аналог зоны для домена "ru."
кстаи домен это именно вся хрень целиком тоесть
sdf.sdf.s.d.sd.dsf.sd.ru
наколько я понимаю фраза домен такогото уровня
означает что доменное имя имеет столько то секций
между точками. тоесть vasya.ru у  нас одна точка
и между ними две секции. поэтому это домен второго
уровня. никаких уровней у доменых имен нету. это
чисто абстрактная абстракция. получается .ru  это
доменое имя первого уровня. возможно эти присоаба
чивание уровне связано с тем что обычно часто 
если доменное имя имеет столко то точек то это 
обычно значит что зона которая хранит запись с 
этим доменом делегирована серверу на третьей
глубине по отношеню к серверу где лежит 
корневая зона. напимер

         зона "." , уровень 0 (коренвой сервер)
          \
           \
            \
            зона "ru.", уровень 1 (другой сервер)
             \
              \
               \
              зона "vasya.ru", уровень 2 (еще сервер)


тоесть записи домена vasya.ru сидят на сервере
который находится "в двух переходах" от корневого

но это же необязательно всегда верно например.
я могу записи домена lll.kkk.vasya.ru хранить
в той же зоне что и vasya.ru и поэтому домен 
lll.kkk.vasya.ru будет тоже второго уровня. 
вобщем хер знает. откуда вся эта придумака про 
уровень домена


так я вовзращаюс к тому что днс резволер
он вначале обращется к локальнму днс серверу
который не входит в иерархию днс среверов из 
интернета. он сидит в своей совбственной иерархии.
и он автоитетен для зоны "."  у него она своя
независимая. записи которые он отдает локальному
резолверу он их помеачает что они все автортетные.
и ровно также резволер их отдает уже юзер
прожению с этим флагом.
по факту мой лкальный резволер это и есть этот
альртеранвттины авторитетный днс сервер. 
а тот днс который мы указцукем  в конфиге днс
резолвера это уже в терминах бинда явялется 
форвардер серварами!
по факту все сходится. мой днс резолвер это днс
сервер и он по факту не входит в иерархию днс
серверов из интренетера. все сходится


       юзер программа

          |  
          |   днс запрос
          \/

    systemd-resolved
    локальный днс 
    сервер
    авторттетный                         зона "."
    за зону "."                          /etc/hosts
    хостит зону в                         
    файле /etc/hosts      <---------->

         |
         |
         \/
     форвардер 1.1.1.1


поэтому все праварилно. у меня на компе рабоатет
днс сервер. который не входит в иерархию днс 
сревров интернета. он незавиимыый сам по себе.
он сам себ назначил автортетным за зону "."
хостит эту зону в файле /etc/hosts


есди запись там найдена то она возвращается
как авторттетная АА

а если она там ненайдена то тогда идет 
обарщение к форвардер днс сереру уже из интрнеенета
тоесть к тому днс серверу который входит в днс
иерархию интернета



получается днс сервер на моем компе он более
авторттный чем вся днс иерархия интенета. потому
что если запись у меня в /etc/hosts найена 
то она тутже возвращается этим сервером в приложение
да еще пометкой АА. а в интернет обращение неидет.

само приложение из ответа от днс резволвера 
понятия неимеет запись была найдена на локлаьном
днс сервере или в интернете.  для приложения 
это все едино и не разлоичимо.


если файл /etc/hosts это файл зоны "."
то фрмат у нее отличается от фрмата для файла
зоны в бинд. потому что в бинд фомрат записи идет
как

имя_домена   TTL  IN    ТИП    ЗНАЧЕНИЕ

а в файле /etc/hosts формат

IP    имя _домена


тоесть в нем только можно засунуть записи тип А


в днс системе интеернета там  в зоне "."
и в зоне "ru." там записей тип-А нет.
зато можно провернуть через наш /etc/hosts


 # cat /etc/hosts

   127.0.0.1	.
   127.0.0.1	ru.


делаем запрос днс из приложения


# dig -4 @127.0.0.54 -t A "."

;; flags: qr aa rd ra ad; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1


;; ANSWER SECTION:
.			0	IN	A	127.0.0.1




# dig -4 @127.0.0.54 -t A "ru."

;; flags: qr aa rd ra ad; QUERY: 1, ANSWER: 1, 

;; ANSWER SECTION:
ru.			0	IN	A	127.0.0.1


прикольно да?
тоесть в зоне "." и "ru." нет никакой 
сакральости. в них можно спокойно хостить
записи типа А. и сами эти доменные имена 
можно использовать для записей тип-А





кстати почему нет доменов вида
 *.a
 *.b
 *.c


ксати днс система похожа на ФС и папки и файлы
толко на фс фалйлы в папке могут иметь любое имя
а в днс только опреденное)




а теперь пример резолвинга для записи-А
и доменного имени bbc.co.uk.


раньше я говорил что зону может хостит 
только один сервер (потому что зона это файл
и он лежит на одном сервере). но на самлм деле
это не совсем так. на одном сервере лежит файл
зоны которые можно на этот сервере модицифировать.
он называется мастер днс контроллер для зоны.
и можно настроить запасные секондари серверы
которые будут читать этот файл с примари сервера
в свою память. они не позволяют ее модифицировать
но зато они могут выдввать отвветы на реквесты
и эти записи считаьбтся авторитертными при выдаче
этим серверами. 


итак я знаю ип адрес сервера который хостит
зону тоесть 

днс от "." это 199.7.83.42

я иду на него и ищу NS сервер для субзоны "uk."



# dig -4 @199.7.83.42  -t NS "uk."  +norecurse
flags: qr;

;; AUTHORITY SECTION:
uk.			172800	IN	NS	nsa.nic.uk.

;; ADDITIONAL SECTION:
nsa.nic.uk.		172800	IN	A	156.154.100.3


флаг +norecurse значеает что я прошу диг 
чтобы он сформировал неркурсивный запрос.
что это такое ищи отдельно.
секция Answer пустая это значит что 
авторитивых записей NS  нет на этом серере 
в этой зоне. 
но так как мы видим вот это

;; AUTHORITY SECTION:
uk.			172800	IN	NS	nsa.nic.uk.



это значит что на этом компе есть искомые записи
NS в неавторитивной форме
в ллюбом слуае это то что нам надо.
потому что делегирующая запись всегда неавторитивная


а вот эта секция

;; ADDITIONAL SECTION:
nsa.nic.uk.		172800	IN	A	156.154.100.3

говорит о том что на этом серевере есть еще 
и эта запись правда в какой форме непонятно.





по идее так как у нас вот такая ситация

зона ".":

uk.			172800	IN	NS	nsa.nic.uk.

тоесть у нас домен имя днс  делегирующего сервера
лежит в делегируюемом домене . поэтому
вот эта запись

nsa.nic.uk.		172800	IN	A	156.154.100.3

тоже будет неавтортитинвая. (чисто для справки 
обьяснил). это ГЛЮ запись. без нее в этой зоне
вобще невозможно ее никак получить.


итак мы узнали ип сервера котоый хостит 
зону "uk."

доп проверка
иду на этот сервер 156.154.100.3 и убеждадаюсь что он реально авторитивный за зону "uk."


# dig -4 @156.154.100.3  -t NS "uk."  +norecurse

;; flags: qr aa; QUERY: 1, ANSWER: 8, AUTHORITY: 0, 

;; ANSWER SECTION:
uk.			172800	IN	NS	nsa.nic.uk.


так как ответ итеративного запроса идет в
ANSWER плюс флаг АА
это значит что запись релаьно автортивная.
значит этот сервер реально отвечает за зону "uk."


итак на данный момент я имею

днс от  "."  это    199.7.83.42
днс от "uk." это 	156.154.100.3



итак я иду на этот сервер 156.154.100.3
и там ищу кто отвечает за зону "co.uk."



# dig -4 @156.154.100.3  -t NS "co.uk"  +norecurse

;; flags: qr aa; QUERY: 1, ANSWER: 8, AUTHORITY: 0, ADDITIONAL: 1


;; ANSWER SECTION:
co.uk.			172800	IN	NS	nsa.nic.uk.

видим флаг АА плюс секция ANSWER
это значит что закзанная запись автортиивная
это значит что домен "co.uk" он реально выделен
в отдельну зону (потому что сама NS запись co.uk.
существует) а так как запис автотинвая это значит
что данная зона лежит НА ЭТОМ ЖЕ СЕРВЕРЕ!

а вот эта запись

# dig -4 @156.154.100.3  -t SOA "co.uk"  +norecurse

;; flags: qr aa; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1


;; ANSWER SECTION:
co.uk.			172800	IN	SOA	dns1.nic.uk. hostmaster.nominet.org.uk. 1748555880 900 300 2419200 10800

нам говорит о том что примари версия зоны
лежит на самом деле на сервере dns1.nic.uk.
тоесть наш текущий сервер nsa.nic.uk. это 
на самом деле секондари сервер для этой зоны.
ну не важно.


еще раз посмотрим на этот ответ

# dig -4 @156.154.100.3  -t NS "co.uk"  +norecurse

;; flags: qr aa; QUERY: 1, ANSWER: 8, AUTHORITY: 0, ADDITIONAL: 1


;; ANSWER SECTION:
co.uk.			172800	IN	NS	nsa.nic.uk.


унас получается вот такая картина


зона "co.uk." :

co.uk.			172800	IN	NS	nsa.nic.uk.


у нас получается домен co.uk. вынесен с отденую
зону на днс сревер имя которого не явлется
поддоменом co.uk.
поэтому в этой зоне нет записи-А с его ип.
его надо искать заново. начиная с корневого 
днс.

итак мы имеем
днс от "."      это    199.7.83.42
днс от "uk."    это    156.154.100.3
днс от "co.uk." это    nsa.nic.uk.


так мне нужно узнать его ип nsa.nic.uk.
иду  на сервер который хостит "uk." 156.154.100.3
и узнаю кто хостит зону "nic.uk."

# dig -4 @156.154.100.3  -t NS "nic.uk"  +norecurse

;; flags: qr aa; QUERY: 1, ANSWER: 8, AUTHORITY: 0, ADDITIONAL: 17


;; ANSWER SECTION:
nic.uk.			172800	IN	NS	nsa.nic.uk.

;; ADDITIONAL SECTION:
nsa.nic.uk.		172800	IN	A	156.154.100.3

и я вижу  несколко вещей.
одна вещь - я вижу что запись 
nic.uk.			172800	IN	NS	nsa.nic.uk.
сущесвтует это значит что домен nic.uk. реально
выделен  в отдельную зону. 
также я вижу что флаг АА это значит что данная
зона в итоге зранится на этом же сервер получается.
и это реально так потмоу что 
в этой записи
nsa.nic.uk.		172800	IN	A	156.154.100.3
я вижу ИП 156.154.100.3 котрый совпадает с тем
ип по которому я делаю заппрос.


итак получается вот такая картина
днс от "."          это    199.7.83.42
днс от "uk."        это    156.154.100.3
днс от "nic.uk."    это    156.154.100.3
днс от "co.uk."     это    nsa.nic.uk.

значит надо зайти на сервер 156.154.100.3
и там можно узнать чему равна 

nsa.nic.uk.   IN    A   ?????


# dig -4 @156.154.100.3  -t A "nsa.nic.uk"  +norecurse

;; flags: qr aa; QUERY: 1, ANSWER: 1, AUTHORITY: 0, 

;; ANSWER SECTION:
nsa.nic.uk.		172800	IN	A	156.154.100.3


видим флаг АА значит мы получиили авторитивную
запись и также я нашел что 
за зону co.uk отвечает 156.154.100.3

итого имеем
днс от "."          это    199.7.83.42
днс от "uk."        это    156.154.100.3
днс от "nic.uk."    это    156.154.100.3
днс от "co.uk."     это    156.154.100.3

далее приходит иде что bbc.co.uk.  этот домен
он выделен в отдельную зону
поэтому я буду обращаться на этот сервер

днс от "co.uk."     это    156.154.100.3

и смотреть куда он делегировал эту зону



# dig -4 @156.154.100.3  -t NS "bbc.co.uk"  +norecurse

;; flags: qr; QUERY: 1, ANSWER: 0, AUTHORITY: 8, 

;; AUTHORITY SECTION:
bbc.co.uk.		172800	IN	NS	ddns0.bbc.com.



итого имеем
 "."        (днс)    199.7.83.42    
 "uk."      (днс)    156.154.100.3  
 "nic.uk."  (днс)    156.154.100.3  
 "co.uk."   (днс)    156.154.100.3  
 "bbc.co.uk. IN	NS	 ddns0.bbc.com.


теперь мне надо искать кто отвечает за "com."

# dig -4 @199.7.83.42  -t NS "com."  +norecurse

;; flags: qr; QUERY: 1, ANSWER: 0, AUTHORITY: 13, 

;; AUTHORITY SECTION:
com.			172800	IN	NS	a.gtld-servers.net.

;; ADDITIONAL SECTION:
a.gtld-servers.net.	172800	IN	A	192.5.6.30

тоесть мы имеем


зона ".":
com.			172800	IN	NS	a.gtld-servers.net.


получается у меня есть зона "." и в ней
я делегирую субзону "com." в отденый файл
который лежит на сервере a.gtld-servers.net.
так как  сервер a.gtld-servers.net. явлсяется
поддоменом "." и не явлется поддоменом "com."
то мы можем спокойно разместить в зоне "."
запись типа-А для этого днс сервера 

a.gtld-servers.net.	172800	IN	A	192.5.6.30

и она получается будет авторитвиной
но если я попробую ее получить в автортивной
форме с этоо серера   я ее не получу помуточ
то на самом деле зона "." делеиуерует наружу
нетолько субзону "com." но субзону "net."
поэтмоу данная запись 

a.gtld-servers.net.	172800	IN	A	192.5.6.30

она все таки будет в зоне "." но в качестве 
неавтортитивной. это так чисто для ясности
в  любом случае мы имеем

итого имеем
 "."        (днс)    199.7.83.42    
 "uk."      (днс)    156.154.100.3  
 "nic.uk."  (днс)    156.154.100.3  
 "co.uk."   (днс)    156.154.100.3  
 "bbc.co.uk. IN	NS	 ddns0.bbc.com.
 "com."              192.5.6.30

идем на 192.5.6.30 и ищем там NS днс срверара 
от bbc.com.

# dig -4 @192.5.6.30  -t NS "bbc.com."  +norecurse

;; AUTHORITY SECTION:
bbc.com.		172800	IN	NS	dns0.bbc.co.uk.

забавно получается. 
зона "bbc.co.uk." лежит на сервере ddns0.bbc.com.
чтобы его найти я нашел сервер 192.5.6.30
который отвечает за "com."
я зашел на него и он сказал что за зону "bbc.com."
отвечает   dns0.bbc.co.uk.


итого имеем
 "."        (днс)    199.7.83.42    
 "uk."      (днс)    156.154.100.3  
 "nic.uk."  (днс)    156.154.100.3  
 "co.uk."   (днс)    156.154.100.3  
 "bbc.co.uk." IN NS	 ddns0.bbc.com.
 "com."              192.5.6.30
 "bbc.com."   IN NS  dns0.bbc.co.uk


получается что 
зона "bbc.co.uk." лежит на сервере ddns0.bbc.com.
найдем сервер - найдем зону 
запись сервера лежит в зоне "bbc.com."
которая лежит на сервере  dns0.bbc.co.uk
запись о котором лежит в зоне "bbc.co.uk"
как раз которую мы ищем 
все закольцовка. зона замкнулась сама 
на себя

но нам везет 
помимо вот этой записи

 "bbc.com."   IN NS  dns0.bbc.co.uk

есть еще запись

bbc.com.		172800	IN	NS	dns0.bbc.com.

и вместе сней есть запись

dns0.bbc.com.		172800	IN	A	198.51.44.73

поэтому имеем
итого имеем
 "."        (днс)    199.7.83.42    
 "uk."      (днс)    156.154.100.3  
 "nic.uk."  (днс)    156.154.100.3  
 "co.uk."   (днс)    156.154.100.3  
 "bbc.co.uk." IN NS	 ddns0.bbc.com.
 "com."      (днс)   192.5.6.30
 "bbc.com."  (днс)   198.51.44.73


идем на 198.51.44.73 и ищем там ип для ddns0.bbc.com.

# dig -4 @198.51.44.73  -t A "ddns0.bbc.com"  +norecurse

;; flags: qr aa; 



;; ANSWER SECTION:
ddns0.bbc.com.		172800	IN	A	148.163.199.129


итого имеем
 "."        (днс)    199.7.83.42    
 "uk."      (днс)    156.154.100.3  
 "nic.uk."  (днс)    156.154.100.3  
 "co.uk."   (днс)    156.154.100.3  
 "bbc.co.uk."(днс)   148.163.199.129
 "com."     (днс)    192.5.6.30
 "bbc.com." (днс)    198.51.44.73


итого имеем
 "bbc.co.uk." (днс)  148.163.199.129


наконец можем зайти и узнать чему равно

bbc.co.uk.  IN    A ??? 




# dig -4 @148.163.199.129  -t A "bbc.co.uk."  +norecurse

;; flags: qr aa


;; ANSWER SECTION:
bbc.co.uk.		300	IN	A	151.101.0.81
bbc.co.uk.		300	IN	A	151.101.64.81
bbc.co.uk.		300	IN	A	151.101.128.81
bbc.co.uk.		300	IN	A	151.101.192.81


вот какой мудеж если искать ип руками 
через коренвые днс самому











