| interrupt
| tasklet
| workqueue
| softirq

есть очень центарльный вопрос. 
а как работает обслуживание hardware irq,
software irq. это главный вопрос.
и в дополнение это как работает обработка tasklet, workqueue.

дело вот в чем. когда на желеке происходит событие. то железка
генерирует прерываение. которое контроллер прервываний доностит до цпу.

тут возникает докуча куча вопросос. потому что на одной irq сидит куча
железок. и прочче и прочее. но главное что цпу прерыавет то что он делал.
тоесть он комаду которая уже выолпнялась он заканчивает а дальше
он цпу делает preempt (ищи "|preempt") тоесть цпу прекращает выполнять тот
код котоырй он выполнял и загружает в себя комагду которая является обоаботчиком
прерыывания . опять же я не знаю обработчик чего? прям событиый на той железке
или обработчик линии IRQ из которой прилетел сигнал.
но все такие лавное что цпу прерывает свои команды и начинет обрабывать
команды harware IRQ inteerrupt. и фишка в том что обычно обработчик прерываний 
первое что он делает. это он блокирует прерываение своей работы (preempt)
аюсолютно точно прерыание с того irq с которого он сам пришел. и взмонжно 
прерывание работиы цпу с других irq но это не точно. и в этом состоянии
этот код с цпу может выдывать никто. только отключения питаиния. 
такой реэиме называется atomic context еще он называется более точно
irq context. непонтно что происходит с теми прерываниями коорые летят в этот момент
в цпу. он где то сохнараняются или они пвоторояются или что?
главное что код isr хендлера нихрнена никто не может выдывать из цпу. пока 
он сам себя отттуда не выдавит. 
это я описыал облужваиние hardwrare irq.
а вот вопрос что такое software irq. и как оно обслуживается. 
в инете много проиивочречивой хуй знает какйо информации. 
поэтому на данном этапе я пока решил почитать книжку "understanding linux".
 а там посмортрим. потому что говрю в инете много хуйни по этой теме.

тоест я неопнимаю при каком событии цпу начинает оббрабатывать soft irq.
что это такое. может ли оно быть прервано чем нибудь?

# cat /proc/interrupts | grep LOC
LOC:       4609       4836   Local timer interrupts


# cat /proc/interrupts | grep LOC
LOC:      22876      23201   Local timer interrupts
=========================================================






# cat /proc/interrupts | grep LOC
LOC:       8171       2763   Local timer interrupts



# cat /proc/interrupts | grep LOC
LOC:      34835       3043   Local timer interrupts




https://tldp.org/HOWTO/Plug-and-Play-HOWTO-7.html

https://www.kernel.org/doc/html/v5.3/x86/i386/IO-APIC.html
https://leo.leung.xyz/wiki/Irqbalance
https://superuser.com/questions/1838688/configure-properly-irqbalance-to-improve-the-network-traffic
<=========== закчил здесь


