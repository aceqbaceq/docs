#!/bin/bash


#
# используем EMA1min и LA1min для того чтобы оценить r_sr за 5 минут
#
#
# если есть  вылезают ошибки при запуске скрипта то это проблема с локалью 
# смотри README.txt
#
#описание проги
#

во первых какая мат модель. берется ema функция. у нее вот такая мат модел - у нас есть бочка с дыркой снизу и сверху.
мы в бочку воду постоянно доливаем разными порциями и из бочки вода выливатся точже разными порциями. параметры бочки 
отом насклоьо бочка дырявая заадается через коэфициенты  в мат функции. мы рассматриваем мат функцию ema1min
она описывает бочку дырявую в том обьеме что если мы прекраащаем доливать в нее воду то в ней увроень воды 
упадет за 1мин в e~2.7 раз. вот такую бочку и таую мат фуекцию мы рассматриваем. 

процесс дискретный. данные снимаются каждые 5секунд и выглядит это так. на данный момент у нас в бочке есть 
уровень воды равный ema1min (еще раз подчеркну что 1min\5min\15min в названии функции ema отражает степень дырявости 
бочки. тоесть в супердырявой бочке ema1min уровен воды падает в 2.7 раза за 1 минуту если мы пркрктили доливаь в нее
воду а самая недырявая бочка это ema15min у нее вода падает в 2.7 раза за 15 минут. но в этой порге мы конкретно
работаем  с бочкой ema1min). так вот проецсс физический происходит вот так - вот у нас есть момент времени now.
и  у нас в бочке уровень воды равен ema1min , также мы мгнвоенно добавляе в бочку доп воду и это равно r
далее проходит 5с в течение которых вода вылиывается а мы на нее смотрим и через 5с из бочки выльется суммарно
обьем воды равный la1min вот какое значение имеют велчиины r, ema1min, la1min 
значит la1min она зависит от r и от ema1min

итак еще раз у нас есть бочка у нее уровень воды щас равен ema1min мы в нее также заливаем мгновенно еще доп воды
в размере r. потом мы ничего неделаем и ждем 5с. во время этого дела у нас вылиыватся вода. и через 5с из бочки выльется
воды в обьеме la1min. у нас в бочке будет новое значение урвня воды ema1min(+5sec) и мы в бочку доолоьем новый обьем
новой воды в размере r(+5sec) и значение la1min в точке  

#типичный вывод на экран
#
 r= 5 1 0 2 0 5 0 0 1 2 0 1 0 0 0 1 0 0 2 0 1 0 0 1 0 3 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 3 2 0 |
 31.1% [|||||||||||||||...................................]
 r_summa=35 ema1min=5.37 la1min=.43 |  ema1min/r_summa=15.34% la1min/r_summa=1.22%  | r_sr_5min_pr=0.57  r_sr_5min_pr/r_summa=1.63%   


данные снимаются каждые 5s . данные это число R+D тредов (кстати да конкретное наебалово снимать не число тредов а 
число прцессов это конкретный проеб) и это записвыается в r. и вот эти точки они показаны в строке "r=..."
точек у нас 5*12+1=61 точка  это за 5 минут.

c точки зрения мат функции r - это количество новой воды которая добавляется заливается в бочку.
r_summa - это сумма всей воды которая была залита в бочку за 5 минут. это сумма этих 61 точки.
можно прям взять значения r и руками просуммиировать и это будет равно r_summa
ema1min - это та самая ema функция в момент времени now. это значение показывает сколько воды сейчас есть в бочке.
la1min - это количество воды котрое сейчас вытекла из бочки. ведь мат модель какая у нас есть момент времени t=now
и в этот момент из бочки вытекло сколко то воды и после этого в нее сразу быстро налили новой воды новую порцию.
вот r покзазывает сколько налили новой порции воды добавили а la1min показывает сколько воды вылилось 


#
#
#
#
#
#
#
#
#
#

#



#
# основные переменные
#
f_m="5"  # сколько даннных для начала нужно набрать в минутах
r=();la_p=0;la_now=0;b_t_5min=0;la_m1min=0;b_t_5s=0;b_t_5s_array=();
size_f_m="$(( $f_m*12 + 1 ))";




#
# функции
#
function initialize_arrays  {
    size_r="$size_f_m"   


    la_p=$(  bc <<< "scale=2; $(cat /proc/loadavg | awk '{print $1}')/1"    )

    r_sr=$la_p ;  # набиваю массив r из r=r_sr
    for i in $(seq 0 1 $(( $size_f_m-1 ))  ); do
        r+=( "$r_sr"   )           ;
    done
}



function initialize_palki {
    dlinna="50"
    palki=$( for i in $(seq 1 1 $dlinna); do echo -en "|"; done   );  tochki=$( for i in $(seq 1 1 $dlinna); do echo -en "."; done   ); # переменные визуалиаззации

}




function progress_bar {
    
    local busy=$( bc <<< "scale=5; $dlinna * ($b_t_5min/100) " | cut -d"." -f1   ); [[ -z "$busy" ]] && busy="0"; \
                                   [[ $( bc <<< "scale=11; $busy>=($dlinna-1)"   )  -eq 1   ]]  && busy="$dlinna" ; # echo "$busy" ; 
    local idle=$( bc <<<  "scale=5; $dlinna - $busy " | cut -d"." -f1  );  # echo $busy $idle

    b_t_5min_graph=$(    echo -en "["; \
	                 echo -en  ${palki:0:$busy };\
    	                 echo -en  ${tochki:0:$idle };\
        	         echo "]" \
            	     );
}





#
# основная иницилизация
#
printf "Инициализация ...0/1\r" 
initialize_arrays
initialize_palki
sleep 5; 
printf "Инициализация ...1/1\n" 





#
# главное тело рабочее
#
while true; do  

    r=( ${r[@]:1:$size_r} ); 


#   r+=( $( ps -A -L -o cmd,stat  | grep -E "R|D" | grep -v -E "STAT|bash|grep|ps|wc" | sed 's/\(.*\)\( .*$\)/\2/' | grep -E "R|D" | wc -l   )  )   ;  
    r+=( $((  $(grep "procs_running" < /proc/stat | awk '{print $2}') + $(grep "procs_blocked" < /proc/stat | awk '{print $2}')  ))             )   ;

    r_summa="0"; for i2 in ${r[@]}; do  r_summa=$(    bc <<< "scale=2; $r_summa+$i2    ")   ; done;
    la_now=$( bc <<< "scale=2;     0.92*$la_p+0.08*${r[-1]}     ");
    r_sr_5min_pr=0; for i13  in ${r[@]}; do  r_sr_5min_pr=$(    bc <<< "scale=4; $r_sr_5min_pr+$i13/$size_f_m    ");   done;
    b_t_5min=0; for i in ${r[@]}; do  [[  $(    bc <<< "scale=2; $i>0    ")  -eq 1 ]]  &&   b_t_5min=$(    bc <<< "scale=4; $b_t_5min+100/$size_f_m    ");   done;   



    progress_bar


    printf  " r=%-20s |\n %.1f%% %s\n r_summa=%s ema1min=%s la1min=%s |  ema1min/r_summa=%s%% la1min/r_summa=%s%%  | r_sr_5min_pr=%-5.2f r_sr_5min_pr/r_summa=%s%%   \n\n"                               \
                                     " ${r[*]}"    \
                                     $( tr "." "," <<< "$b_t_5min" )   \
                                     "$b_t_5min_graph" \
                                     "$r_summa" \
                                      $( bc <<< "scale=2; $la_now*12.5" ) \
                                     "$la_now" \
                                      $( bc <<< "scale=2; 100*($la_now*12.5)/$r_summa" ) \
                                      $( bc <<< "scale=2; 100*($la_now)/$r_summa" ) \
                                      $( tr "." "," <<< "$r_sr_5min_pr" )  \
                                      $( bc <<< "scale=2; 100*($r_sr_5min_pr)/$r_summa" )  \
                                      | tr "," "." 







    la_p="$la_now"
    sleep 5


done;  
exit 0


###############################################################################
# конец
###############################################################################




