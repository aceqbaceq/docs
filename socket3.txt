| socket



я науялися находить второй конец  у юникс сокета котоырй к файлу на фс привязан.
но более того  янаучился искать оба конца юникс сокета который создается через socketpair()
у жинкса как раз такой случай

вот эта загадочная строка
Local Address:Port     Peer Address:Port    Process
* 27097325            * 27097324 users:(("nginx",pid=2391593,fd=7),("nginx",pid=2391592,fd=7))

она значит что один и тотже юникс сокет находится у двух процессов 2391593 и 2391592
fd=7 тот у обоих прцессов дескрпитор 7 в итоге имеет бекедом один и тот же сокет в памяти ядра

поидее тдгда и ipv4 сокет в двух процессах тоже дожен так покзываться
и действително!

# ss -4nlp | grep -E "Recv|nginx"
Netid State  Local Address:Port  Peer Address:Port  Process               
tcp   LISTEN 127.0.0.1:8888       0.0.0.0:*         users:(("nginx",pid=2391593,fd=5),
                                                     ("nginx",pid=2391592,fd=5))    


получается тоже самое. один процесс имеет дескриптор и второй пцроесс имеет дескриптор.
и они оба ведут в качестве бекенда на один и тотже кусок в памяти ядра в даннмо случае на ipv4 
сокет!

гениально!

получается а как это так два процесса сдят на одном биндинге. а вчем проблема? 
у нас один процесс полуичился из другого путем клованирования. при этом все дескприорторы
будут склоированы! поэтмоу они оба сдят на одном биндинге. в иттге все просто - ядро будет
наваливать в слушаюищий сокет новые конекты. а два процесса будут конкурируя оттуда выгребать
эти новые конекты. 

совсем другое дело более продивнутое это создать на том же биндинге второй отдельный 
новые слушающий сокет! вот это более круто! тоггда ядро будет раскиывать нвоые конекты
поочерди на два слушающих сокета. и гораздо проше выгребат новые конекты из двух 
слаушающх сокетов чем через один

а ужинкса в плане юникс сокета получатся вот как - ест масетре процесс. и он создает
пару сокетов. потом себя клонирует. в клоне зкрывает один из фд. а мастере не азкрывает.
и потом через эту пару мастер может обмениваться данными с воркером. если воркеров много 
то у мастер процесса будет связь с каждйм воркером через сокет! 


