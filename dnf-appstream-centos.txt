yum
dnf
appstream

с версии centos 8 ввели Appstream.
поговорим о нем.


это новая пакетная система. это новая система по установке софта.
репозиторий нового образца он внутри себя содержит по прежнему rpm пакеты но и дополнительные файлы
которые содержат в себе новые метаданные. эти новые структуры называются модули. 
как выглядела установка софта раньше - у нас есть куча пакетов rpm в репозитории. а нам нужно постаить не пакеты а конкретное 
приложение. мы должны знать какой головной rpm пакет нужно установить ( а он в свою очередь заставить yum установить и другие зависмые пакеты) таким образом 
у нас установится группа пакетов для того чтобы установилось приложение. так вот в частности мудота в том что нум нужно поставить приложение
а ставим мы пакеты. причем нам надо знать имя головного пакета. это все неочень удобно красиво и логично.  итогда походу им пришла идея а давайте
включим в новый репо новые метаданные так чтобы в командной строке в новом софт менеджере dnf можно было указать в качестве цели установки название приложения
а не пакета. а dnf уже сам знает и установит весь набор rpm пакетов который относистя к этому приложению. таким образом получается очень логичная вещь - человек
хочет поставить приожение и в dnf он пишет имя приложения. а dnf уже сам там разбиарется из каких пакетов состоит это приложение и ставит их.
так вот имя приложения в новых терминах называется МОДУЛЬ.  смотрим список модулей:


# dnf module list 

CentOS Linux 8 - AppStream
Name                 Stream          Profiles                                                      
389-ds               1.4                                                                                                                                           
ant                  1.10 [d]                                                                                                        
container-tools      rhel8 [d]       common [d]       
container-tools      1.0             common [d]
container-tools      2.0             common [d]      
container-tools      3.0             common [d] 
freeradius           3.0 [d]         server [d]       
gimp                 2.8 [d]         common [d]
go-toolset           rhel8 [d]       common [d]                            


в Name идет имя модуля.
в Stream идет версия модуля , и они эту версию называют новым словом stream. хотя по сути это всего навсего версия модуля.ъ
в Profies написаны доступные для этого стрима профиля.

что такое профиля - профиль нужен для того чтобы можно было поставить урезанную версию приоложения либо расширенную либо стандартную, либо например клиентская версия,либо
серверная. таким образом профиль это набор rpm пакетов для данного приложения даннной версии который предоставляют в сумме некий чуть разный функционал этого приоложения.
говорю в самом простом случае в одном профиле лежит столко rpm пакетов что мы получим минимальный функмцонал приорженя. а в другом профиле лежит столько пакетов
что мы получим более расширвенный функционал приоржения. вот зачем нужны профили.


далее. сами пакеты по прежнему в репо хранятся в формате rpm  

еще раз скажу что новый пакетный менеджер dnf.
его можно поставить и на centos 7 но он там просто заменит yum а апстримов на centos 7 небудет.

непоняно почему назвали новую штуку апстрмами когда надо было называть модулями. потому что апстрим это конкретная версия модуля. 


в новой системе они 
разделили пакеты на две группы - на два репозитория. базовые пакеты (BaseOS) и все остальное (AppStream).
раньше в одном репозитории может лежать только она версия забикса а если мы хотим выбирать 
между версиями то надо на компе прописывать кучу репозиториев. щас мы прописываем один репозиторий и внутри него уже 
сидит эта куча версийй. каждя версия сидит в своем стриме(стрим=модуль+версия)
каждый стрим имеет свой lifecycle. узнать через dnf его нельзя надо идти на сайт редхат и там искать в таблице.


как посмотреть эти модули в центос:

в centos 9:
работает сразу из коробки:

# dnf module list

CentOS Stream 9 - BaseOS                                                                                                                                      378 kB/s | 5.9 MB    
CentOS Stream 9 - AppStream                                                                                                                                   964 kB/s |  15 MB    
CentOS Stream 9 - Extras packages                                                                                                                             4.1 kB/s | 8.7 kB    
Extra Packages for Enterprise Linux 9 - x86_64                                                                                                                1.0 MB/s |  11 MB    
Extra Packages for Enterprise Linux 9 - Next - x86_64                                                                                                         221 kB/s | 1.4 MB    
CentOS Stream 9 - AppStream

Name                        Stream                                                                                         
maven                       3.8                                                                         
nodejs                      18                                                
php                         8.1                                                         
ruby                        3.1                         



мы видим два стримовых репозитория о которых я говорил BaseOS и AppStream правда в 9 появился +1 Extras packages.
и мы видм модули - имя и версию(версия называется стримом).


(кстати если centos 8 жрет 250М в вагранте то centos 9 жрет более 350МБ иначе вылезает OOM killer)




centos 8:
тут у нее дата обслуживания закончилась поэтому нужно поменяь адреса репозиториев:
# sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
# sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*

после этого тоже самое. все равботает:

# dnf module list

почемуто в centos 8 модулей дохрена по сравнению с 9 версией.
чото я такое прочитал что если в 8 сдледдовали лозунгу - все преедлываем в модули то типа в 9 версии новый лозунг - в модули только то что надо.
вобщем сами незнают чего хотят.



Далее.
поговоим еще раз про общую архитектуру Appstream.
в систему подключается два репозитория: BAseOS и AppStream хотя как видно из практиик выще есть еще один стрим это ExtraPackages.
в baseos лежат только rpm пакеты и лайфсйкл у них такой же как было рантше в преддыущих релизах центос.

в appstream лежат и rpm пакеты и модули. модули это просто манифесты.
пакеты в этом стриме имеют варьирующийсы лайфсайкл.

прикол в том что лайсайкл он незаписан в стримах. то есть его через dnf неузнать. а надо идти на сайт https://access.redhat.com/support/policy/updates/rhel-app-streams-life-cycle
и там искать в таблице.


далее малект просяним терминологию:
модуль - это считай название проги\приложения которую мы хотим поставить например модуль zabbix или php
стрим  модуля или просто стрим- стрим это конкретная вермсия модуля. тоесть стрим php 7.4 или стрим php 8.0
профиль модуля или просто профиль - это список rpm пакетов с кокнетными версиями которые будут установлены. зачем нужно иметь несколько профилей - чтобы поставить приложения с урезанным или расширенным функционалом например.


итак посмтреть все модули в системе:
# dnf module list


посмотреть  все версии (стримы) одного модуля:
# dnf module list | grep -E "php|Profiles"

Name                 Stream          Profiles                                 Summary                                                                                                                                                                                                                          
php                  7.2 [d]         common [d], devel, minimal               PHP scripting language                                                                                                                                                                                                           
php                  7.3             common [d], devel, minimal               PHP scripting language                                                                                                                                                                                                           
php                  7.4             common [d], devel, minimal               PHP scripting language 





тепрерь если мы хотим посмотреть в чем разница между набором RPM пакетов которые входят в разные профили то вот так:

# dnf module info  --profile php:7.2
Last metadata expiration check: 1:42:52 ago on Fri 04 Nov 2022 10:51:36 AM UTC.
Name    : php:7.2:8020020200507003613:2c7ca891:x86_64
common  : php-cli
        : php-common
        : php-fpm
        : php-json
        : php-mbstring
        : php-xml
devel   : libzip
        : php-cli
        : php-common
        : php-devel
        : php-fpm
        : php-json
        : php-mbstring
        : php-pear
        : php-pecl-zip
        : php-process
        : php-xml
minimal : php-cli
        : php-common



соотвсвтенно в профиле minimal на систему будет поставлено всего два rpm пакета
php-cli
php-common


если убрать ключ --profile
то нам покажут не rpm пакеты входящие в стрим а прям все файлы (файлов будет очень много потому что каждый rpm пакет содержит много файлов)


# dnf module info   php:7.2
Last metadata expiration check: 1:43:30 ago on Fri 04 Nov 2022 10:51:36 AM UTC.
Name             : php
Stream           : 7.2 [d][a]
Version          : 8020020200507003613
Context          : 2c7ca891
Architecture     : x86_64
Profiles         : common [d], devel, minimal
Default profiles : common
Repo             : appstream
Summary          : PHP scripting language
Description      : php 7.2 module
Requires         : httpd:[2.4]
                 : nginx:[]
                 : platform:[el8]
Artifacts        : apcu-panel-0:5.1.12-2.module_el8.2.0+313+b04d0a66.noarch
                 : libzip-0:1.5.1-2.module_el8.2.0+313+b04d0a66.src
                 : libzip-0:1.5.1-2.module_el8.2.0+313+b04d0a66.x86_64
                 : libzip-debuginfo-0:1.5.1-2.module_el8.2.0+313+b04d0a66.x86_64
                 : libzip-debugsource-0:1.5.1-2.module_el8.2.0+313+b04d0a66.x86_64
                 : libzip-devel-0:1.5.1-2.module_el8.2.0+313+b04d0a66.x86_64
                 : libzip-tools-0:1.5.1-2.module_el8.2.0+313+b04d0a66.x86_64
                 : libzip-tools-debuginfo-0:1.5.1-2.module_el8.2.0+313+b04d0a66.x86_64
    ...


поэтому ненадо удвилсять почему файлов много. потому что каждый rpm пакет содержит кучу файлов
также надо четко понимать какая команда показвает rpm файлы а какая показывает уже файлы внутри rpm файлов.


далее.
видно что  в один  стрим (тоесть модуль плюс версия) входиит нескоько профилей. - common [d], devel, minimal.

[d] -означает дефолтовый профиль. тоесть при установке он ставится по дефолту если нуказать иное. 



далее. также стоит понимать что от того что в репозитории у нас 5 версий постгрес это незначит что мы теперь на комп можем поставить сразу все 
пять версий. можем как и раньше поставить только одну.

давайте уже чтото поставим наконец:
установка модуля php
установка состоит теперь из двух этапов. внчале нужно enable стрим, а затем уже ставятся rpm.


посмотрим какие стримы нам доступны (то бишь какие версии php нам доступны)
# dnf module list php

Name                                 Stream                                  Profiles                                                   Summary                                               
php                                  7.2 [d]                                 common [d], devel, minimal                                                            
php                                  7.3                                     common [d], devel, minimal                                                            
php                                  7.4                                     common [d], devel, minimal                                                            


значит мы видим три стрима. по дефолту будет установлен 7.2 в профиле минимум.
а мы поставим 7.2 в профиле common


делаем enable стрим 7.4
# dnf -y module enable php:7.4

=================================================================================================================================================================
 Package                                       Architecture                                 Version       Repository                                     Size
==================================================================================================================================================================
Enabling module streams:
 php                                                                                           7.4

Transaction Summary
=============================

Complete!


эта команда пока что никакие rpm неустановила. она только на комп установила файл с метаданными по стриму.

проверим статус
# dnf  module list php
Name                                 Stream                                  Profiles                                                 
php                                  7.2 [d]                                 common [d], devel, minimal                                                                 
php                                  7.3                                     common [d], devel, minimal                                                                 
php                                  7.4 [e]                                 common [d], devel, minimal                                 




мы видим 7.4 [e]  это значит что стрим 7.4 в состоянии enabled.


теперь ставим rpm пакеты. плюс заказываем профиль common.
# dnf module install php:7.4/common

==============================================================================================================================================
 Package                                     Architecture                      Version                                                             Repository                            Size
==============================================================================================================================================
Installing group/module packages:
 php-cli                                     x86_64                            7.4.19-1.module_el8.5.0+815+1c4fd2e5                               
 php-common                                  x86_64                            7.4.19-1.module_el8.5.0+815+1c4fd2e5                              
 php-fpm                                     x86_64                            7.4.19-1.module_el8.5.0+815+1c4fd2e5                               
 php-json                                    x86_64                            7.4.19-1.module_el8.5.0+815+1c4fd2e5                                
 php-mbstring                                x86_64                            7.4.19-1.module_el8.5.0+815+1c4fd2e5                               
 php-xml                                     x86_64                            7.4.19-1.module_el8.5.0+815+1c4fd2e5                          
Installing dependencies:
 httpd-filesystem                            noarch                            2.4.37-43.module_el8.5.0+1022+b541f3b1                    
 nginx-filesystem                            noarch                            1:1.14.1-9.module_el8.0.0+184+e34fea82                    
 oniguruma                                   x86_64                            6.8.2-2.el8                                                    
Installing module profiles:
 php/common                                                                                                                                                                                  

Transaction Summary
==============================================================================================================================================
Install  9 Packages



все. готово. приложение php установлено. версия 7.4. профиль common.


проверим наличие установленных rpm:
# rpm -qa | grep php
php-cli-7.4.19-1.module_el8.5.0+815+1c4fd2e5.x86_64
php-mbstring-7.4.19-1.module_el8.5.0+815+1c4fd2e5.x86_64
php-json-7.4.19-1.module_el8.5.0+815+1c4fd2e5.x86_64
php-common-7.4.19-1.module_el8.5.0+815+1c4fd2e5.x86_64
php-fpm-7.4.19-1.module_el8.5.0+815+1c4fd2e5.x86_64
php-xml-7.4.19-1.module_el8.5.0+815+1c4fd2e5.x86_64


все верно.



проверим какие rpm в php 7.4 в профиле common обещал dnf установить:
# dnf module info --profile php:7.4
Last metadata expiration check: 0:21:58 ago on Fri 04 Nov 2022 01:54:32 PM UTC.
Name    : php:7.4:8050020211109184432:3e6e7e84:x86_64
common  : php-cli
        : php-common
        : php-fpm
        : php-json
        : php-mbstring
        : php-xml
devel   : libzip
        : php-cli
        : php-common
        : php-devel
        : php-fpm
        : php-json
        : php-mbstring
        : php-pear
        : php-pecl-zip
        : php-process
        : php-xml
minimal : php-cli
        : php-common



совпадает.

что интересно: dnf module info показывает не все rpm которые будут реально установлены а только те rpm которые будут устанолвены из данного модуля. а те rpm 
которые он дополнитльно будет ставить из за зависимостей он почемуто непоказывает через dnf module info . это ну так себе. 



посмотрим статус модуля:
# dnf module list php:7.4 
Name                                Stream                                 Profiles                                     
php                                 7.4 [e]                                common [d] [i], devel, minimal                                                            


заметим что теперь у нас прибавилось в статусе профиля    common [d] [i]
[i] значит что профиль установлен на комп. тоесть rpm пакеты которые входят в состав профиля установлены на комп.



Итак установка на комп. теперь состоит из двух шагов. надо enable стрим, и потом уже ставим пакеты.



Удаление пакетов из системы:
# dnf module remove php:7.4/common


смотрим поосле этого статус стрима
# dnf module list php:7.4 
Name                                 Stream                                  Profiles                                           
php                                  7.4 [e]                                 common [d], devel, minimal                                                                 


видим что стрим enable, но никакой профиль неустановлен.


далее. теперь нужно модуль убрать с компа
# dnf module reset php:7.4



смотрим статус модуля
# dnf module list php

Name                                 Stream                                  Profiles                                                  
php                                  7.2 [d]                                 common [d], devel, minimal                                                               
php                                  7.3                                     common [d], devel, minimal                                                                
php                                  7.4                                     common [d], devel, minimal                                



видим что модуль 7.4 больше не в состоянии [e]


вот и  все. утсановили php а потом удалили php.


дальше моменты и приколы:  не знаю в чем разница если reset модуль и disable модуль.
также если неудалить пакеты а сразу сделать  reset либо disable то там какая  реально школьная херня происходит потому что пакеты оставются в системе 
но в модуле это никак не отражается. тоесть получается если так сделать то потом нет никакого способа понять а есть ли эти пакеты  систме устаовленные или нет.
dnf будет покзывать что активных модулей нет и установленных профилей тоженет. хотя rpm пакеты будут лежать на хосте. поэтому я рекомендую ненарушть правильную последоватьтелнос
установки и удаления и пакетов и модулей с хоста. в целом конечно это как то непрофвфесионально и по детсски сделано. надо было если модуль reset\disable а пакеты в системе есть
то тогда либо пакеты должны на автомате удаляться либо модули должны откзываться делать reset\disable.

далее.
help по dnf = https://dnf.readthedocs.io/en/latest/command_ref.html#module-command-label


далее. 
замечу что в RH есть софт который позволяет иметь на одном хосте несколко версий одного приложения. софт называется Red Hat Software Collections.



Далее. Еще более интересный контент. здесь = https://www.redhat.com/en/blog/introduction-appstreams-and-modules-red-hat-enterprise-linux  у редхат 
я нашел как можно апгрейдить и даунгредйить приложение. а это реально интересно.
общая идея такая - поставили модуль. потом делаем ресет модуля. потом enable другого модуля. и установка новой версии софта. тоже самое даунгрейд - установили софт, 
затем ресет модуля, затем enable другого модуля и установка более мелкой версии. я проверил в принципе работает и на апгрейд и на даунгрейд. но не все так круто.
если мы поставили модуль в профиле скажем common а потом его апгрейдим в профиль minimal то фиг там он сапгрейдится в профиль минимал. да он заапгрейдится но по факту набор rpm 
пакетов будет из профиля common. тоесть лишние пакеты dnf неудалит. хотя будет бодро рапортовать о том что софт сидит в профиле минимал. но это наглая брехня. тоесть  я что 
хочу сказать если мы апгрейдим\даунгрейдим софт то его профиль по факту останется таким же   какой бы новый профиль мы незаказывали. более того dnf будет рапортовать что
обновленный софт сидит в новом профиле но это наглая брехня. апгрейд\даунгрейд неменяет профиль. а только меняет версию пакетов rpm.

а теперь набор команд который делает апгрейд:
имеем php 7.2 модуль common
# dnf module enable php:7.2 -y
# dnf module install php:7.2/common -y

апгрейдим до 7.4 профиль минимал:
# dnf module reset php
# dnf module enable php:7.4 -y
# dnf module install php:7.4/minimal -y

готово. только еще раз повторю что php 7.4 будет по факту профиля common (а не минимал)


теперь даунгрейд:
#  dnf module reset php
#  dnf module enable php:7.2 -y
#  dnf module install php:7.2/minimal -y
 
готово. опять же повторю что php 7.2 будет по факту в профиле common. (а не минимал)
хотя dnf бодро отрапотрует что профиль=minimal

# dnf module list php
Name                                Stream                                   Profiles                                                                                                  
php                                 7.2 [d][e]                               common [d], devel, minimal [i]                                                        
php                                 7.3                                      common [d], devel, minimal                            
php                                 7.4                                      common [d], devel, minimal                                                   


так что dnf надо еще допиливать свой функционал.
далее из стаьи на феодра кор я нашел инфо  о том что апгрейд и даунгреуд это абсолютно негарантирванные процессы в dnf то есть невсегда получается
сделать апгрейд\даунгрейд. что гарантирован только способ такой что мы удаляем текущее приложение с его rpm пакетами и ставим новую версию этого 
приложения. так что здесь как повезет может прокатит а может и нет.

Следущий момент. вот мы активироали какойто модуль с каким то стримом. далее если мы будем устанавлвать не модуль а просто rpm пакет через 
# dnf insyall имя_rpm_пакета
и если этот пакет входит в активированный стрим то будет установлена версия пакета ровно та которая указана в стриме.
далее. нсколко я понял в данный момент для модуля может быть активирован только один стрим. несколькьо стримов одновременно для модуля нельзя
активировать.



Далее. вот такой оригинальный сопосб апгрейда предлагается.

# dnf module reset php
# dnf module enable php:remi-8.1
# dnf update php\*

тоесть вначлале аутируется нужный модуль. а апгред идет по старинке без модуля через апгрейд rpm пакетов.


(что интересно centos 8 у нее lifecycle уже закончился а у centos 7 он до конца июня 2024 года. что за прикол).


Далее. в чем еще прикол модулей. вот раньше чтобы поставить php надо там и главнй пакет указать и кучу вспомогательных. а потом если ты хочешь удалить
весь этот php и его друзей то тебе надо иметь в какойто степени список этих пакетов а с модулями нет проблем.  сам dns помнит этот список . так что он вспомнит все пакеты 
и всех их удалит.




далее.
Еще раз покажу где искать инфо на счет лайфсайкл = https://access.redhat.com/support/policy/updates/rhel-app-streams-life-cycle
оттуда получаем что есть
- Application Streams
- Full Life Application Streams
- Rolling Streams

это все как бы разные лайфсайл штуки, и как бы разные версии php попадают в разные разновидности из указанных. и тогда из таблицы 
получается что для RH8 для php :

это для RH8 (видимо Centos 8 тоже).
php 7.2 - поддержвтется до мая 2021
php 7.1 - поддвержтвается до ноября 2021
php 7.4 - до мая 2029


далее. непонятно в чем разница между задизейбленным модулем и модулем который ни enable ни disable.

далее. вот еще важный контент:
There is a situation when a specific package has been installed first, and then a module has been installed after that. Example:

    $ dnf install ruby
    $ dnf module install ruby:2.6/default
In this case, running the dnf module remove command would not remove the ruby package, as DNF remembers that package has been explicitly installed.

To make the ruby package uninstalled with the dnf module remove command, run the following:

    $ dnf mark group ruby
    $ dnf module remove ruby:2.6/default
That is because DNF remembers a reason why a package has been installed. There are three, sorted from the strongest:

user

group

dependency

Because modules use the group reason, which is weaker than user used by the dnf install command, the package stays on the system after running the dnf module remove command. "Downgrading" it to group, however, makes the dnf module remove remove it as well.


далее. прикол. в dnf для centos 8 нет опции switch-to , она есть только в centos 9.
а теперь я (из статьи) описывают какой же аналог у команды switch-to:

# dnf module switch-to nodejs:8

это тоже самое что 
# dnf remove nodejs
# dnf module reset nodejs:8
# dnf module enable nodejs:10
# dnf install nodejs

тоесть switch-to это просто автоматизатор правльной последосталельности удаления прошлого стрима и установки нового. то что я делаю рукаим они обьеидинили в одну команду.
но в centos 8 этой опции нет.


далее. кстати в centos 8 и наверное и в 9  файл /bin/yum это символическая ссылка на dnf. так что вот так.




centos 7


переходим к centos 7.
здесь еще нет appstream он появится в centos 8
но можно посавить dnf и он просто будет как более качественная замена yum.
конфиги dnf хрнаить в точности там же где yum.


смотрим список всех репозиториев (включенных отключенных) в системе

# dnf repolist --all

и мы там увидим к удивлению кучу репозитриев например вида remi-*
это репозиториии с php разных версий.

так вот можно активировать эти репы и дизейблить.

вот например как мы вначале дизейблим все remi репы а потом активиуерм нужноую нам версию

# yum-config-manager --disable 'remi-php*'
# yum-config-manager --enable remi-php82
 
а потом можно ставить php

# dnf install php

вобщем важная суть про модули и centos 7 что dnf сюда можно поставить но под centos 7 нет репозитьриев нового поколения
которые имеют внутри себя модули и стримы. так что на centos 7 ставим приложения по старинке через rpm пакеты.

---------
